// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: c_compiler -c %s -I "common" -o %t2.o
// RUN: linker -o %t1%exeext  %t1.o %t2.o
// RUN: runtool %t1%exeext | checker "TEST PASSED"
// RUN: cxx_compiler cxx_rtti -c %s -I "common" -o %t2.o
// RUN: linker -o %t2%exeext  %t1.o %t2.o
// RUN: runtool %t2%exeext | checker "TEST PASSED"
#include "testsuite.h"
struct __attribute__((packed)) aBFs15i_BFs15i { signed int v1:15; signed int v2:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15i { signed int v1:15; signed int v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15i_BFs15i { signed int v1:15; signed int v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15i_BFs15ll { signed int v1:15; signed int v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15i_BFs15s { signed int v1:15; signed int v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15i_BFu15i { signed int v1:15; signed int v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15i_BFu15ll { signed int v1:15; signed int v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15i_BFu15s { signed int v1:15; signed int v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15ll { signed int v1:15; signed int v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15ll_BFs15i { signed int v1:15; signed int v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15ll_BFs15ll { signed int v1:15; signed int v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15ll_BFs15s { signed int v1:15; signed int v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15ll_BFu15i { signed int v1:15; signed int v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15ll_BFu15ll { signed int v1:15; signed int v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15ll_BFu15s { signed int v1:15; signed int v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15s { signed int v1:15; signed int v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15s_BFs15i { signed int v1:15; signed int v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15s_BFs15ll { signed int v1:15; signed int v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15s_BFs15s { signed int v1:15; signed int v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15s_BFu15i { signed int v1:15; signed int v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15s_BFu15ll { signed int v1:15; signed int v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFs15s_BFu15s { signed int v1:15; signed int v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15i { signed int v1:15; signed int v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15i_BFs15i { signed int v1:15; signed int v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15i_BFs15ll { signed int v1:15; signed int v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15i_BFs15s { signed int v1:15; signed int v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15i_BFu15i { signed int v1:15; signed int v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15i_BFu15ll { signed int v1:15; signed int v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15i_BFu15s { signed int v1:15; signed int v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15ll { signed int v1:15; signed int v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15ll_BFs15i { signed int v1:15; signed int v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15ll_BFs15ll { signed int v1:15; signed int v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15ll_BFs15s { signed int v1:15; signed int v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15ll_BFu15i { signed int v1:15; signed int v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15ll_BFu15ll { signed int v1:15; signed int v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15ll_BFu15s { signed int v1:15; signed int v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15s { signed int v1:15; signed int v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15s_BFs15i { signed int v1:15; signed int v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15s_BFs15ll { signed int v1:15; signed int v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15s_BFs15s { signed int v1:15; signed int v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15s_BFu15i { signed int v1:15; signed int v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15s_BFu15ll { signed int v1:15; signed int v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15i_BFu15s_BFu15s { signed int v1:15; signed int v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll { signed int v1:15; signed long long v2:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15i { signed int v1:15; signed long long v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15i_BFs15i { signed int v1:15; signed long long v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15i_BFs15ll { signed int v1:15; signed long long v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15i_BFs15s { signed int v1:15; signed long long v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15i_BFu15i { signed int v1:15; signed long long v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15i_BFu15ll { signed int v1:15; signed long long v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15i_BFu15s { signed int v1:15; signed long long v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15ll { signed int v1:15; signed long long v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15ll_BFs15i { signed int v1:15; signed long long v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15ll_BFs15ll { signed int v1:15; signed long long v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15ll_BFs15s { signed int v1:15; signed long long v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15ll_BFu15i { signed int v1:15; signed long long v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15ll_BFu15ll { signed int v1:15; signed long long v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15ll_BFu15s { signed int v1:15; signed long long v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15s { signed int v1:15; signed long long v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15s_BFs15i { signed int v1:15; signed long long v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15s_BFs15ll { signed int v1:15; signed long long v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15s_BFs15s { signed int v1:15; signed long long v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15s_BFu15i { signed int v1:15; signed long long v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15s_BFu15ll { signed int v1:15; signed long long v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFs15s_BFu15s { signed int v1:15; signed long long v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15i { signed int v1:15; signed long long v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15i_BFs15i { signed int v1:15; signed long long v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15i_BFs15ll { signed int v1:15; signed long long v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15i_BFs15s { signed int v1:15; signed long long v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15i_BFu15i { signed int v1:15; signed long long v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15i_BFu15ll { signed int v1:15; signed long long v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15i_BFu15s { signed int v1:15; signed long long v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15ll { signed int v1:15; signed long long v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15ll_BFs15i { signed int v1:15; signed long long v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15ll_BFs15ll { signed int v1:15; signed long long v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15ll_BFs15s { signed int v1:15; signed long long v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15ll_BFu15i { signed int v1:15; signed long long v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15ll_BFu15ll { signed int v1:15; signed long long v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15ll_BFu15s { signed int v1:15; signed long long v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15s { signed int v1:15; signed long long v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15s_BFs15i { signed int v1:15; signed long long v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15s_BFs15ll { signed int v1:15; signed long long v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15s_BFs15s { signed int v1:15; signed long long v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15s_BFu15i { signed int v1:15; signed long long v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15s_BFu15ll { signed int v1:15; signed long long v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15ll_BFu15s_BFu15s { signed int v1:15; signed long long v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s { signed int v1:15; signed short v2:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15i { signed int v1:15; signed short v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15i_BFs15i { signed int v1:15; signed short v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15i_BFs15ll { signed int v1:15; signed short v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15i_BFs15s { signed int v1:15; signed short v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15i_BFu15i { signed int v1:15; signed short v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15i_BFu15ll { signed int v1:15; signed short v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15i_BFu15s { signed int v1:15; signed short v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15ll { signed int v1:15; signed short v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15ll_BFs15i { signed int v1:15; signed short v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15ll_BFs15ll { signed int v1:15; signed short v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15ll_BFs15s { signed int v1:15; signed short v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15ll_BFu15i { signed int v1:15; signed short v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15ll_BFu15ll { signed int v1:15; signed short v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15ll_BFu15s { signed int v1:15; signed short v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15s { signed int v1:15; signed short v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15s_BFs15i { signed int v1:15; signed short v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15s_BFs15ll { signed int v1:15; signed short v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15s_BFs15s { signed int v1:15; signed short v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15s_BFu15i { signed int v1:15; signed short v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15s_BFu15ll { signed int v1:15; signed short v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFs15s_BFu15s { signed int v1:15; signed short v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15i { signed int v1:15; signed short v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15i_BFs15i { signed int v1:15; signed short v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15i_BFs15ll { signed int v1:15; signed short v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15i_BFs15s { signed int v1:15; signed short v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15i_BFu15i { signed int v1:15; signed short v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15i_BFu15ll { signed int v1:15; signed short v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15i_BFu15s { signed int v1:15; signed short v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15ll { signed int v1:15; signed short v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15ll_BFs15i { signed int v1:15; signed short v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15ll_BFs15ll { signed int v1:15; signed short v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15ll_BFs15s { signed int v1:15; signed short v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15ll_BFu15i { signed int v1:15; signed short v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15ll_BFu15ll { signed int v1:15; signed short v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15ll_BFu15s { signed int v1:15; signed short v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15s { signed int v1:15; signed short v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15s_BFs15i { signed int v1:15; signed short v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15s_BFs15ll { signed int v1:15; signed short v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15s_BFs15s { signed int v1:15; signed short v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15s_BFu15i { signed int v1:15; signed short v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15s_BFu15ll { signed int v1:15; signed short v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFs15s_BFu15s_BFu15s { signed int v1:15; signed short v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i { signed int v1:15; unsigned int v2:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15i { signed int v1:15; unsigned int v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15i_BFs15i { signed int v1:15; unsigned int v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15i_BFs15ll { signed int v1:15; unsigned int v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15i_BFs15s { signed int v1:15; unsigned int v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15i_BFu15i { signed int v1:15; unsigned int v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15i_BFu15ll { signed int v1:15; unsigned int v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15i_BFu15s { signed int v1:15; unsigned int v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15ll { signed int v1:15; unsigned int v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15ll_BFs15i { signed int v1:15; unsigned int v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15ll_BFs15ll { signed int v1:15; unsigned int v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15ll_BFs15s { signed int v1:15; unsigned int v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15ll_BFu15i { signed int v1:15; unsigned int v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15ll_BFu15ll { signed int v1:15; unsigned int v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15ll_BFu15s { signed int v1:15; unsigned int v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15s { signed int v1:15; unsigned int v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15s_BFs15i { signed int v1:15; unsigned int v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15s_BFs15ll { signed int v1:15; unsigned int v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15s_BFs15s { signed int v1:15; unsigned int v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15s_BFu15i { signed int v1:15; unsigned int v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15s_BFu15ll { signed int v1:15; unsigned int v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFs15s_BFu15s { signed int v1:15; unsigned int v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15i { signed int v1:15; unsigned int v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15i_BFs15i { signed int v1:15; unsigned int v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15i_BFs15ll { signed int v1:15; unsigned int v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15i_BFs15s { signed int v1:15; unsigned int v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15i_BFu15i { signed int v1:15; unsigned int v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15i_BFu15ll { signed int v1:15; unsigned int v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15i_BFu15s { signed int v1:15; unsigned int v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15ll { signed int v1:15; unsigned int v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15ll_BFs15i { signed int v1:15; unsigned int v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15ll_BFs15ll { signed int v1:15; unsigned int v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15ll_BFs15s { signed int v1:15; unsigned int v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15ll_BFu15i { signed int v1:15; unsigned int v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15ll_BFu15ll { signed int v1:15; unsigned int v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15ll_BFu15s { signed int v1:15; unsigned int v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15s { signed int v1:15; unsigned int v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15s_BFs15i { signed int v1:15; unsigned int v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15s_BFs15ll { signed int v1:15; unsigned int v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15s_BFs15s { signed int v1:15; unsigned int v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15s_BFu15i { signed int v1:15; unsigned int v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15s_BFu15ll { signed int v1:15; unsigned int v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15i_BFu15s_BFu15s { signed int v1:15; unsigned int v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll { signed int v1:15; unsigned long long v2:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15i { signed int v1:15; unsigned long long v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15i_BFs15i { signed int v1:15; unsigned long long v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15i_BFs15ll { signed int v1:15; unsigned long long v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15i_BFs15s { signed int v1:15; unsigned long long v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15i_BFu15i { signed int v1:15; unsigned long long v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15i_BFu15ll { signed int v1:15; unsigned long long v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15i_BFu15s { signed int v1:15; unsigned long long v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15ll { signed int v1:15; unsigned long long v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15ll_BFs15i { signed int v1:15; unsigned long long v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15ll_BFs15ll { signed int v1:15; unsigned long long v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15ll_BFs15s { signed int v1:15; unsigned long long v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15ll_BFu15i { signed int v1:15; unsigned long long v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15ll_BFu15ll { signed int v1:15; unsigned long long v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15ll_BFu15s { signed int v1:15; unsigned long long v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15s { signed int v1:15; unsigned long long v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15s_BFs15i { signed int v1:15; unsigned long long v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15s_BFs15ll { signed int v1:15; unsigned long long v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15s_BFs15s { signed int v1:15; unsigned long long v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15s_BFu15i { signed int v1:15; unsigned long long v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15s_BFu15ll { signed int v1:15; unsigned long long v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFs15s_BFu15s { signed int v1:15; unsigned long long v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15i { signed int v1:15; unsigned long long v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15i_BFs15i { signed int v1:15; unsigned long long v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15i_BFs15ll { signed int v1:15; unsigned long long v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15i_BFs15s { signed int v1:15; unsigned long long v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15i_BFu15i { signed int v1:15; unsigned long long v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15i_BFu15ll { signed int v1:15; unsigned long long v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15i_BFu15s { signed int v1:15; unsigned long long v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15ll { signed int v1:15; unsigned long long v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15ll_BFs15i { signed int v1:15; unsigned long long v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15ll_BFs15ll { signed int v1:15; unsigned long long v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15ll_BFs15s { signed int v1:15; unsigned long long v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15ll_BFu15i { signed int v1:15; unsigned long long v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15ll_BFu15ll { signed int v1:15; unsigned long long v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15ll_BFu15s { signed int v1:15; unsigned long long v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15s { signed int v1:15; unsigned long long v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15s_BFs15i { signed int v1:15; unsigned long long v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15s_BFs15ll { signed int v1:15; unsigned long long v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15s_BFs15s { signed int v1:15; unsigned long long v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15s_BFu15i { signed int v1:15; unsigned long long v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15s_BFu15ll { signed int v1:15; unsigned long long v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15ll_BFu15s_BFu15s { signed int v1:15; unsigned long long v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s { signed int v1:15; unsigned short v2:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15i { signed int v1:15; unsigned short v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15i_BFs15i { signed int v1:15; unsigned short v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15i_BFs15ll { signed int v1:15; unsigned short v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15i_BFs15s { signed int v1:15; unsigned short v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15i_BFu15i { signed int v1:15; unsigned short v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15i_BFu15ll { signed int v1:15; unsigned short v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15i_BFu15s { signed int v1:15; unsigned short v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15ll { signed int v1:15; unsigned short v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15ll_BFs15i { signed int v1:15; unsigned short v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15ll_BFs15ll { signed int v1:15; unsigned short v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15ll_BFs15s { signed int v1:15; unsigned short v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15ll_BFu15i { signed int v1:15; unsigned short v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15ll_BFu15ll { signed int v1:15; unsigned short v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15ll_BFu15s { signed int v1:15; unsigned short v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15s { signed int v1:15; unsigned short v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15s_BFs15i { signed int v1:15; unsigned short v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15s_BFs15ll { signed int v1:15; unsigned short v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15s_BFs15s { signed int v1:15; unsigned short v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15s_BFu15i { signed int v1:15; unsigned short v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15s_BFu15ll { signed int v1:15; unsigned short v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFs15s_BFu15s { signed int v1:15; unsigned short v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15i { signed int v1:15; unsigned short v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15i_BFs15i { signed int v1:15; unsigned short v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15i_BFs15ll { signed int v1:15; unsigned short v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15i_BFs15s { signed int v1:15; unsigned short v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15i_BFu15i { signed int v1:15; unsigned short v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15i_BFu15ll { signed int v1:15; unsigned short v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15i_BFu15s { signed int v1:15; unsigned short v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15ll { signed int v1:15; unsigned short v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15ll_BFs15i { signed int v1:15; unsigned short v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15ll_BFs15ll { signed int v1:15; unsigned short v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15ll_BFs15s { signed int v1:15; unsigned short v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15ll_BFu15i { signed int v1:15; unsigned short v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15ll_BFu15ll { signed int v1:15; unsigned short v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15ll_BFu15s { signed int v1:15; unsigned short v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15s { signed int v1:15; unsigned short v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15s_BFs15i { signed int v1:15; unsigned short v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15s_BFs15ll { signed int v1:15; unsigned short v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15s_BFs15s { signed int v1:15; unsigned short v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15s_BFu15i { signed int v1:15; unsigned short v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15s_BFu15ll { signed int v1:15; unsigned short v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15i_BFu15s_BFu15s_BFu15s { signed int v1:15; unsigned short v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i { signed long long v1:15; signed int v2:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15i { signed long long v1:15; signed int v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15i_BFs15i { signed long long v1:15; signed int v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15i_BFs15ll { signed long long v1:15; signed int v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15i_BFs15s { signed long long v1:15; signed int v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15i_BFu15i { signed long long v1:15; signed int v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15i_BFu15ll { signed long long v1:15; signed int v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15i_BFu15s { signed long long v1:15; signed int v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15ll { signed long long v1:15; signed int v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15ll_BFs15i { signed long long v1:15; signed int v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15ll_BFs15ll { signed long long v1:15; signed int v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15ll_BFs15s { signed long long v1:15; signed int v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15ll_BFu15i { signed long long v1:15; signed int v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15ll_BFu15ll { signed long long v1:15; signed int v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15ll_BFu15s { signed long long v1:15; signed int v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15s { signed long long v1:15; signed int v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15s_BFs15i { signed long long v1:15; signed int v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15s_BFs15ll { signed long long v1:15; signed int v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15s_BFs15s { signed long long v1:15; signed int v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15s_BFu15i { signed long long v1:15; signed int v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15s_BFu15ll { signed long long v1:15; signed int v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFs15s_BFu15s { signed long long v1:15; signed int v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15i { signed long long v1:15; signed int v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15i_BFs15i { signed long long v1:15; signed int v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15i_BFs15ll { signed long long v1:15; signed int v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15i_BFs15s { signed long long v1:15; signed int v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15i_BFu15i { signed long long v1:15; signed int v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15i_BFu15ll { signed long long v1:15; signed int v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15i_BFu15s { signed long long v1:15; signed int v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15ll { signed long long v1:15; signed int v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15ll_BFs15i { signed long long v1:15; signed int v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15ll_BFs15ll { signed long long v1:15; signed int v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15ll_BFs15s { signed long long v1:15; signed int v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15ll_BFu15i { signed long long v1:15; signed int v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15ll_BFu15ll { signed long long v1:15; signed int v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15ll_BFu15s { signed long long v1:15; signed int v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15s { signed long long v1:15; signed int v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15s_BFs15i { signed long long v1:15; signed int v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15s_BFs15ll { signed long long v1:15; signed int v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15s_BFs15s { signed long long v1:15; signed int v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15s_BFu15i { signed long long v1:15; signed int v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15s_BFu15ll { signed long long v1:15; signed int v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15i_BFu15s_BFu15s { signed long long v1:15; signed int v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll { signed long long v1:15; signed long long v2:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15i { signed long long v1:15; signed long long v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15i_BFs15i { signed long long v1:15; signed long long v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15i_BFs15ll { signed long long v1:15; signed long long v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15i_BFs15s { signed long long v1:15; signed long long v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15i_BFu15i { signed long long v1:15; signed long long v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15i_BFu15ll { signed long long v1:15; signed long long v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15i_BFu15s { signed long long v1:15; signed long long v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15ll { signed long long v1:15; signed long long v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15ll_BFs15i { signed long long v1:15; signed long long v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15ll_BFs15ll { signed long long v1:15; signed long long v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15ll_BFs15s { signed long long v1:15; signed long long v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15ll_BFu15i { signed long long v1:15; signed long long v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15ll_BFu15ll { signed long long v1:15; signed long long v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15ll_BFu15s { signed long long v1:15; signed long long v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15s { signed long long v1:15; signed long long v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15s_BFs15i { signed long long v1:15; signed long long v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15s_BFs15ll { signed long long v1:15; signed long long v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15s_BFs15s { signed long long v1:15; signed long long v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15s_BFu15i { signed long long v1:15; signed long long v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15s_BFu15ll { signed long long v1:15; signed long long v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFs15s_BFu15s { signed long long v1:15; signed long long v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15i { signed long long v1:15; signed long long v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15i_BFs15i { signed long long v1:15; signed long long v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15i_BFs15ll { signed long long v1:15; signed long long v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15i_BFs15s { signed long long v1:15; signed long long v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15i_BFu15i { signed long long v1:15; signed long long v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15i_BFu15ll { signed long long v1:15; signed long long v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15i_BFu15s { signed long long v1:15; signed long long v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15ll { signed long long v1:15; signed long long v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15ll_BFs15i { signed long long v1:15; signed long long v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15ll_BFs15ll { signed long long v1:15; signed long long v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15ll_BFs15s { signed long long v1:15; signed long long v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15ll_BFu15i { signed long long v1:15; signed long long v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15ll_BFu15ll { signed long long v1:15; signed long long v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15ll_BFu15s { signed long long v1:15; signed long long v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15s { signed long long v1:15; signed long long v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15s_BFs15i { signed long long v1:15; signed long long v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15s_BFs15ll { signed long long v1:15; signed long long v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15s_BFs15s { signed long long v1:15; signed long long v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15s_BFu15i { signed long long v1:15; signed long long v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15s_BFu15ll { signed long long v1:15; signed long long v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15ll_BFu15s_BFu15s { signed long long v1:15; signed long long v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s { signed long long v1:15; signed short v2:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15i { signed long long v1:15; signed short v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15i_BFs15i { signed long long v1:15; signed short v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15i_BFs15ll { signed long long v1:15; signed short v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15i_BFs15s { signed long long v1:15; signed short v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15i_BFu15i { signed long long v1:15; signed short v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15i_BFu15ll { signed long long v1:15; signed short v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15i_BFu15s { signed long long v1:15; signed short v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15ll { signed long long v1:15; signed short v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15ll_BFs15i { signed long long v1:15; signed short v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15ll_BFs15ll { signed long long v1:15; signed short v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15ll_BFs15s { signed long long v1:15; signed short v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15ll_BFu15i { signed long long v1:15; signed short v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15ll_BFu15ll { signed long long v1:15; signed short v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15ll_BFu15s { signed long long v1:15; signed short v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15s { signed long long v1:15; signed short v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15s_BFs15i { signed long long v1:15; signed short v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15s_BFs15ll { signed long long v1:15; signed short v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15s_BFs15s { signed long long v1:15; signed short v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15s_BFu15i { signed long long v1:15; signed short v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15s_BFu15ll { signed long long v1:15; signed short v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFs15s_BFu15s { signed long long v1:15; signed short v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15i { signed long long v1:15; signed short v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15i_BFs15i { signed long long v1:15; signed short v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15i_BFs15ll { signed long long v1:15; signed short v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15i_BFs15s { signed long long v1:15; signed short v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15i_BFu15i { signed long long v1:15; signed short v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15i_BFu15ll { signed long long v1:15; signed short v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15i_BFu15s { signed long long v1:15; signed short v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15ll { signed long long v1:15; signed short v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15ll_BFs15i { signed long long v1:15; signed short v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15ll_BFs15ll { signed long long v1:15; signed short v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15ll_BFs15s { signed long long v1:15; signed short v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15ll_BFu15i { signed long long v1:15; signed short v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15ll_BFu15ll { signed long long v1:15; signed short v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15ll_BFu15s { signed long long v1:15; signed short v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15s { signed long long v1:15; signed short v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15s_BFs15i { signed long long v1:15; signed short v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15s_BFs15ll { signed long long v1:15; signed short v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15s_BFs15s { signed long long v1:15; signed short v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15s_BFu15i { signed long long v1:15; signed short v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15s_BFu15ll { signed long long v1:15; signed short v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFs15s_BFu15s_BFu15s { signed long long v1:15; signed short v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i { signed long long v1:15; unsigned int v2:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15i { signed long long v1:15; unsigned int v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15i_BFs15i { signed long long v1:15; unsigned int v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15i_BFs15ll { signed long long v1:15; unsigned int v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15i_BFs15s { signed long long v1:15; unsigned int v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15i_BFu15i { signed long long v1:15; unsigned int v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15i_BFu15ll { signed long long v1:15; unsigned int v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15i_BFu15s { signed long long v1:15; unsigned int v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15ll { signed long long v1:15; unsigned int v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15ll_BFs15i { signed long long v1:15; unsigned int v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15ll_BFs15ll { signed long long v1:15; unsigned int v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15ll_BFs15s { signed long long v1:15; unsigned int v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15ll_BFu15i { signed long long v1:15; unsigned int v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15ll_BFu15ll { signed long long v1:15; unsigned int v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15ll_BFu15s { signed long long v1:15; unsigned int v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15s { signed long long v1:15; unsigned int v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15s_BFs15i { signed long long v1:15; unsigned int v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15s_BFs15ll { signed long long v1:15; unsigned int v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15s_BFs15s { signed long long v1:15; unsigned int v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15s_BFu15i { signed long long v1:15; unsigned int v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15s_BFu15ll { signed long long v1:15; unsigned int v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFs15s_BFu15s { signed long long v1:15; unsigned int v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15i { signed long long v1:15; unsigned int v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15i_BFs15i { signed long long v1:15; unsigned int v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15i_BFs15ll { signed long long v1:15; unsigned int v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15i_BFs15s { signed long long v1:15; unsigned int v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15i_BFu15i { signed long long v1:15; unsigned int v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15i_BFu15ll { signed long long v1:15; unsigned int v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15i_BFu15s { signed long long v1:15; unsigned int v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15ll { signed long long v1:15; unsigned int v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15ll_BFs15i { signed long long v1:15; unsigned int v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15ll_BFs15ll { signed long long v1:15; unsigned int v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15ll_BFs15s { signed long long v1:15; unsigned int v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15ll_BFu15i { signed long long v1:15; unsigned int v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15ll_BFu15ll { signed long long v1:15; unsigned int v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15ll_BFu15s { signed long long v1:15; unsigned int v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15s { signed long long v1:15; unsigned int v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15s_BFs15i { signed long long v1:15; unsigned int v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15s_BFs15ll { signed long long v1:15; unsigned int v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15s_BFs15s { signed long long v1:15; unsigned int v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15s_BFu15i { signed long long v1:15; unsigned int v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15s_BFu15ll { signed long long v1:15; unsigned int v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15i_BFu15s_BFu15s { signed long long v1:15; unsigned int v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll { signed long long v1:15; unsigned long long v2:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15i { signed long long v1:15; unsigned long long v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15i_BFs15i { signed long long v1:15; unsigned long long v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15i_BFs15ll { signed long long v1:15; unsigned long long v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15i_BFs15s { signed long long v1:15; unsigned long long v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15i_BFu15i { signed long long v1:15; unsigned long long v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15i_BFu15ll { signed long long v1:15; unsigned long long v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15i_BFu15s { signed long long v1:15; unsigned long long v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15ll { signed long long v1:15; unsigned long long v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15ll_BFs15i { signed long long v1:15; unsigned long long v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15ll_BFs15ll { signed long long v1:15; unsigned long long v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15ll_BFs15s { signed long long v1:15; unsigned long long v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15ll_BFu15i { signed long long v1:15; unsigned long long v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15ll_BFu15ll { signed long long v1:15; unsigned long long v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15ll_BFu15s { signed long long v1:15; unsigned long long v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15s { signed long long v1:15; unsigned long long v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15s_BFs15i { signed long long v1:15; unsigned long long v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15s_BFs15ll { signed long long v1:15; unsigned long long v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15s_BFs15s { signed long long v1:15; unsigned long long v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15s_BFu15i { signed long long v1:15; unsigned long long v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15s_BFu15ll { signed long long v1:15; unsigned long long v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFs15s_BFu15s { signed long long v1:15; unsigned long long v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15i { signed long long v1:15; unsigned long long v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15i_BFs15i { signed long long v1:15; unsigned long long v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15i_BFs15ll { signed long long v1:15; unsigned long long v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15i_BFs15s { signed long long v1:15; unsigned long long v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15i_BFu15i { signed long long v1:15; unsigned long long v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15i_BFu15ll { signed long long v1:15; unsigned long long v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15i_BFu15s { signed long long v1:15; unsigned long long v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15ll { signed long long v1:15; unsigned long long v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15ll_BFs15i { signed long long v1:15; unsigned long long v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15ll_BFs15ll { signed long long v1:15; unsigned long long v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15ll_BFs15s { signed long long v1:15; unsigned long long v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15ll_BFu15i { signed long long v1:15; unsigned long long v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15ll_BFu15ll { signed long long v1:15; unsigned long long v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15ll_BFu15s { signed long long v1:15; unsigned long long v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15s { signed long long v1:15; unsigned long long v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15s_BFs15i { signed long long v1:15; unsigned long long v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15s_BFs15ll { signed long long v1:15; unsigned long long v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15s_BFs15s { signed long long v1:15; unsigned long long v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15s_BFu15i { signed long long v1:15; unsigned long long v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15s_BFu15ll { signed long long v1:15; unsigned long long v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15ll_BFu15s_BFu15s { signed long long v1:15; unsigned long long v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s { signed long long v1:15; unsigned short v2:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15i { signed long long v1:15; unsigned short v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15i_BFs15i { signed long long v1:15; unsigned short v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15i_BFs15ll { signed long long v1:15; unsigned short v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15i_BFs15s { signed long long v1:15; unsigned short v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15i_BFu15i { signed long long v1:15; unsigned short v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15i_BFu15ll { signed long long v1:15; unsigned short v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15i_BFu15s { signed long long v1:15; unsigned short v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15ll { signed long long v1:15; unsigned short v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15ll_BFs15i { signed long long v1:15; unsigned short v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15ll_BFs15ll { signed long long v1:15; unsigned short v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15ll_BFs15s { signed long long v1:15; unsigned short v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15ll_BFu15i { signed long long v1:15; unsigned short v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15ll_BFu15ll { signed long long v1:15; unsigned short v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15ll_BFu15s { signed long long v1:15; unsigned short v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15s { signed long long v1:15; unsigned short v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15s_BFs15i { signed long long v1:15; unsigned short v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15s_BFs15ll { signed long long v1:15; unsigned short v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15s_BFs15s { signed long long v1:15; unsigned short v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15s_BFu15i { signed long long v1:15; unsigned short v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15s_BFu15ll { signed long long v1:15; unsigned short v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFs15s_BFu15s { signed long long v1:15; unsigned short v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15i { signed long long v1:15; unsigned short v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15i_BFs15i { signed long long v1:15; unsigned short v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15i_BFs15ll { signed long long v1:15; unsigned short v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15i_BFs15s { signed long long v1:15; unsigned short v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15i_BFu15i { signed long long v1:15; unsigned short v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15i_BFu15ll { signed long long v1:15; unsigned short v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15i_BFu15s { signed long long v1:15; unsigned short v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15ll { signed long long v1:15; unsigned short v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15ll_BFs15i { signed long long v1:15; unsigned short v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15ll_BFs15ll { signed long long v1:15; unsigned short v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15ll_BFs15s { signed long long v1:15; unsigned short v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15ll_BFu15i { signed long long v1:15; unsigned short v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15ll_BFu15ll { signed long long v1:15; unsigned short v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15ll_BFu15s { signed long long v1:15; unsigned short v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15s { signed long long v1:15; unsigned short v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15s_BFs15i { signed long long v1:15; unsigned short v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15s_BFs15ll { signed long long v1:15; unsigned short v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15s_BFs15s { signed long long v1:15; unsigned short v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15s_BFu15i { signed long long v1:15; unsigned short v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15s_BFu15ll { signed long long v1:15; unsigned short v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15ll_BFu15s_BFu15s_BFu15s { signed long long v1:15; unsigned short v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i { signed short v1:15; signed int v2:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15i { signed short v1:15; signed int v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15i_BFs15i { signed short v1:15; signed int v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15i_BFs15ll { signed short v1:15; signed int v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15i_BFs15s { signed short v1:15; signed int v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15i_BFu15i { signed short v1:15; signed int v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15i_BFu15ll { signed short v1:15; signed int v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15i_BFu15s { signed short v1:15; signed int v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15ll { signed short v1:15; signed int v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15ll_BFs15i { signed short v1:15; signed int v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15ll_BFs15ll { signed short v1:15; signed int v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15ll_BFs15s { signed short v1:15; signed int v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15ll_BFu15i { signed short v1:15; signed int v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15ll_BFu15ll { signed short v1:15; signed int v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15ll_BFu15s { signed short v1:15; signed int v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15s { signed short v1:15; signed int v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15s_BFs15i { signed short v1:15; signed int v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15s_BFs15ll { signed short v1:15; signed int v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15s_BFs15s { signed short v1:15; signed int v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15s_BFu15i { signed short v1:15; signed int v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15s_BFu15ll { signed short v1:15; signed int v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFs15s_BFu15s { signed short v1:15; signed int v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15i { signed short v1:15; signed int v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15i_BFs15i { signed short v1:15; signed int v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15i_BFs15ll { signed short v1:15; signed int v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15i_BFs15s { signed short v1:15; signed int v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15i_BFu15i { signed short v1:15; signed int v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15i_BFu15ll { signed short v1:15; signed int v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15i_BFu15s { signed short v1:15; signed int v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15ll { signed short v1:15; signed int v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15ll_BFs15i { signed short v1:15; signed int v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15ll_BFs15ll { signed short v1:15; signed int v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15ll_BFs15s { signed short v1:15; signed int v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15ll_BFu15i { signed short v1:15; signed int v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15ll_BFu15ll { signed short v1:15; signed int v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15ll_BFu15s { signed short v1:15; signed int v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15s { signed short v1:15; signed int v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15s_BFs15i { signed short v1:15; signed int v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15s_BFs15ll { signed short v1:15; signed int v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15s_BFs15s { signed short v1:15; signed int v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15s_BFu15i { signed short v1:15; signed int v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15s_BFu15ll { signed short v1:15; signed int v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15i_BFu15s_BFu15s { signed short v1:15; signed int v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll { signed short v1:15; signed long long v2:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15i { signed short v1:15; signed long long v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15i_BFs15i { signed short v1:15; signed long long v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15i_BFs15ll { signed short v1:15; signed long long v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15i_BFs15s { signed short v1:15; signed long long v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15i_BFu15i { signed short v1:15; signed long long v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15i_BFu15ll { signed short v1:15; signed long long v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15i_BFu15s { signed short v1:15; signed long long v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15ll { signed short v1:15; signed long long v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15ll_BFs15i { signed short v1:15; signed long long v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15ll_BFs15ll { signed short v1:15; signed long long v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15ll_BFs15s { signed short v1:15; signed long long v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15ll_BFu15i { signed short v1:15; signed long long v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15ll_BFu15ll { signed short v1:15; signed long long v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15ll_BFu15s { signed short v1:15; signed long long v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15s { signed short v1:15; signed long long v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15s_BFs15i { signed short v1:15; signed long long v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15s_BFs15ll { signed short v1:15; signed long long v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15s_BFs15s { signed short v1:15; signed long long v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15s_BFu15i { signed short v1:15; signed long long v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15s_BFu15ll { signed short v1:15; signed long long v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFs15s_BFu15s { signed short v1:15; signed long long v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15i { signed short v1:15; signed long long v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15i_BFs15i { signed short v1:15; signed long long v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15i_BFs15ll { signed short v1:15; signed long long v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15i_BFs15s { signed short v1:15; signed long long v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15i_BFu15i { signed short v1:15; signed long long v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15i_BFu15ll { signed short v1:15; signed long long v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15i_BFu15s { signed short v1:15; signed long long v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15ll { signed short v1:15; signed long long v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15ll_BFs15i { signed short v1:15; signed long long v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15ll_BFs15ll { signed short v1:15; signed long long v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15ll_BFs15s { signed short v1:15; signed long long v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15ll_BFu15i { signed short v1:15; signed long long v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15ll_BFu15ll { signed short v1:15; signed long long v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15ll_BFu15s { signed short v1:15; signed long long v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15s { signed short v1:15; signed long long v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15s_BFs15i { signed short v1:15; signed long long v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15s_BFs15ll { signed short v1:15; signed long long v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15s_BFs15s { signed short v1:15; signed long long v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15s_BFu15i { signed short v1:15; signed long long v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15s_BFu15ll { signed short v1:15; signed long long v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15ll_BFu15s_BFu15s { signed short v1:15; signed long long v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s { signed short v1:15; signed short v2:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15i { signed short v1:15; signed short v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15i_BFs15i { signed short v1:15; signed short v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15i_BFs15ll { signed short v1:15; signed short v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15i_BFs15s { signed short v1:15; signed short v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15i_BFu15i { signed short v1:15; signed short v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15i_BFu15ll { signed short v1:15; signed short v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15i_BFu15s { signed short v1:15; signed short v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15ll { signed short v1:15; signed short v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15ll_BFs15i { signed short v1:15; signed short v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15ll_BFs15ll { signed short v1:15; signed short v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15ll_BFs15s { signed short v1:15; signed short v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15ll_BFu15i { signed short v1:15; signed short v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15ll_BFu15ll { signed short v1:15; signed short v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15ll_BFu15s { signed short v1:15; signed short v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15s { signed short v1:15; signed short v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15s_BFs15i { signed short v1:15; signed short v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15s_BFs15ll { signed short v1:15; signed short v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15s_BFs15s { signed short v1:15; signed short v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15s_BFu15i { signed short v1:15; signed short v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15s_BFu15ll { signed short v1:15; signed short v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFs15s_BFu15s { signed short v1:15; signed short v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15i { signed short v1:15; signed short v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15i_BFs15i { signed short v1:15; signed short v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15i_BFs15ll { signed short v1:15; signed short v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15i_BFs15s { signed short v1:15; signed short v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15i_BFu15i { signed short v1:15; signed short v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15i_BFu15ll { signed short v1:15; signed short v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15i_BFu15s { signed short v1:15; signed short v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15ll { signed short v1:15; signed short v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15ll_BFs15i { signed short v1:15; signed short v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15ll_BFs15ll { signed short v1:15; signed short v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15ll_BFs15s { signed short v1:15; signed short v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15ll_BFu15i { signed short v1:15; signed short v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15ll_BFu15ll { signed short v1:15; signed short v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15ll_BFu15s { signed short v1:15; signed short v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15s { signed short v1:15; signed short v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15s_BFs15i { signed short v1:15; signed short v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15s_BFs15ll { signed short v1:15; signed short v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15s_BFs15s { signed short v1:15; signed short v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15s_BFu15i { signed short v1:15; signed short v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15s_BFu15ll { signed short v1:15; signed short v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFs15s_BFu15s_BFu15s { signed short v1:15; signed short v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i { signed short v1:15; unsigned int v2:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15i { signed short v1:15; unsigned int v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15i_BFs15i { signed short v1:15; unsigned int v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15i_BFs15ll { signed short v1:15; unsigned int v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15i_BFs15s { signed short v1:15; unsigned int v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15i_BFu15i { signed short v1:15; unsigned int v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15i_BFu15ll { signed short v1:15; unsigned int v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15i_BFu15s { signed short v1:15; unsigned int v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15ll { signed short v1:15; unsigned int v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15ll_BFs15i { signed short v1:15; unsigned int v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15ll_BFs15ll { signed short v1:15; unsigned int v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15ll_BFs15s { signed short v1:15; unsigned int v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15ll_BFu15i { signed short v1:15; unsigned int v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15ll_BFu15ll { signed short v1:15; unsigned int v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15ll_BFu15s { signed short v1:15; unsigned int v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15s { signed short v1:15; unsigned int v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15s_BFs15i { signed short v1:15; unsigned int v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15s_BFs15ll { signed short v1:15; unsigned int v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15s_BFs15s { signed short v1:15; unsigned int v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15s_BFu15i { signed short v1:15; unsigned int v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15s_BFu15ll { signed short v1:15; unsigned int v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFs15s_BFu15s { signed short v1:15; unsigned int v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15i { signed short v1:15; unsigned int v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15i_BFs15i { signed short v1:15; unsigned int v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15i_BFs15ll { signed short v1:15; unsigned int v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15i_BFs15s { signed short v1:15; unsigned int v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15i_BFu15i { signed short v1:15; unsigned int v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15i_BFu15ll { signed short v1:15; unsigned int v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15i_BFu15s { signed short v1:15; unsigned int v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15ll { signed short v1:15; unsigned int v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15ll_BFs15i { signed short v1:15; unsigned int v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15ll_BFs15ll { signed short v1:15; unsigned int v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15ll_BFs15s { signed short v1:15; unsigned int v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15ll_BFu15i { signed short v1:15; unsigned int v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15ll_BFu15ll { signed short v1:15; unsigned int v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15ll_BFu15s { signed short v1:15; unsigned int v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15s { signed short v1:15; unsigned int v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15s_BFs15i { signed short v1:15; unsigned int v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15s_BFs15ll { signed short v1:15; unsigned int v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15s_BFs15s { signed short v1:15; unsigned int v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15s_BFu15i { signed short v1:15; unsigned int v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15s_BFu15ll { signed short v1:15; unsigned int v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15i_BFu15s_BFu15s { signed short v1:15; unsigned int v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll { signed short v1:15; unsigned long long v2:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15i { signed short v1:15; unsigned long long v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15i_BFs15i { signed short v1:15; unsigned long long v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15i_BFs15ll { signed short v1:15; unsigned long long v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15i_BFs15s { signed short v1:15; unsigned long long v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15i_BFu15i { signed short v1:15; unsigned long long v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15i_BFu15ll { signed short v1:15; unsigned long long v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15i_BFu15s { signed short v1:15; unsigned long long v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15ll { signed short v1:15; unsigned long long v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15ll_BFs15i { signed short v1:15; unsigned long long v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15ll_BFs15ll { signed short v1:15; unsigned long long v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15ll_BFs15s { signed short v1:15; unsigned long long v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15ll_BFu15i { signed short v1:15; unsigned long long v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15ll_BFu15ll { signed short v1:15; unsigned long long v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15ll_BFu15s { signed short v1:15; unsigned long long v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15s { signed short v1:15; unsigned long long v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15s_BFs15i { signed short v1:15; unsigned long long v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15s_BFs15ll { signed short v1:15; unsigned long long v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15s_BFs15s { signed short v1:15; unsigned long long v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15s_BFu15i { signed short v1:15; unsigned long long v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15s_BFu15ll { signed short v1:15; unsigned long long v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFs15s_BFu15s { signed short v1:15; unsigned long long v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15i { signed short v1:15; unsigned long long v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15i_BFs15i { signed short v1:15; unsigned long long v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15i_BFs15ll { signed short v1:15; unsigned long long v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15i_BFs15s { signed short v1:15; unsigned long long v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15i_BFu15i { signed short v1:15; unsigned long long v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15i_BFu15ll { signed short v1:15; unsigned long long v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15i_BFu15s { signed short v1:15; unsigned long long v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15ll { signed short v1:15; unsigned long long v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15ll_BFs15i { signed short v1:15; unsigned long long v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15ll_BFs15ll { signed short v1:15; unsigned long long v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15ll_BFs15s { signed short v1:15; unsigned long long v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15ll_BFu15i { signed short v1:15; unsigned long long v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15ll_BFu15ll { signed short v1:15; unsigned long long v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15ll_BFu15s { signed short v1:15; unsigned long long v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15s { signed short v1:15; unsigned long long v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15s_BFs15i { signed short v1:15; unsigned long long v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15s_BFs15ll { signed short v1:15; unsigned long long v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15s_BFs15s { signed short v1:15; unsigned long long v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15s_BFu15i { signed short v1:15; unsigned long long v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15s_BFu15ll { signed short v1:15; unsigned long long v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15ll_BFu15s_BFu15s { signed short v1:15; unsigned long long v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s { signed short v1:15; unsigned short v2:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15i { signed short v1:15; unsigned short v2:15; signed int v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15i_BFs15i { signed short v1:15; unsigned short v2:15; signed int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15i_BFs15ll { signed short v1:15; unsigned short v2:15; signed int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15i_BFs15s { signed short v1:15; unsigned short v2:15; signed int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15i_BFu15i { signed short v1:15; unsigned short v2:15; signed int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15i_BFu15ll { signed short v1:15; unsigned short v2:15; signed int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15i_BFu15s { signed short v1:15; unsigned short v2:15; signed int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15ll { signed short v1:15; unsigned short v2:15; signed long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15ll_BFs15i { signed short v1:15; unsigned short v2:15; signed long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15ll_BFs15ll { signed short v1:15; unsigned short v2:15; signed long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15ll_BFs15s { signed short v1:15; unsigned short v2:15; signed long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15ll_BFu15i { signed short v1:15; unsigned short v2:15; signed long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15ll_BFu15ll { signed short v1:15; unsigned short v2:15; signed long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15ll_BFu15s { signed short v1:15; unsigned short v2:15; signed long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15s { signed short v1:15; unsigned short v2:15; signed short v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15s_BFs15i { signed short v1:15; unsigned short v2:15; signed short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15s_BFs15ll { signed short v1:15; unsigned short v2:15; signed short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15s_BFs15s { signed short v1:15; unsigned short v2:15; signed short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15s_BFu15i { signed short v1:15; unsigned short v2:15; signed short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15s_BFu15ll { signed short v1:15; unsigned short v2:15; signed short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFs15s_BFu15s { signed short v1:15; unsigned short v2:15; signed short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15i { signed short v1:15; unsigned short v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15i_BFs15i { signed short v1:15; unsigned short v2:15; unsigned int v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15i_BFs15ll { signed short v1:15; unsigned short v2:15; unsigned int v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15i_BFs15s { signed short v1:15; unsigned short v2:15; unsigned int v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15i_BFu15i { signed short v1:15; unsigned short v2:15; unsigned int v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15i_BFu15ll { signed short v1:15; unsigned short v2:15; unsigned int v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15i_BFu15s { signed short v1:15; unsigned short v2:15; unsigned int v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15ll { signed short v1:15; unsigned short v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15ll_BFs15i { signed short v1:15; unsigned short v2:15; unsigned long long v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15ll_BFs15ll { signed short v1:15; unsigned short v2:15; unsigned long long v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15ll_BFs15s { signed short v1:15; unsigned short v2:15; unsigned long long v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15ll_BFu15i { signed short v1:15; unsigned short v2:15; unsigned long long v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15ll_BFu15ll { signed short v1:15; unsigned short v2:15; unsigned long long v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15ll_BFu15s { signed short v1:15; unsigned short v2:15; unsigned long long v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15s { signed short v1:15; unsigned short v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15s_BFs15i { signed short v1:15; unsigned short v2:15; unsigned short v3:15; signed int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15s_BFs15ll { signed short v1:15; unsigned short v2:15; unsigned short v3:15; signed long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15s_BFs15s { signed short v1:15; unsigned short v2:15; unsigned short v3:15; signed short v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15s_BFu15i { signed short v1:15; unsigned short v2:15; unsigned short v3:15; unsigned int v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15s_BFu15ll { signed short v1:15; unsigned short v2:15; unsigned short v3:15; unsigned long long v4:15; };
struct __attribute__((packed)) aBFs15s_BFu15s_BFu15s_BFu15s { signed short v1:15; unsigned short v2:15; unsigned short v3:15; unsigned short v4:15; };
struct __attribute__((packed)) aBFs16i_BFs16i { signed int v1:16; signed int v2:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16i { signed int v1:16; signed int v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16i_BFs16i { signed int v1:16; signed int v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16i_BFs16ll { signed int v1:16; signed int v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16i_BFs16s { signed int v1:16; signed int v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16i_BFu16i { signed int v1:16; signed int v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16i_BFu16ll { signed int v1:16; signed int v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16i_BFu16s { signed int v1:16; signed int v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16ll { signed int v1:16; signed int v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16ll_BFs16i { signed int v1:16; signed int v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16ll_BFs16ll { signed int v1:16; signed int v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16ll_BFs16s { signed int v1:16; signed int v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16ll_BFu16i { signed int v1:16; signed int v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16ll_BFu16ll { signed int v1:16; signed int v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16ll_BFu16s { signed int v1:16; signed int v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16s { signed int v1:16; signed int v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16s_BFs16i { signed int v1:16; signed int v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16s_BFs16ll { signed int v1:16; signed int v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16s_BFs16s { signed int v1:16; signed int v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16s_BFu16i { signed int v1:16; signed int v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16s_BFu16ll { signed int v1:16; signed int v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFs16s_BFu16s { signed int v1:16; signed int v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16i { signed int v1:16; signed int v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16i_BFs16i { signed int v1:16; signed int v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16i_BFs16ll { signed int v1:16; signed int v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16i_BFs16s { signed int v1:16; signed int v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16i_BFu16i { signed int v1:16; signed int v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16i_BFu16ll { signed int v1:16; signed int v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16i_BFu16s { signed int v1:16; signed int v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16ll { signed int v1:16; signed int v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16ll_BFs16i { signed int v1:16; signed int v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16ll_BFs16ll { signed int v1:16; signed int v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16ll_BFs16s { signed int v1:16; signed int v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16ll_BFu16i { signed int v1:16; signed int v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16ll_BFu16ll { signed int v1:16; signed int v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16ll_BFu16s { signed int v1:16; signed int v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16s { signed int v1:16; signed int v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16s_BFs16i { signed int v1:16; signed int v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16s_BFs16ll { signed int v1:16; signed int v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16s_BFs16s { signed int v1:16; signed int v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16s_BFu16i { signed int v1:16; signed int v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16s_BFu16ll { signed int v1:16; signed int v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16i_BFu16s_BFu16s { signed int v1:16; signed int v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll { signed int v1:16; signed long long v2:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16i { signed int v1:16; signed long long v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16i_BFs16i { signed int v1:16; signed long long v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16i_BFs16ll { signed int v1:16; signed long long v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16i_BFs16s { signed int v1:16; signed long long v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16i_BFu16i { signed int v1:16; signed long long v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16i_BFu16ll { signed int v1:16; signed long long v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16i_BFu16s { signed int v1:16; signed long long v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16ll { signed int v1:16; signed long long v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16ll_BFs16i { signed int v1:16; signed long long v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16ll_BFs16ll { signed int v1:16; signed long long v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16ll_BFs16s { signed int v1:16; signed long long v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16ll_BFu16i { signed int v1:16; signed long long v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16ll_BFu16ll { signed int v1:16; signed long long v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16ll_BFu16s { signed int v1:16; signed long long v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16s { signed int v1:16; signed long long v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16s_BFs16i { signed int v1:16; signed long long v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16s_BFs16ll { signed int v1:16; signed long long v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16s_BFs16s { signed int v1:16; signed long long v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16s_BFu16i { signed int v1:16; signed long long v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16s_BFu16ll { signed int v1:16; signed long long v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFs16s_BFu16s { signed int v1:16; signed long long v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16i { signed int v1:16; signed long long v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16i_BFs16i { signed int v1:16; signed long long v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16i_BFs16ll { signed int v1:16; signed long long v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16i_BFs16s { signed int v1:16; signed long long v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16i_BFu16i { signed int v1:16; signed long long v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16i_BFu16ll { signed int v1:16; signed long long v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16i_BFu16s { signed int v1:16; signed long long v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16ll { signed int v1:16; signed long long v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16ll_BFs16i { signed int v1:16; signed long long v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16ll_BFs16ll { signed int v1:16; signed long long v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16ll_BFs16s { signed int v1:16; signed long long v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16ll_BFu16i { signed int v1:16; signed long long v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16ll_BFu16ll { signed int v1:16; signed long long v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16ll_BFu16s { signed int v1:16; signed long long v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16s { signed int v1:16; signed long long v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16s_BFs16i { signed int v1:16; signed long long v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16s_BFs16ll { signed int v1:16; signed long long v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16s_BFs16s { signed int v1:16; signed long long v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16s_BFu16i { signed int v1:16; signed long long v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16s_BFu16ll { signed int v1:16; signed long long v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16ll_BFu16s_BFu16s { signed int v1:16; signed long long v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s { signed int v1:16; signed short v2:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16i { signed int v1:16; signed short v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16i_BFs16i { signed int v1:16; signed short v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16i_BFs16ll { signed int v1:16; signed short v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16i_BFs16s { signed int v1:16; signed short v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16i_BFu16i { signed int v1:16; signed short v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16i_BFu16ll { signed int v1:16; signed short v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16i_BFu16s { signed int v1:16; signed short v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16ll { signed int v1:16; signed short v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16ll_BFs16i { signed int v1:16; signed short v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16ll_BFs16ll { signed int v1:16; signed short v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16ll_BFs16s { signed int v1:16; signed short v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16ll_BFu16i { signed int v1:16; signed short v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16ll_BFu16ll { signed int v1:16; signed short v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16ll_BFu16s { signed int v1:16; signed short v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16s { signed int v1:16; signed short v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16s_BFs16i { signed int v1:16; signed short v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16s_BFs16ll { signed int v1:16; signed short v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16s_BFs16s { signed int v1:16; signed short v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16s_BFu16i { signed int v1:16; signed short v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16s_BFu16ll { signed int v1:16; signed short v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFs16s_BFu16s { signed int v1:16; signed short v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16i { signed int v1:16; signed short v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16i_BFs16i { signed int v1:16; signed short v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16i_BFs16ll { signed int v1:16; signed short v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16i_BFs16s { signed int v1:16; signed short v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16i_BFu16i { signed int v1:16; signed short v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16i_BFu16ll { signed int v1:16; signed short v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16i_BFu16s { signed int v1:16; signed short v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16ll { signed int v1:16; signed short v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16ll_BFs16i { signed int v1:16; signed short v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16ll_BFs16ll { signed int v1:16; signed short v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16ll_BFs16s { signed int v1:16; signed short v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16ll_BFu16i { signed int v1:16; signed short v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16ll_BFu16ll { signed int v1:16; signed short v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16ll_BFu16s { signed int v1:16; signed short v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16s { signed int v1:16; signed short v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16s_BFs16i { signed int v1:16; signed short v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16s_BFs16ll { signed int v1:16; signed short v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16s_BFs16s { signed int v1:16; signed short v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16s_BFu16i { signed int v1:16; signed short v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16s_BFu16ll { signed int v1:16; signed short v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFs16s_BFu16s_BFu16s { signed int v1:16; signed short v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i { signed int v1:16; unsigned int v2:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16i { signed int v1:16; unsigned int v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16i_BFs16i { signed int v1:16; unsigned int v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16i_BFs16ll { signed int v1:16; unsigned int v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16i_BFs16s { signed int v1:16; unsigned int v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16i_BFu16i { signed int v1:16; unsigned int v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16i_BFu16ll { signed int v1:16; unsigned int v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16i_BFu16s { signed int v1:16; unsigned int v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16ll { signed int v1:16; unsigned int v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16ll_BFs16i { signed int v1:16; unsigned int v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16ll_BFs16ll { signed int v1:16; unsigned int v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16ll_BFs16s { signed int v1:16; unsigned int v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16ll_BFu16i { signed int v1:16; unsigned int v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16ll_BFu16ll { signed int v1:16; unsigned int v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16ll_BFu16s { signed int v1:16; unsigned int v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16s { signed int v1:16; unsigned int v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16s_BFs16i { signed int v1:16; unsigned int v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16s_BFs16ll { signed int v1:16; unsigned int v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16s_BFs16s { signed int v1:16; unsigned int v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16s_BFu16i { signed int v1:16; unsigned int v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16s_BFu16ll { signed int v1:16; unsigned int v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFs16s_BFu16s { signed int v1:16; unsigned int v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16i { signed int v1:16; unsigned int v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16i_BFs16i { signed int v1:16; unsigned int v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16i_BFs16ll { signed int v1:16; unsigned int v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16i_BFs16s { signed int v1:16; unsigned int v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16i_BFu16i { signed int v1:16; unsigned int v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16i_BFu16ll { signed int v1:16; unsigned int v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16i_BFu16s { signed int v1:16; unsigned int v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16ll { signed int v1:16; unsigned int v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16ll_BFs16i { signed int v1:16; unsigned int v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16ll_BFs16ll { signed int v1:16; unsigned int v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16ll_BFs16s { signed int v1:16; unsigned int v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16ll_BFu16i { signed int v1:16; unsigned int v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16ll_BFu16ll { signed int v1:16; unsigned int v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16ll_BFu16s { signed int v1:16; unsigned int v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16s { signed int v1:16; unsigned int v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16s_BFs16i { signed int v1:16; unsigned int v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16s_BFs16ll { signed int v1:16; unsigned int v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16s_BFs16s { signed int v1:16; unsigned int v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16s_BFu16i { signed int v1:16; unsigned int v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16s_BFu16ll { signed int v1:16; unsigned int v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16i_BFu16s_BFu16s { signed int v1:16; unsigned int v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll { signed int v1:16; unsigned long long v2:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16i { signed int v1:16; unsigned long long v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16i_BFs16i { signed int v1:16; unsigned long long v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16i_BFs16ll { signed int v1:16; unsigned long long v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16i_BFs16s { signed int v1:16; unsigned long long v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16i_BFu16i { signed int v1:16; unsigned long long v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16i_BFu16ll { signed int v1:16; unsigned long long v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16i_BFu16s { signed int v1:16; unsigned long long v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16ll { signed int v1:16; unsigned long long v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16ll_BFs16i { signed int v1:16; unsigned long long v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16ll_BFs16ll { signed int v1:16; unsigned long long v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16ll_BFs16s { signed int v1:16; unsigned long long v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16ll_BFu16i { signed int v1:16; unsigned long long v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16ll_BFu16ll { signed int v1:16; unsigned long long v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16ll_BFu16s { signed int v1:16; unsigned long long v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16s { signed int v1:16; unsigned long long v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16s_BFs16i { signed int v1:16; unsigned long long v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16s_BFs16ll { signed int v1:16; unsigned long long v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16s_BFs16s { signed int v1:16; unsigned long long v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16s_BFu16i { signed int v1:16; unsigned long long v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16s_BFu16ll { signed int v1:16; unsigned long long v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFs16s_BFu16s { signed int v1:16; unsigned long long v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16i { signed int v1:16; unsigned long long v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16i_BFs16i { signed int v1:16; unsigned long long v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16i_BFs16ll { signed int v1:16; unsigned long long v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16i_BFs16s { signed int v1:16; unsigned long long v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16i_BFu16i { signed int v1:16; unsigned long long v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16i_BFu16ll { signed int v1:16; unsigned long long v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16i_BFu16s { signed int v1:16; unsigned long long v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16ll { signed int v1:16; unsigned long long v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16ll_BFs16i { signed int v1:16; unsigned long long v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16ll_BFs16ll { signed int v1:16; unsigned long long v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16ll_BFs16s { signed int v1:16; unsigned long long v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16ll_BFu16i { signed int v1:16; unsigned long long v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16ll_BFu16ll { signed int v1:16; unsigned long long v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16ll_BFu16s { signed int v1:16; unsigned long long v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16s { signed int v1:16; unsigned long long v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16s_BFs16i { signed int v1:16; unsigned long long v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16s_BFs16ll { signed int v1:16; unsigned long long v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16s_BFs16s { signed int v1:16; unsigned long long v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16s_BFu16i { signed int v1:16; unsigned long long v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16s_BFu16ll { signed int v1:16; unsigned long long v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16ll_BFu16s_BFu16s { signed int v1:16; unsigned long long v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s { signed int v1:16; unsigned short v2:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16i { signed int v1:16; unsigned short v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16i_BFs16i { signed int v1:16; unsigned short v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16i_BFs16ll { signed int v1:16; unsigned short v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16i_BFs16s { signed int v1:16; unsigned short v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16i_BFu16i { signed int v1:16; unsigned short v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16i_BFu16ll { signed int v1:16; unsigned short v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16i_BFu16s { signed int v1:16; unsigned short v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16ll { signed int v1:16; unsigned short v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16ll_BFs16i { signed int v1:16; unsigned short v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16ll_BFs16ll { signed int v1:16; unsigned short v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16ll_BFs16s { signed int v1:16; unsigned short v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16ll_BFu16i { signed int v1:16; unsigned short v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16ll_BFu16ll { signed int v1:16; unsigned short v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16ll_BFu16s { signed int v1:16; unsigned short v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16s { signed int v1:16; unsigned short v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16s_BFs16i { signed int v1:16; unsigned short v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16s_BFs16ll { signed int v1:16; unsigned short v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16s_BFs16s { signed int v1:16; unsigned short v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16s_BFu16i { signed int v1:16; unsigned short v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16s_BFu16ll { signed int v1:16; unsigned short v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFs16s_BFu16s { signed int v1:16; unsigned short v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16i { signed int v1:16; unsigned short v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16i_BFs16i { signed int v1:16; unsigned short v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16i_BFs16ll { signed int v1:16; unsigned short v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16i_BFs16s { signed int v1:16; unsigned short v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16i_BFu16i { signed int v1:16; unsigned short v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16i_BFu16ll { signed int v1:16; unsigned short v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16i_BFu16s { signed int v1:16; unsigned short v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16ll { signed int v1:16; unsigned short v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16ll_BFs16i { signed int v1:16; unsigned short v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16ll_BFs16ll { signed int v1:16; unsigned short v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16ll_BFs16s { signed int v1:16; unsigned short v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16ll_BFu16i { signed int v1:16; unsigned short v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16ll_BFu16ll { signed int v1:16; unsigned short v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16ll_BFu16s { signed int v1:16; unsigned short v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16s { signed int v1:16; unsigned short v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16s_BFs16i { signed int v1:16; unsigned short v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16s_BFs16ll { signed int v1:16; unsigned short v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16s_BFs16s { signed int v1:16; unsigned short v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16s_BFu16i { signed int v1:16; unsigned short v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16s_BFu16ll { signed int v1:16; unsigned short v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16i_BFu16s_BFu16s_BFu16s { signed int v1:16; unsigned short v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i { signed long long v1:16; signed int v2:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16i { signed long long v1:16; signed int v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16i_BFs16i { signed long long v1:16; signed int v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16i_BFs16ll { signed long long v1:16; signed int v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16i_BFs16s { signed long long v1:16; signed int v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16i_BFu16i { signed long long v1:16; signed int v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16i_BFu16ll { signed long long v1:16; signed int v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16i_BFu16s { signed long long v1:16; signed int v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16ll { signed long long v1:16; signed int v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16ll_BFs16i { signed long long v1:16; signed int v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16ll_BFs16ll { signed long long v1:16; signed int v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16ll_BFs16s { signed long long v1:16; signed int v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16ll_BFu16i { signed long long v1:16; signed int v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16ll_BFu16ll { signed long long v1:16; signed int v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16ll_BFu16s { signed long long v1:16; signed int v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16s { signed long long v1:16; signed int v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16s_BFs16i { signed long long v1:16; signed int v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16s_BFs16ll { signed long long v1:16; signed int v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16s_BFs16s { signed long long v1:16; signed int v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16s_BFu16i { signed long long v1:16; signed int v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16s_BFu16ll { signed long long v1:16; signed int v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFs16s_BFu16s { signed long long v1:16; signed int v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16i { signed long long v1:16; signed int v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16i_BFs16i { signed long long v1:16; signed int v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16i_BFs16ll { signed long long v1:16; signed int v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16i_BFs16s { signed long long v1:16; signed int v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16i_BFu16i { signed long long v1:16; signed int v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16i_BFu16ll { signed long long v1:16; signed int v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16i_BFu16s { signed long long v1:16; signed int v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16ll { signed long long v1:16; signed int v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16ll_BFs16i { signed long long v1:16; signed int v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16ll_BFs16ll { signed long long v1:16; signed int v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16ll_BFs16s { signed long long v1:16; signed int v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16ll_BFu16i { signed long long v1:16; signed int v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16ll_BFu16ll { signed long long v1:16; signed int v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16ll_BFu16s { signed long long v1:16; signed int v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16s { signed long long v1:16; signed int v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16s_BFs16i { signed long long v1:16; signed int v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16s_BFs16ll { signed long long v1:16; signed int v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16s_BFs16s { signed long long v1:16; signed int v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16s_BFu16i { signed long long v1:16; signed int v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16s_BFu16ll { signed long long v1:16; signed int v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16i_BFu16s_BFu16s { signed long long v1:16; signed int v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll { signed long long v1:16; signed long long v2:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16i { signed long long v1:16; signed long long v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16i_BFs16i { signed long long v1:16; signed long long v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16i_BFs16ll { signed long long v1:16; signed long long v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16i_BFs16s { signed long long v1:16; signed long long v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16i_BFu16i { signed long long v1:16; signed long long v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16i_BFu16ll { signed long long v1:16; signed long long v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16i_BFu16s { signed long long v1:16; signed long long v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16ll { signed long long v1:16; signed long long v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16ll_BFs16i { signed long long v1:16; signed long long v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16ll_BFs16ll { signed long long v1:16; signed long long v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16ll_BFs16s { signed long long v1:16; signed long long v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16ll_BFu16i { signed long long v1:16; signed long long v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16ll_BFu16ll { signed long long v1:16; signed long long v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16ll_BFu16s { signed long long v1:16; signed long long v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16s { signed long long v1:16; signed long long v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16s_BFs16i { signed long long v1:16; signed long long v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16s_BFs16ll { signed long long v1:16; signed long long v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16s_BFs16s { signed long long v1:16; signed long long v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16s_BFu16i { signed long long v1:16; signed long long v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16s_BFu16ll { signed long long v1:16; signed long long v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFs16s_BFu16s { signed long long v1:16; signed long long v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16i { signed long long v1:16; signed long long v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16i_BFs16i { signed long long v1:16; signed long long v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16i_BFs16ll { signed long long v1:16; signed long long v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16i_BFs16s { signed long long v1:16; signed long long v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16i_BFu16i { signed long long v1:16; signed long long v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16i_BFu16ll { signed long long v1:16; signed long long v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16i_BFu16s { signed long long v1:16; signed long long v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16ll { signed long long v1:16; signed long long v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16ll_BFs16i { signed long long v1:16; signed long long v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16ll_BFs16ll { signed long long v1:16; signed long long v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16ll_BFs16s { signed long long v1:16; signed long long v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16ll_BFu16i { signed long long v1:16; signed long long v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16ll_BFu16ll { signed long long v1:16; signed long long v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16ll_BFu16s { signed long long v1:16; signed long long v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16s { signed long long v1:16; signed long long v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16s_BFs16i { signed long long v1:16; signed long long v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16s_BFs16ll { signed long long v1:16; signed long long v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16s_BFs16s { signed long long v1:16; signed long long v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16s_BFu16i { signed long long v1:16; signed long long v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16s_BFu16ll { signed long long v1:16; signed long long v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16ll_BFu16s_BFu16s { signed long long v1:16; signed long long v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s { signed long long v1:16; signed short v2:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16i { signed long long v1:16; signed short v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16i_BFs16i { signed long long v1:16; signed short v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16i_BFs16ll { signed long long v1:16; signed short v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16i_BFs16s { signed long long v1:16; signed short v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16i_BFu16i { signed long long v1:16; signed short v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16i_BFu16ll { signed long long v1:16; signed short v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16i_BFu16s { signed long long v1:16; signed short v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16ll { signed long long v1:16; signed short v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16ll_BFs16i { signed long long v1:16; signed short v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16ll_BFs16ll { signed long long v1:16; signed short v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16ll_BFs16s { signed long long v1:16; signed short v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16ll_BFu16i { signed long long v1:16; signed short v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16ll_BFu16ll { signed long long v1:16; signed short v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16ll_BFu16s { signed long long v1:16; signed short v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16s { signed long long v1:16; signed short v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16s_BFs16i { signed long long v1:16; signed short v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16s_BFs16ll { signed long long v1:16; signed short v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16s_BFs16s { signed long long v1:16; signed short v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16s_BFu16i { signed long long v1:16; signed short v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16s_BFu16ll { signed long long v1:16; signed short v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFs16s_BFu16s { signed long long v1:16; signed short v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16i { signed long long v1:16; signed short v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16i_BFs16i { signed long long v1:16; signed short v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16i_BFs16ll { signed long long v1:16; signed short v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16i_BFs16s { signed long long v1:16; signed short v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16i_BFu16i { signed long long v1:16; signed short v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16i_BFu16ll { signed long long v1:16; signed short v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16i_BFu16s { signed long long v1:16; signed short v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16ll { signed long long v1:16; signed short v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16ll_BFs16i { signed long long v1:16; signed short v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16ll_BFs16ll { signed long long v1:16; signed short v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16ll_BFs16s { signed long long v1:16; signed short v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16ll_BFu16i { signed long long v1:16; signed short v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16ll_BFu16ll { signed long long v1:16; signed short v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16ll_BFu16s { signed long long v1:16; signed short v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16s { signed long long v1:16; signed short v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16s_BFs16i { signed long long v1:16; signed short v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16s_BFs16ll { signed long long v1:16; signed short v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16s_BFs16s { signed long long v1:16; signed short v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16s_BFu16i { signed long long v1:16; signed short v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16s_BFu16ll { signed long long v1:16; signed short v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFs16s_BFu16s_BFu16s { signed long long v1:16; signed short v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i { signed long long v1:16; unsigned int v2:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16i { signed long long v1:16; unsigned int v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16i_BFs16i { signed long long v1:16; unsigned int v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16i_BFs16ll { signed long long v1:16; unsigned int v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16i_BFs16s { signed long long v1:16; unsigned int v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16i_BFu16i { signed long long v1:16; unsigned int v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16i_BFu16ll { signed long long v1:16; unsigned int v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16i_BFu16s { signed long long v1:16; unsigned int v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16ll { signed long long v1:16; unsigned int v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16ll_BFs16i { signed long long v1:16; unsigned int v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16ll_BFs16ll { signed long long v1:16; unsigned int v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16ll_BFs16s { signed long long v1:16; unsigned int v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16ll_BFu16i { signed long long v1:16; unsigned int v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16ll_BFu16ll { signed long long v1:16; unsigned int v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16ll_BFu16s { signed long long v1:16; unsigned int v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16s { signed long long v1:16; unsigned int v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16s_BFs16i { signed long long v1:16; unsigned int v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16s_BFs16ll { signed long long v1:16; unsigned int v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16s_BFs16s { signed long long v1:16; unsigned int v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16s_BFu16i { signed long long v1:16; unsigned int v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16s_BFu16ll { signed long long v1:16; unsigned int v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFs16s_BFu16s { signed long long v1:16; unsigned int v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16i { signed long long v1:16; unsigned int v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16i_BFs16i { signed long long v1:16; unsigned int v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16i_BFs16ll { signed long long v1:16; unsigned int v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16i_BFs16s { signed long long v1:16; unsigned int v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16i_BFu16i { signed long long v1:16; unsigned int v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16i_BFu16ll { signed long long v1:16; unsigned int v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16i_BFu16s { signed long long v1:16; unsigned int v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16ll { signed long long v1:16; unsigned int v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16ll_BFs16i { signed long long v1:16; unsigned int v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16ll_BFs16ll { signed long long v1:16; unsigned int v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16ll_BFs16s { signed long long v1:16; unsigned int v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16ll_BFu16i { signed long long v1:16; unsigned int v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16ll_BFu16ll { signed long long v1:16; unsigned int v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16ll_BFu16s { signed long long v1:16; unsigned int v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16s { signed long long v1:16; unsigned int v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16s_BFs16i { signed long long v1:16; unsigned int v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16s_BFs16ll { signed long long v1:16; unsigned int v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16s_BFs16s { signed long long v1:16; unsigned int v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16s_BFu16i { signed long long v1:16; unsigned int v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16s_BFu16ll { signed long long v1:16; unsigned int v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16i_BFu16s_BFu16s { signed long long v1:16; unsigned int v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll { signed long long v1:16; unsigned long long v2:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16i { signed long long v1:16; unsigned long long v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16i_BFs16i { signed long long v1:16; unsigned long long v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16i_BFs16ll { signed long long v1:16; unsigned long long v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16i_BFs16s { signed long long v1:16; unsigned long long v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16i_BFu16i { signed long long v1:16; unsigned long long v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16i_BFu16ll { signed long long v1:16; unsigned long long v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16i_BFu16s { signed long long v1:16; unsigned long long v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16ll { signed long long v1:16; unsigned long long v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16ll_BFs16i { signed long long v1:16; unsigned long long v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16ll_BFs16ll { signed long long v1:16; unsigned long long v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16ll_BFs16s { signed long long v1:16; unsigned long long v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16ll_BFu16i { signed long long v1:16; unsigned long long v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16ll_BFu16ll { signed long long v1:16; unsigned long long v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16ll_BFu16s { signed long long v1:16; unsigned long long v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16s { signed long long v1:16; unsigned long long v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16s_BFs16i { signed long long v1:16; unsigned long long v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16s_BFs16ll { signed long long v1:16; unsigned long long v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16s_BFs16s { signed long long v1:16; unsigned long long v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16s_BFu16i { signed long long v1:16; unsigned long long v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16s_BFu16ll { signed long long v1:16; unsigned long long v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFs16s_BFu16s { signed long long v1:16; unsigned long long v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16i { signed long long v1:16; unsigned long long v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16i_BFs16i { signed long long v1:16; unsigned long long v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16i_BFs16ll { signed long long v1:16; unsigned long long v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16i_BFs16s { signed long long v1:16; unsigned long long v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16i_BFu16i { signed long long v1:16; unsigned long long v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16i_BFu16ll { signed long long v1:16; unsigned long long v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16i_BFu16s { signed long long v1:16; unsigned long long v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16ll { signed long long v1:16; unsigned long long v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16ll_BFs16i { signed long long v1:16; unsigned long long v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16ll_BFs16ll { signed long long v1:16; unsigned long long v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16ll_BFs16s { signed long long v1:16; unsigned long long v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16ll_BFu16i { signed long long v1:16; unsigned long long v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16ll_BFu16ll { signed long long v1:16; unsigned long long v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16ll_BFu16s { signed long long v1:16; unsigned long long v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16s { signed long long v1:16; unsigned long long v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16s_BFs16i { signed long long v1:16; unsigned long long v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16s_BFs16ll { signed long long v1:16; unsigned long long v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16s_BFs16s { signed long long v1:16; unsigned long long v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16s_BFu16i { signed long long v1:16; unsigned long long v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16s_BFu16ll { signed long long v1:16; unsigned long long v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16ll_BFu16s_BFu16s { signed long long v1:16; unsigned long long v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s { signed long long v1:16; unsigned short v2:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16i { signed long long v1:16; unsigned short v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16i_BFs16i { signed long long v1:16; unsigned short v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16i_BFs16ll { signed long long v1:16; unsigned short v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16i_BFs16s { signed long long v1:16; unsigned short v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16i_BFu16i { signed long long v1:16; unsigned short v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16i_BFu16ll { signed long long v1:16; unsigned short v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16i_BFu16s { signed long long v1:16; unsigned short v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16ll { signed long long v1:16; unsigned short v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16ll_BFs16i { signed long long v1:16; unsigned short v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16ll_BFs16ll { signed long long v1:16; unsigned short v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16ll_BFs16s { signed long long v1:16; unsigned short v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16ll_BFu16i { signed long long v1:16; unsigned short v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16ll_BFu16ll { signed long long v1:16; unsigned short v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16ll_BFu16s { signed long long v1:16; unsigned short v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16s { signed long long v1:16; unsigned short v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16s_BFs16i { signed long long v1:16; unsigned short v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16s_BFs16ll { signed long long v1:16; unsigned short v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16s_BFs16s { signed long long v1:16; unsigned short v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16s_BFu16i { signed long long v1:16; unsigned short v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16s_BFu16ll { signed long long v1:16; unsigned short v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFs16s_BFu16s { signed long long v1:16; unsigned short v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16i { signed long long v1:16; unsigned short v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16i_BFs16i { signed long long v1:16; unsigned short v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16i_BFs16ll { signed long long v1:16; unsigned short v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16i_BFs16s { signed long long v1:16; unsigned short v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16i_BFu16i { signed long long v1:16; unsigned short v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16i_BFu16ll { signed long long v1:16; unsigned short v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16i_BFu16s { signed long long v1:16; unsigned short v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16ll { signed long long v1:16; unsigned short v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16ll_BFs16i { signed long long v1:16; unsigned short v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16ll_BFs16ll { signed long long v1:16; unsigned short v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16ll_BFs16s { signed long long v1:16; unsigned short v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16ll_BFu16i { signed long long v1:16; unsigned short v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16ll_BFu16ll { signed long long v1:16; unsigned short v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16ll_BFu16s { signed long long v1:16; unsigned short v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16s { signed long long v1:16; unsigned short v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16s_BFs16i { signed long long v1:16; unsigned short v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16s_BFs16ll { signed long long v1:16; unsigned short v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16s_BFs16s { signed long long v1:16; unsigned short v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16s_BFu16i { signed long long v1:16; unsigned short v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16s_BFu16ll { signed long long v1:16; unsigned short v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16ll_BFu16s_BFu16s_BFu16s { signed long long v1:16; unsigned short v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i { signed short v1:16; signed int v2:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16i { signed short v1:16; signed int v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16i_BFs16i { signed short v1:16; signed int v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16i_BFs16ll { signed short v1:16; signed int v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16i_BFs16s { signed short v1:16; signed int v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16i_BFu16i { signed short v1:16; signed int v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16i_BFu16ll { signed short v1:16; signed int v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16i_BFu16s { signed short v1:16; signed int v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16ll { signed short v1:16; signed int v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16ll_BFs16i { signed short v1:16; signed int v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16ll_BFs16ll { signed short v1:16; signed int v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16ll_BFs16s { signed short v1:16; signed int v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16ll_BFu16i { signed short v1:16; signed int v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16ll_BFu16ll { signed short v1:16; signed int v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16ll_BFu16s { signed short v1:16; signed int v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16s { signed short v1:16; signed int v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16s_BFs16i { signed short v1:16; signed int v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16s_BFs16ll { signed short v1:16; signed int v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16s_BFs16s { signed short v1:16; signed int v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16s_BFu16i { signed short v1:16; signed int v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16s_BFu16ll { signed short v1:16; signed int v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFs16s_BFu16s { signed short v1:16; signed int v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16i { signed short v1:16; signed int v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16i_BFs16i { signed short v1:16; signed int v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16i_BFs16ll { signed short v1:16; signed int v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16i_BFs16s { signed short v1:16; signed int v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16i_BFu16i { signed short v1:16; signed int v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16i_BFu16ll { signed short v1:16; signed int v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16i_BFu16s { signed short v1:16; signed int v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16ll { signed short v1:16; signed int v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16ll_BFs16i { signed short v1:16; signed int v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16ll_BFs16ll { signed short v1:16; signed int v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16ll_BFs16s { signed short v1:16; signed int v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16ll_BFu16i { signed short v1:16; signed int v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16ll_BFu16ll { signed short v1:16; signed int v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16ll_BFu16s { signed short v1:16; signed int v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16s { signed short v1:16; signed int v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16s_BFs16i { signed short v1:16; signed int v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16s_BFs16ll { signed short v1:16; signed int v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16s_BFs16s { signed short v1:16; signed int v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16s_BFu16i { signed short v1:16; signed int v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16s_BFu16ll { signed short v1:16; signed int v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16i_BFu16s_BFu16s { signed short v1:16; signed int v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll { signed short v1:16; signed long long v2:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16i { signed short v1:16; signed long long v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16i_BFs16i { signed short v1:16; signed long long v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16i_BFs16ll { signed short v1:16; signed long long v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16i_BFs16s { signed short v1:16; signed long long v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16i_BFu16i { signed short v1:16; signed long long v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16i_BFu16ll { signed short v1:16; signed long long v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16i_BFu16s { signed short v1:16; signed long long v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16ll { signed short v1:16; signed long long v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16ll_BFs16i { signed short v1:16; signed long long v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16ll_BFs16ll { signed short v1:16; signed long long v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16ll_BFs16s { signed short v1:16; signed long long v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16ll_BFu16i { signed short v1:16; signed long long v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16ll_BFu16ll { signed short v1:16; signed long long v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16ll_BFu16s { signed short v1:16; signed long long v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16s { signed short v1:16; signed long long v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16s_BFs16i { signed short v1:16; signed long long v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16s_BFs16ll { signed short v1:16; signed long long v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16s_BFs16s { signed short v1:16; signed long long v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16s_BFu16i { signed short v1:16; signed long long v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16s_BFu16ll { signed short v1:16; signed long long v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFs16s_BFu16s { signed short v1:16; signed long long v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16i { signed short v1:16; signed long long v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16i_BFs16i { signed short v1:16; signed long long v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16i_BFs16ll { signed short v1:16; signed long long v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16i_BFs16s { signed short v1:16; signed long long v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16i_BFu16i { signed short v1:16; signed long long v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16i_BFu16ll { signed short v1:16; signed long long v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16i_BFu16s { signed short v1:16; signed long long v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16ll { signed short v1:16; signed long long v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16ll_BFs16i { signed short v1:16; signed long long v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16ll_BFs16ll { signed short v1:16; signed long long v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16ll_BFs16s { signed short v1:16; signed long long v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16ll_BFu16i { signed short v1:16; signed long long v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16ll_BFu16ll { signed short v1:16; signed long long v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16ll_BFu16s { signed short v1:16; signed long long v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16s { signed short v1:16; signed long long v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16s_BFs16i { signed short v1:16; signed long long v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16s_BFs16ll { signed short v1:16; signed long long v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16s_BFs16s { signed short v1:16; signed long long v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16s_BFu16i { signed short v1:16; signed long long v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16s_BFu16ll { signed short v1:16; signed long long v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16ll_BFu16s_BFu16s { signed short v1:16; signed long long v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s { signed short v1:16; signed short v2:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16i { signed short v1:16; signed short v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16i_BFs16i { signed short v1:16; signed short v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16i_BFs16ll { signed short v1:16; signed short v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16i_BFs16s { signed short v1:16; signed short v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16i_BFu16i { signed short v1:16; signed short v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16i_BFu16ll { signed short v1:16; signed short v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16i_BFu16s { signed short v1:16; signed short v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16ll { signed short v1:16; signed short v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16ll_BFs16i { signed short v1:16; signed short v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16ll_BFs16ll { signed short v1:16; signed short v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16ll_BFs16s { signed short v1:16; signed short v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16ll_BFu16i { signed short v1:16; signed short v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16ll_BFu16ll { signed short v1:16; signed short v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16ll_BFu16s { signed short v1:16; signed short v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16s { signed short v1:16; signed short v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16s_BFs16i { signed short v1:16; signed short v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16s_BFs16ll { signed short v1:16; signed short v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16s_BFs16s { signed short v1:16; signed short v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16s_BFu16i { signed short v1:16; signed short v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16s_BFu16ll { signed short v1:16; signed short v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFs16s_BFu16s { signed short v1:16; signed short v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16i { signed short v1:16; signed short v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16i_BFs16i { signed short v1:16; signed short v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16i_BFs16ll { signed short v1:16; signed short v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16i_BFs16s { signed short v1:16; signed short v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16i_BFu16i { signed short v1:16; signed short v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16i_BFu16ll { signed short v1:16; signed short v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16i_BFu16s { signed short v1:16; signed short v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16ll { signed short v1:16; signed short v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16ll_BFs16i { signed short v1:16; signed short v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16ll_BFs16ll { signed short v1:16; signed short v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16ll_BFs16s { signed short v1:16; signed short v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16ll_BFu16i { signed short v1:16; signed short v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16ll_BFu16ll { signed short v1:16; signed short v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16ll_BFu16s { signed short v1:16; signed short v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16s { signed short v1:16; signed short v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16s_BFs16i { signed short v1:16; signed short v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16s_BFs16ll { signed short v1:16; signed short v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16s_BFs16s { signed short v1:16; signed short v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16s_BFu16i { signed short v1:16; signed short v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16s_BFu16ll { signed short v1:16; signed short v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFs16s_BFu16s_BFu16s { signed short v1:16; signed short v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i { signed short v1:16; unsigned int v2:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16i { signed short v1:16; unsigned int v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16i_BFs16i { signed short v1:16; unsigned int v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16i_BFs16ll { signed short v1:16; unsigned int v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16i_BFs16s { signed short v1:16; unsigned int v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16i_BFu16i { signed short v1:16; unsigned int v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16i_BFu16ll { signed short v1:16; unsigned int v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16i_BFu16s { signed short v1:16; unsigned int v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16ll { signed short v1:16; unsigned int v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16ll_BFs16i { signed short v1:16; unsigned int v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16ll_BFs16ll { signed short v1:16; unsigned int v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16ll_BFs16s { signed short v1:16; unsigned int v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16ll_BFu16i { signed short v1:16; unsigned int v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16ll_BFu16ll { signed short v1:16; unsigned int v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16ll_BFu16s { signed short v1:16; unsigned int v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16s { signed short v1:16; unsigned int v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16s_BFs16i { signed short v1:16; unsigned int v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16s_BFs16ll { signed short v1:16; unsigned int v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16s_BFs16s { signed short v1:16; unsigned int v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16s_BFu16i { signed short v1:16; unsigned int v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16s_BFu16ll { signed short v1:16; unsigned int v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFs16s_BFu16s { signed short v1:16; unsigned int v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16i { signed short v1:16; unsigned int v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16i_BFs16i { signed short v1:16; unsigned int v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16i_BFs16ll { signed short v1:16; unsigned int v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16i_BFs16s { signed short v1:16; unsigned int v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16i_BFu16i { signed short v1:16; unsigned int v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16i_BFu16ll { signed short v1:16; unsigned int v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16i_BFu16s { signed short v1:16; unsigned int v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16ll { signed short v1:16; unsigned int v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16ll_BFs16i { signed short v1:16; unsigned int v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16ll_BFs16ll { signed short v1:16; unsigned int v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16ll_BFs16s { signed short v1:16; unsigned int v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16ll_BFu16i { signed short v1:16; unsigned int v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16ll_BFu16ll { signed short v1:16; unsigned int v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16ll_BFu16s { signed short v1:16; unsigned int v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16s { signed short v1:16; unsigned int v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16s_BFs16i { signed short v1:16; unsigned int v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16s_BFs16ll { signed short v1:16; unsigned int v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16s_BFs16s { signed short v1:16; unsigned int v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16s_BFu16i { signed short v1:16; unsigned int v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16s_BFu16ll { signed short v1:16; unsigned int v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16i_BFu16s_BFu16s { signed short v1:16; unsigned int v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll { signed short v1:16; unsigned long long v2:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16i { signed short v1:16; unsigned long long v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16i_BFs16i { signed short v1:16; unsigned long long v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16i_BFs16ll { signed short v1:16; unsigned long long v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16i_BFs16s { signed short v1:16; unsigned long long v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16i_BFu16i { signed short v1:16; unsigned long long v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16i_BFu16ll { signed short v1:16; unsigned long long v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16i_BFu16s { signed short v1:16; unsigned long long v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16ll { signed short v1:16; unsigned long long v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16ll_BFs16i { signed short v1:16; unsigned long long v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16ll_BFs16ll { signed short v1:16; unsigned long long v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16ll_BFs16s { signed short v1:16; unsigned long long v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16ll_BFu16i { signed short v1:16; unsigned long long v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16ll_BFu16ll { signed short v1:16; unsigned long long v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16ll_BFu16s { signed short v1:16; unsigned long long v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16s { signed short v1:16; unsigned long long v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16s_BFs16i { signed short v1:16; unsigned long long v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16s_BFs16ll { signed short v1:16; unsigned long long v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16s_BFs16s { signed short v1:16; unsigned long long v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16s_BFu16i { signed short v1:16; unsigned long long v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16s_BFu16ll { signed short v1:16; unsigned long long v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFs16s_BFu16s { signed short v1:16; unsigned long long v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16i { signed short v1:16; unsigned long long v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16i_BFs16i { signed short v1:16; unsigned long long v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16i_BFs16ll { signed short v1:16; unsigned long long v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16i_BFs16s { signed short v1:16; unsigned long long v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16i_BFu16i { signed short v1:16; unsigned long long v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16i_BFu16ll { signed short v1:16; unsigned long long v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16i_BFu16s { signed short v1:16; unsigned long long v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16ll { signed short v1:16; unsigned long long v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16ll_BFs16i { signed short v1:16; unsigned long long v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16ll_BFs16ll { signed short v1:16; unsigned long long v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16ll_BFs16s { signed short v1:16; unsigned long long v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16ll_BFu16i { signed short v1:16; unsigned long long v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16ll_BFu16ll { signed short v1:16; unsigned long long v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16ll_BFu16s { signed short v1:16; unsigned long long v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16s { signed short v1:16; unsigned long long v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16s_BFs16i { signed short v1:16; unsigned long long v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16s_BFs16ll { signed short v1:16; unsigned long long v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16s_BFs16s { signed short v1:16; unsigned long long v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16s_BFu16i { signed short v1:16; unsigned long long v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16s_BFu16ll { signed short v1:16; unsigned long long v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16ll_BFu16s_BFu16s { signed short v1:16; unsigned long long v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s { signed short v1:16; unsigned short v2:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16i { signed short v1:16; unsigned short v2:16; signed int v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16i_BFs16i { signed short v1:16; unsigned short v2:16; signed int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16i_BFs16ll { signed short v1:16; unsigned short v2:16; signed int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16i_BFs16s { signed short v1:16; unsigned short v2:16; signed int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16i_BFu16i { signed short v1:16; unsigned short v2:16; signed int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16i_BFu16ll { signed short v1:16; unsigned short v2:16; signed int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16i_BFu16s { signed short v1:16; unsigned short v2:16; signed int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16ll { signed short v1:16; unsigned short v2:16; signed long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16ll_BFs16i { signed short v1:16; unsigned short v2:16; signed long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16ll_BFs16ll { signed short v1:16; unsigned short v2:16; signed long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16ll_BFs16s { signed short v1:16; unsigned short v2:16; signed long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16ll_BFu16i { signed short v1:16; unsigned short v2:16; signed long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16ll_BFu16ll { signed short v1:16; unsigned short v2:16; signed long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16ll_BFu16s { signed short v1:16; unsigned short v2:16; signed long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16s { signed short v1:16; unsigned short v2:16; signed short v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16s_BFs16i { signed short v1:16; unsigned short v2:16; signed short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16s_BFs16ll { signed short v1:16; unsigned short v2:16; signed short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16s_BFs16s { signed short v1:16; unsigned short v2:16; signed short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16s_BFu16i { signed short v1:16; unsigned short v2:16; signed short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16s_BFu16ll { signed short v1:16; unsigned short v2:16; signed short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFs16s_BFu16s { signed short v1:16; unsigned short v2:16; signed short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16i { signed short v1:16; unsigned short v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16i_BFs16i { signed short v1:16; unsigned short v2:16; unsigned int v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16i_BFs16ll { signed short v1:16; unsigned short v2:16; unsigned int v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16i_BFs16s { signed short v1:16; unsigned short v2:16; unsigned int v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16i_BFu16i { signed short v1:16; unsigned short v2:16; unsigned int v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16i_BFu16ll { signed short v1:16; unsigned short v2:16; unsigned int v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16i_BFu16s { signed short v1:16; unsigned short v2:16; unsigned int v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16ll { signed short v1:16; unsigned short v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16ll_BFs16i { signed short v1:16; unsigned short v2:16; unsigned long long v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16ll_BFs16ll { signed short v1:16; unsigned short v2:16; unsigned long long v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16ll_BFs16s { signed short v1:16; unsigned short v2:16; unsigned long long v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16ll_BFu16i { signed short v1:16; unsigned short v2:16; unsigned long long v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16ll_BFu16ll { signed short v1:16; unsigned short v2:16; unsigned long long v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16ll_BFu16s { signed short v1:16; unsigned short v2:16; unsigned long long v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16s { signed short v1:16; unsigned short v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16s_BFs16i { signed short v1:16; unsigned short v2:16; unsigned short v3:16; signed int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16s_BFs16ll { signed short v1:16; unsigned short v2:16; unsigned short v3:16; signed long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16s_BFs16s { signed short v1:16; unsigned short v2:16; unsigned short v3:16; signed short v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16s_BFu16i { signed short v1:16; unsigned short v2:16; unsigned short v3:16; unsigned int v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16s_BFu16ll { signed short v1:16; unsigned short v2:16; unsigned short v3:16; unsigned long long v4:16; };
struct __attribute__((packed)) aBFs16s_BFu16s_BFu16s_BFu16s { signed short v1:16; unsigned short v2:16; unsigned short v3:16; unsigned short v4:16; };
struct __attribute__((packed)) aBFs17i_BFs17i { signed int v1:17; signed int v2:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17i { signed int v1:17; signed int v2:17; signed int v3:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17i_BFs17i { signed int v1:17; signed int v2:17; signed int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17i_BFs17ll { signed int v1:17; signed int v2:17; signed int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17i_BFu17i { signed int v1:17; signed int v2:17; signed int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17i_BFu17ll { signed int v1:17; signed int v2:17; signed int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17ll { signed int v1:17; signed int v2:17; signed long long v3:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17ll_BFs17i { signed int v1:17; signed int v2:17; signed long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17ll_BFs17ll { signed int v1:17; signed int v2:17; signed long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17ll_BFu17i { signed int v1:17; signed int v2:17; signed long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFs17ll_BFu17ll { signed int v1:17; signed int v2:17; signed long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17i { signed int v1:17; signed int v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17i_BFs17i { signed int v1:17; signed int v2:17; unsigned int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17i_BFs17ll { signed int v1:17; signed int v2:17; unsigned int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17i_BFu17i { signed int v1:17; signed int v2:17; unsigned int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17i_BFu17ll { signed int v1:17; signed int v2:17; unsigned int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17ll { signed int v1:17; signed int v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17ll_BFs17i { signed int v1:17; signed int v2:17; unsigned long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17ll_BFs17ll { signed int v1:17; signed int v2:17; unsigned long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17ll_BFu17i { signed int v1:17; signed int v2:17; unsigned long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17i_BFu17ll_BFu17ll { signed int v1:17; signed int v2:17; unsigned long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll { signed int v1:17; signed long long v2:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17i { signed int v1:17; signed long long v2:17; signed int v3:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17i_BFs17i { signed int v1:17; signed long long v2:17; signed int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17i_BFs17ll { signed int v1:17; signed long long v2:17; signed int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17i_BFu17i { signed int v1:17; signed long long v2:17; signed int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17i_BFu17ll { signed int v1:17; signed long long v2:17; signed int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17ll { signed int v1:17; signed long long v2:17; signed long long v3:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17ll_BFs17i { signed int v1:17; signed long long v2:17; signed long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17ll_BFs17ll { signed int v1:17; signed long long v2:17; signed long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17ll_BFu17i { signed int v1:17; signed long long v2:17; signed long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFs17ll_BFu17ll { signed int v1:17; signed long long v2:17; signed long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17i { signed int v1:17; signed long long v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17i_BFs17i { signed int v1:17; signed long long v2:17; unsigned int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17i_BFs17ll { signed int v1:17; signed long long v2:17; unsigned int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17i_BFu17i { signed int v1:17; signed long long v2:17; unsigned int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17i_BFu17ll { signed int v1:17; signed long long v2:17; unsigned int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17ll { signed int v1:17; signed long long v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17ll_BFs17i { signed int v1:17; signed long long v2:17; unsigned long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17ll_BFs17ll { signed int v1:17; signed long long v2:17; unsigned long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17ll_BFu17i { signed int v1:17; signed long long v2:17; unsigned long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFs17ll_BFu17ll_BFu17ll { signed int v1:17; signed long long v2:17; unsigned long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i { signed int v1:17; unsigned int v2:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17i { signed int v1:17; unsigned int v2:17; signed int v3:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17i_BFs17i { signed int v1:17; unsigned int v2:17; signed int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17i_BFs17ll { signed int v1:17; unsigned int v2:17; signed int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17i_BFu17i { signed int v1:17; unsigned int v2:17; signed int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17i_BFu17ll { signed int v1:17; unsigned int v2:17; signed int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17ll { signed int v1:17; unsigned int v2:17; signed long long v3:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17ll_BFs17i { signed int v1:17; unsigned int v2:17; signed long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17ll_BFs17ll { signed int v1:17; unsigned int v2:17; signed long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17ll_BFu17i { signed int v1:17; unsigned int v2:17; signed long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFs17ll_BFu17ll { signed int v1:17; unsigned int v2:17; signed long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17i { signed int v1:17; unsigned int v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17i_BFs17i { signed int v1:17; unsigned int v2:17; unsigned int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17i_BFs17ll { signed int v1:17; unsigned int v2:17; unsigned int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17i_BFu17i { signed int v1:17; unsigned int v2:17; unsigned int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17i_BFu17ll { signed int v1:17; unsigned int v2:17; unsigned int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17ll { signed int v1:17; unsigned int v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17ll_BFs17i { signed int v1:17; unsigned int v2:17; unsigned long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17ll_BFs17ll { signed int v1:17; unsigned int v2:17; unsigned long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17ll_BFu17i { signed int v1:17; unsigned int v2:17; unsigned long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17i_BFu17ll_BFu17ll { signed int v1:17; unsigned int v2:17; unsigned long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll { signed int v1:17; unsigned long long v2:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17i { signed int v1:17; unsigned long long v2:17; signed int v3:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17i_BFs17i { signed int v1:17; unsigned long long v2:17; signed int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17i_BFs17ll { signed int v1:17; unsigned long long v2:17; signed int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17i_BFu17i { signed int v1:17; unsigned long long v2:17; signed int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17i_BFu17ll { signed int v1:17; unsigned long long v2:17; signed int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17ll { signed int v1:17; unsigned long long v2:17; signed long long v3:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17ll_BFs17i { signed int v1:17; unsigned long long v2:17; signed long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17ll_BFs17ll { signed int v1:17; unsigned long long v2:17; signed long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17ll_BFu17i { signed int v1:17; unsigned long long v2:17; signed long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFs17ll_BFu17ll { signed int v1:17; unsigned long long v2:17; signed long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17i { signed int v1:17; unsigned long long v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17i_BFs17i { signed int v1:17; unsigned long long v2:17; unsigned int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17i_BFs17ll { signed int v1:17; unsigned long long v2:17; unsigned int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17i_BFu17i { signed int v1:17; unsigned long long v2:17; unsigned int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17i_BFu17ll { signed int v1:17; unsigned long long v2:17; unsigned int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17ll { signed int v1:17; unsigned long long v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17ll_BFs17i { signed int v1:17; unsigned long long v2:17; unsigned long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17ll_BFs17ll { signed int v1:17; unsigned long long v2:17; unsigned long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17ll_BFu17i { signed int v1:17; unsigned long long v2:17; unsigned long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17i_BFu17ll_BFu17ll_BFu17ll { signed int v1:17; unsigned long long v2:17; unsigned long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i { signed long long v1:17; signed int v2:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17i { signed long long v1:17; signed int v2:17; signed int v3:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17i_BFs17i { signed long long v1:17; signed int v2:17; signed int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17i_BFs17ll { signed long long v1:17; signed int v2:17; signed int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17i_BFu17i { signed long long v1:17; signed int v2:17; signed int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17i_BFu17ll { signed long long v1:17; signed int v2:17; signed int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17ll { signed long long v1:17; signed int v2:17; signed long long v3:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17ll_BFs17i { signed long long v1:17; signed int v2:17; signed long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17ll_BFs17ll { signed long long v1:17; signed int v2:17; signed long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17ll_BFu17i { signed long long v1:17; signed int v2:17; signed long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFs17ll_BFu17ll { signed long long v1:17; signed int v2:17; signed long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17i { signed long long v1:17; signed int v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17i_BFs17i { signed long long v1:17; signed int v2:17; unsigned int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17i_BFs17ll { signed long long v1:17; signed int v2:17; unsigned int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17i_BFu17i { signed long long v1:17; signed int v2:17; unsigned int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17i_BFu17ll { signed long long v1:17; signed int v2:17; unsigned int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17ll { signed long long v1:17; signed int v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17ll_BFs17i { signed long long v1:17; signed int v2:17; unsigned long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17ll_BFs17ll { signed long long v1:17; signed int v2:17; unsigned long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17ll_BFu17i { signed long long v1:17; signed int v2:17; unsigned long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17i_BFu17ll_BFu17ll { signed long long v1:17; signed int v2:17; unsigned long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll { signed long long v1:17; signed long long v2:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17i { signed long long v1:17; signed long long v2:17; signed int v3:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17i_BFs17i { signed long long v1:17; signed long long v2:17; signed int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17i_BFs17ll { signed long long v1:17; signed long long v2:17; signed int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17i_BFu17i { signed long long v1:17; signed long long v2:17; signed int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17i_BFu17ll { signed long long v1:17; signed long long v2:17; signed int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17ll { signed long long v1:17; signed long long v2:17; signed long long v3:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17ll_BFs17i { signed long long v1:17; signed long long v2:17; signed long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17ll_BFs17ll { signed long long v1:17; signed long long v2:17; signed long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17ll_BFu17i { signed long long v1:17; signed long long v2:17; signed long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFs17ll_BFu17ll { signed long long v1:17; signed long long v2:17; signed long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17i { signed long long v1:17; signed long long v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17i_BFs17i { signed long long v1:17; signed long long v2:17; unsigned int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17i_BFs17ll { signed long long v1:17; signed long long v2:17; unsigned int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17i_BFu17i { signed long long v1:17; signed long long v2:17; unsigned int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17i_BFu17ll { signed long long v1:17; signed long long v2:17; unsigned int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17ll { signed long long v1:17; signed long long v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17ll_BFs17i { signed long long v1:17; signed long long v2:17; unsigned long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17ll_BFs17ll { signed long long v1:17; signed long long v2:17; unsigned long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17ll_BFu17i { signed long long v1:17; signed long long v2:17; unsigned long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFs17ll_BFu17ll_BFu17ll { signed long long v1:17; signed long long v2:17; unsigned long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i { signed long long v1:17; unsigned int v2:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17i { signed long long v1:17; unsigned int v2:17; signed int v3:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17i_BFs17i { signed long long v1:17; unsigned int v2:17; signed int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17i_BFs17ll { signed long long v1:17; unsigned int v2:17; signed int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17i_BFu17i { signed long long v1:17; unsigned int v2:17; signed int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17i_BFu17ll { signed long long v1:17; unsigned int v2:17; signed int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17ll { signed long long v1:17; unsigned int v2:17; signed long long v3:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17ll_BFs17i { signed long long v1:17; unsigned int v2:17; signed long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17ll_BFs17ll { signed long long v1:17; unsigned int v2:17; signed long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17ll_BFu17i { signed long long v1:17; unsigned int v2:17; signed long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFs17ll_BFu17ll { signed long long v1:17; unsigned int v2:17; signed long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17i { signed long long v1:17; unsigned int v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17i_BFs17i { signed long long v1:17; unsigned int v2:17; unsigned int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17i_BFs17ll { signed long long v1:17; unsigned int v2:17; unsigned int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17i_BFu17i { signed long long v1:17; unsigned int v2:17; unsigned int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17i_BFu17ll { signed long long v1:17; unsigned int v2:17; unsigned int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17ll { signed long long v1:17; unsigned int v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17ll_BFs17i { signed long long v1:17; unsigned int v2:17; unsigned long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17ll_BFs17ll { signed long long v1:17; unsigned int v2:17; unsigned long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17ll_BFu17i { signed long long v1:17; unsigned int v2:17; unsigned long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17i_BFu17ll_BFu17ll { signed long long v1:17; unsigned int v2:17; unsigned long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll { signed long long v1:17; unsigned long long v2:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17i { signed long long v1:17; unsigned long long v2:17; signed int v3:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17i_BFs17i { signed long long v1:17; unsigned long long v2:17; signed int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17i_BFs17ll { signed long long v1:17; unsigned long long v2:17; signed int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17i_BFu17i { signed long long v1:17; unsigned long long v2:17; signed int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17i_BFu17ll { signed long long v1:17; unsigned long long v2:17; signed int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17ll { signed long long v1:17; unsigned long long v2:17; signed long long v3:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17ll_BFs17i { signed long long v1:17; unsigned long long v2:17; signed long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17ll_BFs17ll { signed long long v1:17; unsigned long long v2:17; signed long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17ll_BFu17i { signed long long v1:17; unsigned long long v2:17; signed long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFs17ll_BFu17ll { signed long long v1:17; unsigned long long v2:17; signed long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17i { signed long long v1:17; unsigned long long v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17i_BFs17i { signed long long v1:17; unsigned long long v2:17; unsigned int v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17i_BFs17ll { signed long long v1:17; unsigned long long v2:17; unsigned int v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17i_BFu17i { signed long long v1:17; unsigned long long v2:17; unsigned int v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17i_BFu17ll { signed long long v1:17; unsigned long long v2:17; unsigned int v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17ll { signed long long v1:17; unsigned long long v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17ll_BFs17i { signed long long v1:17; unsigned long long v2:17; unsigned long long v3:17; signed int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17ll_BFs17ll { signed long long v1:17; unsigned long long v2:17; unsigned long long v3:17; signed long long v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17ll_BFu17i { signed long long v1:17; unsigned long long v2:17; unsigned long long v3:17; unsigned int v4:17; };
struct __attribute__((packed)) aBFs17ll_BFu17ll_BFu17ll_BFu17ll { signed long long v1:17; unsigned long long v2:17; unsigned long long v3:17; unsigned long long v4:17; };
struct __attribute__((packed)) aBFs1c_BFs1c { signed char v1:1; signed char v2:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1c { signed char v1:1; signed char v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1c_BFs1c { signed char v1:1; signed char v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1c_BFs1i { signed char v1:1; signed char v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1c_BFs1ll { signed char v1:1; signed char v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1c_BFs1s { signed char v1:1; signed char v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1c_BFu1c { signed char v1:1; signed char v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1c_BFu1i { signed char v1:1; signed char v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1c_BFu1ll { signed char v1:1; signed char v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1c_BFu1s { signed char v1:1; signed char v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1i { signed char v1:1; signed char v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1i_BFs1c { signed char v1:1; signed char v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1i_BFs1i { signed char v1:1; signed char v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1i_BFs1ll { signed char v1:1; signed char v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1i_BFs1s { signed char v1:1; signed char v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1i_BFu1c { signed char v1:1; signed char v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1i_BFu1i { signed char v1:1; signed char v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1i_BFu1ll { signed char v1:1; signed char v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1i_BFu1s { signed char v1:1; signed char v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1ll { signed char v1:1; signed char v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1ll_BFs1c { signed char v1:1; signed char v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1ll_BFs1i { signed char v1:1; signed char v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1ll_BFs1ll { signed char v1:1; signed char v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1ll_BFs1s { signed char v1:1; signed char v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1ll_BFu1c { signed char v1:1; signed char v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1ll_BFu1i { signed char v1:1; signed char v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1ll_BFu1ll { signed char v1:1; signed char v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1ll_BFu1s { signed char v1:1; signed char v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1s { signed char v1:1; signed char v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1s_BFs1c { signed char v1:1; signed char v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1s_BFs1i { signed char v1:1; signed char v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1s_BFs1ll { signed char v1:1; signed char v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1s_BFs1s { signed char v1:1; signed char v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1s_BFu1c { signed char v1:1; signed char v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1s_BFu1i { signed char v1:1; signed char v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1s_BFu1ll { signed char v1:1; signed char v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFs1s_BFu1s { signed char v1:1; signed char v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1c { signed char v1:1; signed char v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1c_BFs1c { signed char v1:1; signed char v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1c_BFs1i { signed char v1:1; signed char v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1c_BFs1ll { signed char v1:1; signed char v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1c_BFs1s { signed char v1:1; signed char v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1c_BFu1c { signed char v1:1; signed char v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1c_BFu1i { signed char v1:1; signed char v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1c_BFu1ll { signed char v1:1; signed char v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1c_BFu1s { signed char v1:1; signed char v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1i { signed char v1:1; signed char v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1i_BFs1c { signed char v1:1; signed char v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1i_BFs1i { signed char v1:1; signed char v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1i_BFs1ll { signed char v1:1; signed char v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1i_BFs1s { signed char v1:1; signed char v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1i_BFu1c { signed char v1:1; signed char v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1i_BFu1i { signed char v1:1; signed char v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1i_BFu1ll { signed char v1:1; signed char v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1i_BFu1s { signed char v1:1; signed char v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1ll { signed char v1:1; signed char v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1ll_BFs1c { signed char v1:1; signed char v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1ll_BFs1i { signed char v1:1; signed char v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1ll_BFs1ll { signed char v1:1; signed char v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1ll_BFs1s { signed char v1:1; signed char v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1ll_BFu1c { signed char v1:1; signed char v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1ll_BFu1i { signed char v1:1; signed char v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1ll_BFu1ll { signed char v1:1; signed char v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1ll_BFu1s { signed char v1:1; signed char v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1s { signed char v1:1; signed char v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1s_BFs1c { signed char v1:1; signed char v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1s_BFs1i { signed char v1:1; signed char v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1s_BFs1ll { signed char v1:1; signed char v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1s_BFs1s { signed char v1:1; signed char v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1s_BFu1c { signed char v1:1; signed char v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1s_BFu1i { signed char v1:1; signed char v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1s_BFu1ll { signed char v1:1; signed char v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1c_BFu1s_BFu1s { signed char v1:1; signed char v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i { signed char v1:1; signed int v2:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1c { signed char v1:1; signed int v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1c_BFs1c { signed char v1:1; signed int v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1c_BFs1i { signed char v1:1; signed int v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1c_BFs1ll { signed char v1:1; signed int v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1c_BFs1s { signed char v1:1; signed int v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1c_BFu1c { signed char v1:1; signed int v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1c_BFu1i { signed char v1:1; signed int v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1c_BFu1ll { signed char v1:1; signed int v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1c_BFu1s { signed char v1:1; signed int v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1i { signed char v1:1; signed int v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1i_BFs1c { signed char v1:1; signed int v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1i_BFs1i { signed char v1:1; signed int v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1i_BFs1ll { signed char v1:1; signed int v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1i_BFs1s { signed char v1:1; signed int v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1i_BFu1c { signed char v1:1; signed int v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1i_BFu1i { signed char v1:1; signed int v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1i_BFu1ll { signed char v1:1; signed int v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1i_BFu1s { signed char v1:1; signed int v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1ll { signed char v1:1; signed int v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1ll_BFs1c { signed char v1:1; signed int v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1ll_BFs1i { signed char v1:1; signed int v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1ll_BFs1ll { signed char v1:1; signed int v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1ll_BFs1s { signed char v1:1; signed int v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1ll_BFu1c { signed char v1:1; signed int v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1ll_BFu1i { signed char v1:1; signed int v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1ll_BFu1ll { signed char v1:1; signed int v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1ll_BFu1s { signed char v1:1; signed int v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1s { signed char v1:1; signed int v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1s_BFs1c { signed char v1:1; signed int v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1s_BFs1i { signed char v1:1; signed int v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1s_BFs1ll { signed char v1:1; signed int v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1s_BFs1s { signed char v1:1; signed int v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1s_BFu1c { signed char v1:1; signed int v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1s_BFu1i { signed char v1:1; signed int v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1s_BFu1ll { signed char v1:1; signed int v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFs1s_BFu1s { signed char v1:1; signed int v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1c { signed char v1:1; signed int v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1c_BFs1c { signed char v1:1; signed int v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1c_BFs1i { signed char v1:1; signed int v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1c_BFs1ll { signed char v1:1; signed int v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1c_BFs1s { signed char v1:1; signed int v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1c_BFu1c { signed char v1:1; signed int v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1c_BFu1i { signed char v1:1; signed int v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1c_BFu1ll { signed char v1:1; signed int v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1c_BFu1s { signed char v1:1; signed int v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1i { signed char v1:1; signed int v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1i_BFs1c { signed char v1:1; signed int v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1i_BFs1i { signed char v1:1; signed int v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1i_BFs1ll { signed char v1:1; signed int v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1i_BFs1s { signed char v1:1; signed int v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1i_BFu1c { signed char v1:1; signed int v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1i_BFu1i { signed char v1:1; signed int v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1i_BFu1ll { signed char v1:1; signed int v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1i_BFu1s { signed char v1:1; signed int v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1ll { signed char v1:1; signed int v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1ll_BFs1c { signed char v1:1; signed int v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1ll_BFs1i { signed char v1:1; signed int v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1ll_BFs1ll { signed char v1:1; signed int v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1ll_BFs1s { signed char v1:1; signed int v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1ll_BFu1c { signed char v1:1; signed int v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1ll_BFu1i { signed char v1:1; signed int v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1ll_BFu1ll { signed char v1:1; signed int v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1ll_BFu1s { signed char v1:1; signed int v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1s { signed char v1:1; signed int v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1s_BFs1c { signed char v1:1; signed int v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1s_BFs1i { signed char v1:1; signed int v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1s_BFs1ll { signed char v1:1; signed int v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1s_BFs1s { signed char v1:1; signed int v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1s_BFu1c { signed char v1:1; signed int v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1s_BFu1i { signed char v1:1; signed int v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1s_BFu1ll { signed char v1:1; signed int v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1i_BFu1s_BFu1s { signed char v1:1; signed int v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll { signed char v1:1; signed long long v2:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1c { signed char v1:1; signed long long v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1c_BFs1c { signed char v1:1; signed long long v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1c_BFs1i { signed char v1:1; signed long long v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1c_BFs1ll { signed char v1:1; signed long long v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1c_BFs1s { signed char v1:1; signed long long v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1c_BFu1c { signed char v1:1; signed long long v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1c_BFu1i { signed char v1:1; signed long long v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1c_BFu1ll { signed char v1:1; signed long long v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1c_BFu1s { signed char v1:1; signed long long v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1i { signed char v1:1; signed long long v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1i_BFs1c { signed char v1:1; signed long long v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1i_BFs1i { signed char v1:1; signed long long v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1i_BFs1ll { signed char v1:1; signed long long v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1i_BFs1s { signed char v1:1; signed long long v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1i_BFu1c { signed char v1:1; signed long long v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1i_BFu1i { signed char v1:1; signed long long v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1i_BFu1ll { signed char v1:1; signed long long v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1i_BFu1s { signed char v1:1; signed long long v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1ll { signed char v1:1; signed long long v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1ll_BFs1c { signed char v1:1; signed long long v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1ll_BFs1i { signed char v1:1; signed long long v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1ll_BFs1ll { signed char v1:1; signed long long v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1ll_BFs1s { signed char v1:1; signed long long v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1ll_BFu1c { signed char v1:1; signed long long v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1ll_BFu1i { signed char v1:1; signed long long v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1ll_BFu1ll { signed char v1:1; signed long long v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1ll_BFu1s { signed char v1:1; signed long long v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1s { signed char v1:1; signed long long v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1s_BFs1c { signed char v1:1; signed long long v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1s_BFs1i { signed char v1:1; signed long long v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1s_BFs1ll { signed char v1:1; signed long long v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1s_BFs1s { signed char v1:1; signed long long v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1s_BFu1c { signed char v1:1; signed long long v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1s_BFu1i { signed char v1:1; signed long long v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1s_BFu1ll { signed char v1:1; signed long long v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFs1s_BFu1s { signed char v1:1; signed long long v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1c { signed char v1:1; signed long long v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1c_BFs1c { signed char v1:1; signed long long v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1c_BFs1i { signed char v1:1; signed long long v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1c_BFs1ll { signed char v1:1; signed long long v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1c_BFs1s { signed char v1:1; signed long long v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1c_BFu1c { signed char v1:1; signed long long v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1c_BFu1i { signed char v1:1; signed long long v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1c_BFu1ll { signed char v1:1; signed long long v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1c_BFu1s { signed char v1:1; signed long long v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1i { signed char v1:1; signed long long v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1i_BFs1c { signed char v1:1; signed long long v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1i_BFs1i { signed char v1:1; signed long long v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1i_BFs1ll { signed char v1:1; signed long long v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1i_BFs1s { signed char v1:1; signed long long v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1i_BFu1c { signed char v1:1; signed long long v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1i_BFu1i { signed char v1:1; signed long long v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1i_BFu1ll { signed char v1:1; signed long long v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1i_BFu1s { signed char v1:1; signed long long v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1ll { signed char v1:1; signed long long v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1ll_BFs1c { signed char v1:1; signed long long v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1ll_BFs1i { signed char v1:1; signed long long v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1ll_BFs1ll { signed char v1:1; signed long long v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1ll_BFs1s { signed char v1:1; signed long long v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1ll_BFu1c { signed char v1:1; signed long long v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1ll_BFu1i { signed char v1:1; signed long long v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1ll_BFu1ll { signed char v1:1; signed long long v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1ll_BFu1s { signed char v1:1; signed long long v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1s { signed char v1:1; signed long long v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1s_BFs1c { signed char v1:1; signed long long v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1s_BFs1i { signed char v1:1; signed long long v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1s_BFs1ll { signed char v1:1; signed long long v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1s_BFs1s { signed char v1:1; signed long long v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1s_BFu1c { signed char v1:1; signed long long v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1s_BFu1i { signed char v1:1; signed long long v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1s_BFu1ll { signed char v1:1; signed long long v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1ll_BFu1s_BFu1s { signed char v1:1; signed long long v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s { signed char v1:1; signed short v2:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1c { signed char v1:1; signed short v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1c_BFs1c { signed char v1:1; signed short v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1c_BFs1i { signed char v1:1; signed short v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1c_BFs1ll { signed char v1:1; signed short v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1c_BFs1s { signed char v1:1; signed short v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1c_BFu1c { signed char v1:1; signed short v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1c_BFu1i { signed char v1:1; signed short v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1c_BFu1ll { signed char v1:1; signed short v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1c_BFu1s { signed char v1:1; signed short v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1i { signed char v1:1; signed short v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1i_BFs1c { signed char v1:1; signed short v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1i_BFs1i { signed char v1:1; signed short v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1i_BFs1ll { signed char v1:1; signed short v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1i_BFs1s { signed char v1:1; signed short v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1i_BFu1c { signed char v1:1; signed short v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1i_BFu1i { signed char v1:1; signed short v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1i_BFu1ll { signed char v1:1; signed short v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1i_BFu1s { signed char v1:1; signed short v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1ll { signed char v1:1; signed short v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1ll_BFs1c { signed char v1:1; signed short v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1ll_BFs1i { signed char v1:1; signed short v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1ll_BFs1ll { signed char v1:1; signed short v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1ll_BFs1s { signed char v1:1; signed short v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1ll_BFu1c { signed char v1:1; signed short v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1ll_BFu1i { signed char v1:1; signed short v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1ll_BFu1ll { signed char v1:1; signed short v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1ll_BFu1s { signed char v1:1; signed short v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1s { signed char v1:1; signed short v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1s_BFs1c { signed char v1:1; signed short v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1s_BFs1i { signed char v1:1; signed short v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1s_BFs1ll { signed char v1:1; signed short v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1s_BFs1s { signed char v1:1; signed short v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1s_BFu1c { signed char v1:1; signed short v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1s_BFu1i { signed char v1:1; signed short v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1s_BFu1ll { signed char v1:1; signed short v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFs1s_BFu1s { signed char v1:1; signed short v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1c { signed char v1:1; signed short v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1c_BFs1c { signed char v1:1; signed short v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1c_BFs1i { signed char v1:1; signed short v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1c_BFs1ll { signed char v1:1; signed short v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1c_BFs1s { signed char v1:1; signed short v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1c_BFu1c { signed char v1:1; signed short v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1c_BFu1i { signed char v1:1; signed short v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1c_BFu1ll { signed char v1:1; signed short v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1c_BFu1s { signed char v1:1; signed short v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1i { signed char v1:1; signed short v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1i_BFs1c { signed char v1:1; signed short v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1i_BFs1i { signed char v1:1; signed short v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1i_BFs1ll { signed char v1:1; signed short v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1i_BFs1s { signed char v1:1; signed short v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1i_BFu1c { signed char v1:1; signed short v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1i_BFu1i { signed char v1:1; signed short v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1i_BFu1ll { signed char v1:1; signed short v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1i_BFu1s { signed char v1:1; signed short v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1ll { signed char v1:1; signed short v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1ll_BFs1c { signed char v1:1; signed short v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1ll_BFs1i { signed char v1:1; signed short v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1ll_BFs1ll { signed char v1:1; signed short v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1ll_BFs1s { signed char v1:1; signed short v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1ll_BFu1c { signed char v1:1; signed short v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1ll_BFu1i { signed char v1:1; signed short v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1ll_BFu1ll { signed char v1:1; signed short v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1ll_BFu1s { signed char v1:1; signed short v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1s { signed char v1:1; signed short v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1s_BFs1c { signed char v1:1; signed short v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1s_BFs1i { signed char v1:1; signed short v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1s_BFs1ll { signed char v1:1; signed short v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1s_BFs1s { signed char v1:1; signed short v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1s_BFu1c { signed char v1:1; signed short v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1s_BFu1i { signed char v1:1; signed short v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1s_BFu1ll { signed char v1:1; signed short v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFs1s_BFu1s_BFu1s { signed char v1:1; signed short v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c { signed char v1:1; unsigned char v2:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1c { signed char v1:1; unsigned char v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1c_BFs1c { signed char v1:1; unsigned char v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1c_BFs1i { signed char v1:1; unsigned char v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1c_BFs1ll { signed char v1:1; unsigned char v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1c_BFs1s { signed char v1:1; unsigned char v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1c_BFu1c { signed char v1:1; unsigned char v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1c_BFu1i { signed char v1:1; unsigned char v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1c_BFu1ll { signed char v1:1; unsigned char v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1c_BFu1s { signed char v1:1; unsigned char v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1i { signed char v1:1; unsigned char v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1i_BFs1c { signed char v1:1; unsigned char v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1i_BFs1i { signed char v1:1; unsigned char v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1i_BFs1ll { signed char v1:1; unsigned char v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1i_BFs1s { signed char v1:1; unsigned char v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1i_BFu1c { signed char v1:1; unsigned char v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1i_BFu1i { signed char v1:1; unsigned char v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1i_BFu1ll { signed char v1:1; unsigned char v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1i_BFu1s { signed char v1:1; unsigned char v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1ll { signed char v1:1; unsigned char v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1ll_BFs1c { signed char v1:1; unsigned char v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1ll_BFs1i { signed char v1:1; unsigned char v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1ll_BFs1ll { signed char v1:1; unsigned char v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1ll_BFs1s { signed char v1:1; unsigned char v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1ll_BFu1c { signed char v1:1; unsigned char v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1ll_BFu1i { signed char v1:1; unsigned char v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1ll_BFu1ll { signed char v1:1; unsigned char v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1ll_BFu1s { signed char v1:1; unsigned char v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1s { signed char v1:1; unsigned char v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1s_BFs1c { signed char v1:1; unsigned char v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1s_BFs1i { signed char v1:1; unsigned char v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1s_BFs1ll { signed char v1:1; unsigned char v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1s_BFs1s { signed char v1:1; unsigned char v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1s_BFu1c { signed char v1:1; unsigned char v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1s_BFu1i { signed char v1:1; unsigned char v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1s_BFu1ll { signed char v1:1; unsigned char v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFs1s_BFu1s { signed char v1:1; unsigned char v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1c { signed char v1:1; unsigned char v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1c_BFs1c { signed char v1:1; unsigned char v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1c_BFs1i { signed char v1:1; unsigned char v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1c_BFs1ll { signed char v1:1; unsigned char v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1c_BFs1s { signed char v1:1; unsigned char v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1c_BFu1c { signed char v1:1; unsigned char v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1c_BFu1i { signed char v1:1; unsigned char v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1c_BFu1ll { signed char v1:1; unsigned char v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1c_BFu1s { signed char v1:1; unsigned char v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1i { signed char v1:1; unsigned char v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1i_BFs1c { signed char v1:1; unsigned char v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1i_BFs1i { signed char v1:1; unsigned char v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1i_BFs1ll { signed char v1:1; unsigned char v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1i_BFs1s { signed char v1:1; unsigned char v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1i_BFu1c { signed char v1:1; unsigned char v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1i_BFu1i { signed char v1:1; unsigned char v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1i_BFu1ll { signed char v1:1; unsigned char v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1i_BFu1s { signed char v1:1; unsigned char v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1ll { signed char v1:1; unsigned char v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1ll_BFs1c { signed char v1:1; unsigned char v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1ll_BFs1i { signed char v1:1; unsigned char v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1ll_BFs1ll { signed char v1:1; unsigned char v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1ll_BFs1s { signed char v1:1; unsigned char v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1ll_BFu1c { signed char v1:1; unsigned char v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1ll_BFu1i { signed char v1:1; unsigned char v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1ll_BFu1ll { signed char v1:1; unsigned char v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1ll_BFu1s { signed char v1:1; unsigned char v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1s { signed char v1:1; unsigned char v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1s_BFs1c { signed char v1:1; unsigned char v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1s_BFs1i { signed char v1:1; unsigned char v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1s_BFs1ll { signed char v1:1; unsigned char v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1s_BFs1s { signed char v1:1; unsigned char v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1s_BFu1c { signed char v1:1; unsigned char v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1s_BFu1i { signed char v1:1; unsigned char v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1s_BFu1ll { signed char v1:1; unsigned char v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1c_BFu1s_BFu1s { signed char v1:1; unsigned char v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i { signed char v1:1; unsigned int v2:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1c { signed char v1:1; unsigned int v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1c_BFs1c { signed char v1:1; unsigned int v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1c_BFs1i { signed char v1:1; unsigned int v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1c_BFs1ll { signed char v1:1; unsigned int v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1c_BFs1s { signed char v1:1; unsigned int v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1c_BFu1c { signed char v1:1; unsigned int v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1c_BFu1i { signed char v1:1; unsigned int v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1c_BFu1ll { signed char v1:1; unsigned int v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1c_BFu1s { signed char v1:1; unsigned int v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1i { signed char v1:1; unsigned int v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1i_BFs1c { signed char v1:1; unsigned int v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1i_BFs1i { signed char v1:1; unsigned int v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1i_BFs1ll { signed char v1:1; unsigned int v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1i_BFs1s { signed char v1:1; unsigned int v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1i_BFu1c { signed char v1:1; unsigned int v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1i_BFu1i { signed char v1:1; unsigned int v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1i_BFu1ll { signed char v1:1; unsigned int v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1i_BFu1s { signed char v1:1; unsigned int v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1ll { signed char v1:1; unsigned int v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1ll_BFs1c { signed char v1:1; unsigned int v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1ll_BFs1i { signed char v1:1; unsigned int v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1ll_BFs1ll { signed char v1:1; unsigned int v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1ll_BFs1s { signed char v1:1; unsigned int v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1ll_BFu1c { signed char v1:1; unsigned int v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1ll_BFu1i { signed char v1:1; unsigned int v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1ll_BFu1ll { signed char v1:1; unsigned int v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1ll_BFu1s { signed char v1:1; unsigned int v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1s { signed char v1:1; unsigned int v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1s_BFs1c { signed char v1:1; unsigned int v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1s_BFs1i { signed char v1:1; unsigned int v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1s_BFs1ll { signed char v1:1; unsigned int v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1s_BFs1s { signed char v1:1; unsigned int v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1s_BFu1c { signed char v1:1; unsigned int v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1s_BFu1i { signed char v1:1; unsigned int v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1s_BFu1ll { signed char v1:1; unsigned int v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFs1s_BFu1s { signed char v1:1; unsigned int v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1c { signed char v1:1; unsigned int v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1c_BFs1c { signed char v1:1; unsigned int v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1c_BFs1i { signed char v1:1; unsigned int v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1c_BFs1ll { signed char v1:1; unsigned int v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1c_BFs1s { signed char v1:1; unsigned int v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1c_BFu1c { signed char v1:1; unsigned int v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1c_BFu1i { signed char v1:1; unsigned int v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1c_BFu1ll { signed char v1:1; unsigned int v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1c_BFu1s { signed char v1:1; unsigned int v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1i { signed char v1:1; unsigned int v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1i_BFs1c { signed char v1:1; unsigned int v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1i_BFs1i { signed char v1:1; unsigned int v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1i_BFs1ll { signed char v1:1; unsigned int v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1i_BFs1s { signed char v1:1; unsigned int v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1i_BFu1c { signed char v1:1; unsigned int v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1i_BFu1i { signed char v1:1; unsigned int v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1i_BFu1ll { signed char v1:1; unsigned int v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1i_BFu1s { signed char v1:1; unsigned int v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1ll { signed char v1:1; unsigned int v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1ll_BFs1c { signed char v1:1; unsigned int v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1ll_BFs1i { signed char v1:1; unsigned int v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1ll_BFs1ll { signed char v1:1; unsigned int v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1ll_BFs1s { signed char v1:1; unsigned int v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1ll_BFu1c { signed char v1:1; unsigned int v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1ll_BFu1i { signed char v1:1; unsigned int v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1ll_BFu1ll { signed char v1:1; unsigned int v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1ll_BFu1s { signed char v1:1; unsigned int v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1s { signed char v1:1; unsigned int v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1s_BFs1c { signed char v1:1; unsigned int v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1s_BFs1i { signed char v1:1; unsigned int v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1s_BFs1ll { signed char v1:1; unsigned int v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1s_BFs1s { signed char v1:1; unsigned int v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1s_BFu1c { signed char v1:1; unsigned int v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1s_BFu1i { signed char v1:1; unsigned int v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1s_BFu1ll { signed char v1:1; unsigned int v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1i_BFu1s_BFu1s { signed char v1:1; unsigned int v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll { signed char v1:1; unsigned long long v2:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1c { signed char v1:1; unsigned long long v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1c_BFs1c { signed char v1:1; unsigned long long v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1c_BFs1i { signed char v1:1; unsigned long long v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1c_BFs1ll { signed char v1:1; unsigned long long v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1c_BFs1s { signed char v1:1; unsigned long long v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1c_BFu1c { signed char v1:1; unsigned long long v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1c_BFu1i { signed char v1:1; unsigned long long v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1c_BFu1ll { signed char v1:1; unsigned long long v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1c_BFu1s { signed char v1:1; unsigned long long v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1i { signed char v1:1; unsigned long long v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1i_BFs1c { signed char v1:1; unsigned long long v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1i_BFs1i { signed char v1:1; unsigned long long v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1i_BFs1ll { signed char v1:1; unsigned long long v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1i_BFs1s { signed char v1:1; unsigned long long v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1i_BFu1c { signed char v1:1; unsigned long long v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1i_BFu1i { signed char v1:1; unsigned long long v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1i_BFu1ll { signed char v1:1; unsigned long long v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1i_BFu1s { signed char v1:1; unsigned long long v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1ll { signed char v1:1; unsigned long long v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1ll_BFs1c { signed char v1:1; unsigned long long v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1ll_BFs1i { signed char v1:1; unsigned long long v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1ll_BFs1ll { signed char v1:1; unsigned long long v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1ll_BFs1s { signed char v1:1; unsigned long long v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1ll_BFu1c { signed char v1:1; unsigned long long v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1ll_BFu1i { signed char v1:1; unsigned long long v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1ll_BFu1ll { signed char v1:1; unsigned long long v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1ll_BFu1s { signed char v1:1; unsigned long long v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1s { signed char v1:1; unsigned long long v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1s_BFs1c { signed char v1:1; unsigned long long v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1s_BFs1i { signed char v1:1; unsigned long long v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1s_BFs1ll { signed char v1:1; unsigned long long v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1s_BFs1s { signed char v1:1; unsigned long long v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1s_BFu1c { signed char v1:1; unsigned long long v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1s_BFu1i { signed char v1:1; unsigned long long v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1s_BFu1ll { signed char v1:1; unsigned long long v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFs1s_BFu1s { signed char v1:1; unsigned long long v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1c { signed char v1:1; unsigned long long v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1c_BFs1c { signed char v1:1; unsigned long long v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1c_BFs1i { signed char v1:1; unsigned long long v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1c_BFs1ll { signed char v1:1; unsigned long long v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1c_BFs1s { signed char v1:1; unsigned long long v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1c_BFu1c { signed char v1:1; unsigned long long v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1c_BFu1i { signed char v1:1; unsigned long long v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1c_BFu1ll { signed char v1:1; unsigned long long v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1c_BFu1s { signed char v1:1; unsigned long long v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1i { signed char v1:1; unsigned long long v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1i_BFs1c { signed char v1:1; unsigned long long v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1i_BFs1i { signed char v1:1; unsigned long long v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1i_BFs1ll { signed char v1:1; unsigned long long v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1i_BFs1s { signed char v1:1; unsigned long long v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1i_BFu1c { signed char v1:1; unsigned long long v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1i_BFu1i { signed char v1:1; unsigned long long v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1i_BFu1ll { signed char v1:1; unsigned long long v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1i_BFu1s { signed char v1:1; unsigned long long v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1ll { signed char v1:1; unsigned long long v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1ll_BFs1c { signed char v1:1; unsigned long long v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1ll_BFs1i { signed char v1:1; unsigned long long v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1ll_BFs1ll { signed char v1:1; unsigned long long v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1ll_BFs1s { signed char v1:1; unsigned long long v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1ll_BFu1c { signed char v1:1; unsigned long long v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1ll_BFu1i { signed char v1:1; unsigned long long v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1ll_BFu1ll { signed char v1:1; unsigned long long v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1ll_BFu1s { signed char v1:1; unsigned long long v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1s { signed char v1:1; unsigned long long v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1s_BFs1c { signed char v1:1; unsigned long long v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1s_BFs1i { signed char v1:1; unsigned long long v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1s_BFs1ll { signed char v1:1; unsigned long long v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1s_BFs1s { signed char v1:1; unsigned long long v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1s_BFu1c { signed char v1:1; unsigned long long v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1s_BFu1i { signed char v1:1; unsigned long long v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1s_BFu1ll { signed char v1:1; unsigned long long v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1ll_BFu1s_BFu1s { signed char v1:1; unsigned long long v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s { signed char v1:1; unsigned short v2:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1c { signed char v1:1; unsigned short v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1c_BFs1c { signed char v1:1; unsigned short v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1c_BFs1i { signed char v1:1; unsigned short v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1c_BFs1ll { signed char v1:1; unsigned short v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1c_BFs1s { signed char v1:1; unsigned short v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1c_BFu1c { signed char v1:1; unsigned short v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1c_BFu1i { signed char v1:1; unsigned short v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1c_BFu1ll { signed char v1:1; unsigned short v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1c_BFu1s { signed char v1:1; unsigned short v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1i { signed char v1:1; unsigned short v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1i_BFs1c { signed char v1:1; unsigned short v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1i_BFs1i { signed char v1:1; unsigned short v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1i_BFs1ll { signed char v1:1; unsigned short v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1i_BFs1s { signed char v1:1; unsigned short v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1i_BFu1c { signed char v1:1; unsigned short v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1i_BFu1i { signed char v1:1; unsigned short v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1i_BFu1ll { signed char v1:1; unsigned short v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1i_BFu1s { signed char v1:1; unsigned short v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1ll { signed char v1:1; unsigned short v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1ll_BFs1c { signed char v1:1; unsigned short v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1ll_BFs1i { signed char v1:1; unsigned short v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1ll_BFs1ll { signed char v1:1; unsigned short v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1ll_BFs1s { signed char v1:1; unsigned short v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1ll_BFu1c { signed char v1:1; unsigned short v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1ll_BFu1i { signed char v1:1; unsigned short v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1ll_BFu1ll { signed char v1:1; unsigned short v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1ll_BFu1s { signed char v1:1; unsigned short v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1s { signed char v1:1; unsigned short v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1s_BFs1c { signed char v1:1; unsigned short v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1s_BFs1i { signed char v1:1; unsigned short v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1s_BFs1ll { signed char v1:1; unsigned short v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1s_BFs1s { signed char v1:1; unsigned short v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1s_BFu1c { signed char v1:1; unsigned short v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1s_BFu1i { signed char v1:1; unsigned short v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1s_BFu1ll { signed char v1:1; unsigned short v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFs1s_BFu1s { signed char v1:1; unsigned short v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1c { signed char v1:1; unsigned short v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1c_BFs1c { signed char v1:1; unsigned short v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1c_BFs1i { signed char v1:1; unsigned short v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1c_BFs1ll { signed char v1:1; unsigned short v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1c_BFs1s { signed char v1:1; unsigned short v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1c_BFu1c { signed char v1:1; unsigned short v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1c_BFu1i { signed char v1:1; unsigned short v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1c_BFu1ll { signed char v1:1; unsigned short v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1c_BFu1s { signed char v1:1; unsigned short v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1i { signed char v1:1; unsigned short v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1i_BFs1c { signed char v1:1; unsigned short v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1i_BFs1i { signed char v1:1; unsigned short v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1i_BFs1ll { signed char v1:1; unsigned short v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1i_BFs1s { signed char v1:1; unsigned short v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1i_BFu1c { signed char v1:1; unsigned short v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1i_BFu1i { signed char v1:1; unsigned short v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1i_BFu1ll { signed char v1:1; unsigned short v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1i_BFu1s { signed char v1:1; unsigned short v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1ll { signed char v1:1; unsigned short v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1ll_BFs1c { signed char v1:1; unsigned short v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1ll_BFs1i { signed char v1:1; unsigned short v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1ll_BFs1ll { signed char v1:1; unsigned short v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1ll_BFs1s { signed char v1:1; unsigned short v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1ll_BFu1c { signed char v1:1; unsigned short v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1ll_BFu1i { signed char v1:1; unsigned short v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1ll_BFu1ll { signed char v1:1; unsigned short v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1ll_BFu1s { signed char v1:1; unsigned short v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1s { signed char v1:1; unsigned short v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1s_BFs1c { signed char v1:1; unsigned short v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1s_BFs1i { signed char v1:1; unsigned short v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1s_BFs1ll { signed char v1:1; unsigned short v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1s_BFs1s { signed char v1:1; unsigned short v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1s_BFu1c { signed char v1:1; unsigned short v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1s_BFu1i { signed char v1:1; unsigned short v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1s_BFu1ll { signed char v1:1; unsigned short v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1c_BFu1s_BFu1s_BFu1s { signed char v1:1; unsigned short v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c { signed int v1:1; signed char v2:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1c { signed int v1:1; signed char v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1c_BFs1c { signed int v1:1; signed char v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1c_BFs1i { signed int v1:1; signed char v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1c_BFs1ll { signed int v1:1; signed char v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1c_BFs1s { signed int v1:1; signed char v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1c_BFu1c { signed int v1:1; signed char v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1c_BFu1i { signed int v1:1; signed char v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1c_BFu1ll { signed int v1:1; signed char v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1c_BFu1s { signed int v1:1; signed char v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1i { signed int v1:1; signed char v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1i_BFs1c { signed int v1:1; signed char v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1i_BFs1i { signed int v1:1; signed char v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1i_BFs1ll { signed int v1:1; signed char v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1i_BFs1s { signed int v1:1; signed char v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1i_BFu1c { signed int v1:1; signed char v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1i_BFu1i { signed int v1:1; signed char v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1i_BFu1ll { signed int v1:1; signed char v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1i_BFu1s { signed int v1:1; signed char v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1ll { signed int v1:1; signed char v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1ll_BFs1c { signed int v1:1; signed char v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1ll_BFs1i { signed int v1:1; signed char v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1ll_BFs1ll { signed int v1:1; signed char v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1ll_BFs1s { signed int v1:1; signed char v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1ll_BFu1c { signed int v1:1; signed char v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1ll_BFu1i { signed int v1:1; signed char v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1ll_BFu1ll { signed int v1:1; signed char v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1ll_BFu1s { signed int v1:1; signed char v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1s { signed int v1:1; signed char v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1s_BFs1c { signed int v1:1; signed char v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1s_BFs1i { signed int v1:1; signed char v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1s_BFs1ll { signed int v1:1; signed char v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1s_BFs1s { signed int v1:1; signed char v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1s_BFu1c { signed int v1:1; signed char v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1s_BFu1i { signed int v1:1; signed char v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1s_BFu1ll { signed int v1:1; signed char v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFs1s_BFu1s { signed int v1:1; signed char v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1c { signed int v1:1; signed char v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1c_BFs1c { signed int v1:1; signed char v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1c_BFs1i { signed int v1:1; signed char v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1c_BFs1ll { signed int v1:1; signed char v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1c_BFs1s { signed int v1:1; signed char v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1c_BFu1c { signed int v1:1; signed char v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1c_BFu1i { signed int v1:1; signed char v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1c_BFu1ll { signed int v1:1; signed char v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1c_BFu1s { signed int v1:1; signed char v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1i { signed int v1:1; signed char v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1i_BFs1c { signed int v1:1; signed char v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1i_BFs1i { signed int v1:1; signed char v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1i_BFs1ll { signed int v1:1; signed char v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1i_BFs1s { signed int v1:1; signed char v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1i_BFu1c { signed int v1:1; signed char v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1i_BFu1i { signed int v1:1; signed char v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1i_BFu1ll { signed int v1:1; signed char v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1i_BFu1s { signed int v1:1; signed char v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1ll { signed int v1:1; signed char v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1ll_BFs1c { signed int v1:1; signed char v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1ll_BFs1i { signed int v1:1; signed char v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1ll_BFs1ll { signed int v1:1; signed char v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1ll_BFs1s { signed int v1:1; signed char v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1ll_BFu1c { signed int v1:1; signed char v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1ll_BFu1i { signed int v1:1; signed char v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1ll_BFu1ll { signed int v1:1; signed char v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1ll_BFu1s { signed int v1:1; signed char v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1s { signed int v1:1; signed char v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1s_BFs1c { signed int v1:1; signed char v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1s_BFs1i { signed int v1:1; signed char v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1s_BFs1ll { signed int v1:1; signed char v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1s_BFs1s { signed int v1:1; signed char v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1s_BFu1c { signed int v1:1; signed char v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1s_BFu1i { signed int v1:1; signed char v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1s_BFu1ll { signed int v1:1; signed char v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1c_BFu1s_BFu1s { signed int v1:1; signed char v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i { signed int v1:1; signed int v2:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1c { signed int v1:1; signed int v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1c_BFs1c { signed int v1:1; signed int v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1c_BFs1i { signed int v1:1; signed int v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1c_BFs1ll { signed int v1:1; signed int v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1c_BFs1s { signed int v1:1; signed int v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1c_BFu1c { signed int v1:1; signed int v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1c_BFu1i { signed int v1:1; signed int v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1c_BFu1ll { signed int v1:1; signed int v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1c_BFu1s { signed int v1:1; signed int v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1i { signed int v1:1; signed int v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1i_BFs1c { signed int v1:1; signed int v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1i_BFs1i { signed int v1:1; signed int v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1i_BFs1ll { signed int v1:1; signed int v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1i_BFs1s { signed int v1:1; signed int v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1i_BFu1c { signed int v1:1; signed int v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1i_BFu1i { signed int v1:1; signed int v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1i_BFu1ll { signed int v1:1; signed int v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1i_BFu1s { signed int v1:1; signed int v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1ll { signed int v1:1; signed int v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1ll_BFs1c { signed int v1:1; signed int v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1ll_BFs1i { signed int v1:1; signed int v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1ll_BFs1ll { signed int v1:1; signed int v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1ll_BFs1s { signed int v1:1; signed int v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1ll_BFu1c { signed int v1:1; signed int v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1ll_BFu1i { signed int v1:1; signed int v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1ll_BFu1ll { signed int v1:1; signed int v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1ll_BFu1s { signed int v1:1; signed int v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1s { signed int v1:1; signed int v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1s_BFs1c { signed int v1:1; signed int v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1s_BFs1i { signed int v1:1; signed int v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1s_BFs1ll { signed int v1:1; signed int v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1s_BFs1s { signed int v1:1; signed int v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1s_BFu1c { signed int v1:1; signed int v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1s_BFu1i { signed int v1:1; signed int v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1s_BFu1ll { signed int v1:1; signed int v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFs1s_BFu1s { signed int v1:1; signed int v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1c { signed int v1:1; signed int v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1c_BFs1c { signed int v1:1; signed int v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1c_BFs1i { signed int v1:1; signed int v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1c_BFs1ll { signed int v1:1; signed int v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1c_BFs1s { signed int v1:1; signed int v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1c_BFu1c { signed int v1:1; signed int v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1c_BFu1i { signed int v1:1; signed int v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1c_BFu1ll { signed int v1:1; signed int v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1c_BFu1s { signed int v1:1; signed int v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1i { signed int v1:1; signed int v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1i_BFs1c { signed int v1:1; signed int v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1i_BFs1i { signed int v1:1; signed int v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1i_BFs1ll { signed int v1:1; signed int v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1i_BFs1s { signed int v1:1; signed int v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1i_BFu1c { signed int v1:1; signed int v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1i_BFu1i { signed int v1:1; signed int v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1i_BFu1ll { signed int v1:1; signed int v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1i_BFu1s { signed int v1:1; signed int v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1ll { signed int v1:1; signed int v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1ll_BFs1c { signed int v1:1; signed int v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1ll_BFs1i { signed int v1:1; signed int v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1ll_BFs1ll { signed int v1:1; signed int v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1ll_BFs1s { signed int v1:1; signed int v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1ll_BFu1c { signed int v1:1; signed int v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1ll_BFu1i { signed int v1:1; signed int v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1ll_BFu1ll { signed int v1:1; signed int v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1ll_BFu1s { signed int v1:1; signed int v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1s { signed int v1:1; signed int v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1s_BFs1c { signed int v1:1; signed int v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1s_BFs1i { signed int v1:1; signed int v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1s_BFs1ll { signed int v1:1; signed int v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1s_BFs1s { signed int v1:1; signed int v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1s_BFu1c { signed int v1:1; signed int v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1s_BFu1i { signed int v1:1; signed int v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1s_BFu1ll { signed int v1:1; signed int v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1i_BFu1s_BFu1s { signed int v1:1; signed int v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll { signed int v1:1; signed long long v2:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1c { signed int v1:1; signed long long v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1c_BFs1c { signed int v1:1; signed long long v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1c_BFs1i { signed int v1:1; signed long long v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1c_BFs1ll { signed int v1:1; signed long long v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1c_BFs1s { signed int v1:1; signed long long v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1c_BFu1c { signed int v1:1; signed long long v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1c_BFu1i { signed int v1:1; signed long long v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1c_BFu1ll { signed int v1:1; signed long long v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1c_BFu1s { signed int v1:1; signed long long v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1i { signed int v1:1; signed long long v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1i_BFs1c { signed int v1:1; signed long long v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1i_BFs1i { signed int v1:1; signed long long v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1i_BFs1ll { signed int v1:1; signed long long v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1i_BFs1s { signed int v1:1; signed long long v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1i_BFu1c { signed int v1:1; signed long long v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1i_BFu1i { signed int v1:1; signed long long v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1i_BFu1ll { signed int v1:1; signed long long v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1i_BFu1s { signed int v1:1; signed long long v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1ll { signed int v1:1; signed long long v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1ll_BFs1c { signed int v1:1; signed long long v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1ll_BFs1i { signed int v1:1; signed long long v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1ll_BFs1ll { signed int v1:1; signed long long v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1ll_BFs1s { signed int v1:1; signed long long v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1ll_BFu1c { signed int v1:1; signed long long v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1ll_BFu1i { signed int v1:1; signed long long v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1ll_BFu1ll { signed int v1:1; signed long long v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1ll_BFu1s { signed int v1:1; signed long long v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1s { signed int v1:1; signed long long v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1s_BFs1c { signed int v1:1; signed long long v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1s_BFs1i { signed int v1:1; signed long long v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1s_BFs1ll { signed int v1:1; signed long long v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1s_BFs1s { signed int v1:1; signed long long v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1s_BFu1c { signed int v1:1; signed long long v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1s_BFu1i { signed int v1:1; signed long long v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1s_BFu1ll { signed int v1:1; signed long long v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFs1s_BFu1s { signed int v1:1; signed long long v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1c { signed int v1:1; signed long long v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1c_BFs1c { signed int v1:1; signed long long v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1c_BFs1i { signed int v1:1; signed long long v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1c_BFs1ll { signed int v1:1; signed long long v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1c_BFs1s { signed int v1:1; signed long long v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1c_BFu1c { signed int v1:1; signed long long v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1c_BFu1i { signed int v1:1; signed long long v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1c_BFu1ll { signed int v1:1; signed long long v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1c_BFu1s { signed int v1:1; signed long long v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1i { signed int v1:1; signed long long v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1i_BFs1c { signed int v1:1; signed long long v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1i_BFs1i { signed int v1:1; signed long long v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1i_BFs1ll { signed int v1:1; signed long long v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1i_BFs1s { signed int v1:1; signed long long v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1i_BFu1c { signed int v1:1; signed long long v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1i_BFu1i { signed int v1:1; signed long long v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1i_BFu1ll { signed int v1:1; signed long long v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1i_BFu1s { signed int v1:1; signed long long v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1ll { signed int v1:1; signed long long v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1ll_BFs1c { signed int v1:1; signed long long v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1ll_BFs1i { signed int v1:1; signed long long v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1ll_BFs1ll { signed int v1:1; signed long long v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1ll_BFs1s { signed int v1:1; signed long long v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1ll_BFu1c { signed int v1:1; signed long long v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1ll_BFu1i { signed int v1:1; signed long long v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1ll_BFu1ll { signed int v1:1; signed long long v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1ll_BFu1s { signed int v1:1; signed long long v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1s { signed int v1:1; signed long long v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1s_BFs1c { signed int v1:1; signed long long v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1s_BFs1i { signed int v1:1; signed long long v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1s_BFs1ll { signed int v1:1; signed long long v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1s_BFs1s { signed int v1:1; signed long long v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1s_BFu1c { signed int v1:1; signed long long v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1s_BFu1i { signed int v1:1; signed long long v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1s_BFu1ll { signed int v1:1; signed long long v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1ll_BFu1s_BFu1s { signed int v1:1; signed long long v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s { signed int v1:1; signed short v2:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1c { signed int v1:1; signed short v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1c_BFs1c { signed int v1:1; signed short v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1c_BFs1i { signed int v1:1; signed short v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1c_BFs1ll { signed int v1:1; signed short v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1c_BFs1s { signed int v1:1; signed short v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1c_BFu1c { signed int v1:1; signed short v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1c_BFu1i { signed int v1:1; signed short v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1c_BFu1ll { signed int v1:1; signed short v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1c_BFu1s { signed int v1:1; signed short v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1i { signed int v1:1; signed short v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1i_BFs1c { signed int v1:1; signed short v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1i_BFs1i { signed int v1:1; signed short v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1i_BFs1ll { signed int v1:1; signed short v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1i_BFs1s { signed int v1:1; signed short v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1i_BFu1c { signed int v1:1; signed short v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1i_BFu1i { signed int v1:1; signed short v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1i_BFu1ll { signed int v1:1; signed short v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1i_BFu1s { signed int v1:1; signed short v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1ll { signed int v1:1; signed short v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1ll_BFs1c { signed int v1:1; signed short v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1ll_BFs1i { signed int v1:1; signed short v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1ll_BFs1ll { signed int v1:1; signed short v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1ll_BFs1s { signed int v1:1; signed short v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1ll_BFu1c { signed int v1:1; signed short v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1ll_BFu1i { signed int v1:1; signed short v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1ll_BFu1ll { signed int v1:1; signed short v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1ll_BFu1s { signed int v1:1; signed short v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1s { signed int v1:1; signed short v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1s_BFs1c { signed int v1:1; signed short v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1s_BFs1i { signed int v1:1; signed short v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1s_BFs1ll { signed int v1:1; signed short v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1s_BFs1s { signed int v1:1; signed short v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1s_BFu1c { signed int v1:1; signed short v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1s_BFu1i { signed int v1:1; signed short v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1s_BFu1ll { signed int v1:1; signed short v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFs1s_BFu1s { signed int v1:1; signed short v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1c { signed int v1:1; signed short v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1c_BFs1c { signed int v1:1; signed short v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1c_BFs1i { signed int v1:1; signed short v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1c_BFs1ll { signed int v1:1; signed short v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1c_BFs1s { signed int v1:1; signed short v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1c_BFu1c { signed int v1:1; signed short v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1c_BFu1i { signed int v1:1; signed short v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1c_BFu1ll { signed int v1:1; signed short v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1c_BFu1s { signed int v1:1; signed short v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1i { signed int v1:1; signed short v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1i_BFs1c { signed int v1:1; signed short v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1i_BFs1i { signed int v1:1; signed short v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1i_BFs1ll { signed int v1:1; signed short v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1i_BFs1s { signed int v1:1; signed short v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1i_BFu1c { signed int v1:1; signed short v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1i_BFu1i { signed int v1:1; signed short v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1i_BFu1ll { signed int v1:1; signed short v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1i_BFu1s { signed int v1:1; signed short v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1ll { signed int v1:1; signed short v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1ll_BFs1c { signed int v1:1; signed short v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1ll_BFs1i { signed int v1:1; signed short v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1ll_BFs1ll { signed int v1:1; signed short v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1ll_BFs1s { signed int v1:1; signed short v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1ll_BFu1c { signed int v1:1; signed short v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1ll_BFu1i { signed int v1:1; signed short v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1ll_BFu1ll { signed int v1:1; signed short v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1ll_BFu1s { signed int v1:1; signed short v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1s { signed int v1:1; signed short v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1s_BFs1c { signed int v1:1; signed short v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1s_BFs1i { signed int v1:1; signed short v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1s_BFs1ll { signed int v1:1; signed short v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1s_BFs1s { signed int v1:1; signed short v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1s_BFu1c { signed int v1:1; signed short v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1s_BFu1i { signed int v1:1; signed short v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1s_BFu1ll { signed int v1:1; signed short v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFs1s_BFu1s_BFu1s { signed int v1:1; signed short v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c { signed int v1:1; unsigned char v2:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1c { signed int v1:1; unsigned char v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1c_BFs1c { signed int v1:1; unsigned char v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1c_BFs1i { signed int v1:1; unsigned char v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1c_BFs1ll { signed int v1:1; unsigned char v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1c_BFs1s { signed int v1:1; unsigned char v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1c_BFu1c { signed int v1:1; unsigned char v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1c_BFu1i { signed int v1:1; unsigned char v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1c_BFu1ll { signed int v1:1; unsigned char v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1c_BFu1s { signed int v1:1; unsigned char v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1i { signed int v1:1; unsigned char v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1i_BFs1c { signed int v1:1; unsigned char v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1i_BFs1i { signed int v1:1; unsigned char v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1i_BFs1ll { signed int v1:1; unsigned char v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1i_BFs1s { signed int v1:1; unsigned char v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1i_BFu1c { signed int v1:1; unsigned char v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1i_BFu1i { signed int v1:1; unsigned char v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1i_BFu1ll { signed int v1:1; unsigned char v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1i_BFu1s { signed int v1:1; unsigned char v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1ll { signed int v1:1; unsigned char v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1ll_BFs1c { signed int v1:1; unsigned char v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1ll_BFs1i { signed int v1:1; unsigned char v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1ll_BFs1ll { signed int v1:1; unsigned char v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1ll_BFs1s { signed int v1:1; unsigned char v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1ll_BFu1c { signed int v1:1; unsigned char v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1ll_BFu1i { signed int v1:1; unsigned char v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1ll_BFu1ll { signed int v1:1; unsigned char v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1ll_BFu1s { signed int v1:1; unsigned char v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1s { signed int v1:1; unsigned char v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1s_BFs1c { signed int v1:1; unsigned char v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1s_BFs1i { signed int v1:1; unsigned char v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1s_BFs1ll { signed int v1:1; unsigned char v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1s_BFs1s { signed int v1:1; unsigned char v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1s_BFu1c { signed int v1:1; unsigned char v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1s_BFu1i { signed int v1:1; unsigned char v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1s_BFu1ll { signed int v1:1; unsigned char v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFs1s_BFu1s { signed int v1:1; unsigned char v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1c { signed int v1:1; unsigned char v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1c_BFs1c { signed int v1:1; unsigned char v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1c_BFs1i { signed int v1:1; unsigned char v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1c_BFs1ll { signed int v1:1; unsigned char v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1c_BFs1s { signed int v1:1; unsigned char v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1c_BFu1c { signed int v1:1; unsigned char v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1c_BFu1i { signed int v1:1; unsigned char v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1c_BFu1ll { signed int v1:1; unsigned char v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1c_BFu1s { signed int v1:1; unsigned char v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1i { signed int v1:1; unsigned char v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1i_BFs1c { signed int v1:1; unsigned char v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1i_BFs1i { signed int v1:1; unsigned char v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1i_BFs1ll { signed int v1:1; unsigned char v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1i_BFs1s { signed int v1:1; unsigned char v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1i_BFu1c { signed int v1:1; unsigned char v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1i_BFu1i { signed int v1:1; unsigned char v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1i_BFu1ll { signed int v1:1; unsigned char v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1i_BFu1s { signed int v1:1; unsigned char v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1ll { signed int v1:1; unsigned char v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1ll_BFs1c { signed int v1:1; unsigned char v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1ll_BFs1i { signed int v1:1; unsigned char v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1ll_BFs1ll { signed int v1:1; unsigned char v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1ll_BFs1s { signed int v1:1; unsigned char v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1ll_BFu1c { signed int v1:1; unsigned char v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1ll_BFu1i { signed int v1:1; unsigned char v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1ll_BFu1ll { signed int v1:1; unsigned char v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1ll_BFu1s { signed int v1:1; unsigned char v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1s { signed int v1:1; unsigned char v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1s_BFs1c { signed int v1:1; unsigned char v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1s_BFs1i { signed int v1:1; unsigned char v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1s_BFs1ll { signed int v1:1; unsigned char v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1s_BFs1s { signed int v1:1; unsigned char v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1s_BFu1c { signed int v1:1; unsigned char v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1s_BFu1i { signed int v1:1; unsigned char v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1s_BFu1ll { signed int v1:1; unsigned char v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1c_BFu1s_BFu1s { signed int v1:1; unsigned char v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i { signed int v1:1; unsigned int v2:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1c { signed int v1:1; unsigned int v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1c_BFs1c { signed int v1:1; unsigned int v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1c_BFs1i { signed int v1:1; unsigned int v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1c_BFs1ll { signed int v1:1; unsigned int v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1c_BFs1s { signed int v1:1; unsigned int v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1c_BFu1c { signed int v1:1; unsigned int v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1c_BFu1i { signed int v1:1; unsigned int v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1c_BFu1ll { signed int v1:1; unsigned int v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1c_BFu1s { signed int v1:1; unsigned int v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1i { signed int v1:1; unsigned int v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1i_BFs1c { signed int v1:1; unsigned int v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1i_BFs1i { signed int v1:1; unsigned int v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1i_BFs1ll { signed int v1:1; unsigned int v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1i_BFs1s { signed int v1:1; unsigned int v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1i_BFu1c { signed int v1:1; unsigned int v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1i_BFu1i { signed int v1:1; unsigned int v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1i_BFu1ll { signed int v1:1; unsigned int v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1i_BFu1s { signed int v1:1; unsigned int v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1ll { signed int v1:1; unsigned int v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1ll_BFs1c { signed int v1:1; unsigned int v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1ll_BFs1i { signed int v1:1; unsigned int v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1ll_BFs1ll { signed int v1:1; unsigned int v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1ll_BFs1s { signed int v1:1; unsigned int v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1ll_BFu1c { signed int v1:1; unsigned int v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1ll_BFu1i { signed int v1:1; unsigned int v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1ll_BFu1ll { signed int v1:1; unsigned int v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1ll_BFu1s { signed int v1:1; unsigned int v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1s { signed int v1:1; unsigned int v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1s_BFs1c { signed int v1:1; unsigned int v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1s_BFs1i { signed int v1:1; unsigned int v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1s_BFs1ll { signed int v1:1; unsigned int v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1s_BFs1s { signed int v1:1; unsigned int v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1s_BFu1c { signed int v1:1; unsigned int v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1s_BFu1i { signed int v1:1; unsigned int v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1s_BFu1ll { signed int v1:1; unsigned int v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFs1s_BFu1s { signed int v1:1; unsigned int v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1c { signed int v1:1; unsigned int v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1c_BFs1c { signed int v1:1; unsigned int v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1c_BFs1i { signed int v1:1; unsigned int v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1c_BFs1ll { signed int v1:1; unsigned int v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1c_BFs1s { signed int v1:1; unsigned int v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1c_BFu1c { signed int v1:1; unsigned int v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1c_BFu1i { signed int v1:1; unsigned int v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1c_BFu1ll { signed int v1:1; unsigned int v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1c_BFu1s { signed int v1:1; unsigned int v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1i { signed int v1:1; unsigned int v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1i_BFs1c { signed int v1:1; unsigned int v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1i_BFs1i { signed int v1:1; unsigned int v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1i_BFs1ll { signed int v1:1; unsigned int v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1i_BFs1s { signed int v1:1; unsigned int v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1i_BFu1c { signed int v1:1; unsigned int v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1i_BFu1i { signed int v1:1; unsigned int v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1i_BFu1ll { signed int v1:1; unsigned int v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1i_BFu1s { signed int v1:1; unsigned int v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1ll { signed int v1:1; unsigned int v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1ll_BFs1c { signed int v1:1; unsigned int v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1ll_BFs1i { signed int v1:1; unsigned int v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1ll_BFs1ll { signed int v1:1; unsigned int v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1ll_BFs1s { signed int v1:1; unsigned int v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1ll_BFu1c { signed int v1:1; unsigned int v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1ll_BFu1i { signed int v1:1; unsigned int v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1ll_BFu1ll { signed int v1:1; unsigned int v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1ll_BFu1s { signed int v1:1; unsigned int v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1s { signed int v1:1; unsigned int v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1s_BFs1c { signed int v1:1; unsigned int v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1s_BFs1i { signed int v1:1; unsigned int v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1s_BFs1ll { signed int v1:1; unsigned int v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1s_BFs1s { signed int v1:1; unsigned int v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1s_BFu1c { signed int v1:1; unsigned int v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1s_BFu1i { signed int v1:1; unsigned int v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1s_BFu1ll { signed int v1:1; unsigned int v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1i_BFu1s_BFu1s { signed int v1:1; unsigned int v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll { signed int v1:1; unsigned long long v2:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1c { signed int v1:1; unsigned long long v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1c_BFs1c { signed int v1:1; unsigned long long v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1c_BFs1i { signed int v1:1; unsigned long long v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1c_BFs1ll { signed int v1:1; unsigned long long v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1c_BFs1s { signed int v1:1; unsigned long long v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1c_BFu1c { signed int v1:1; unsigned long long v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1c_BFu1i { signed int v1:1; unsigned long long v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1c_BFu1ll { signed int v1:1; unsigned long long v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1c_BFu1s { signed int v1:1; unsigned long long v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1i { signed int v1:1; unsigned long long v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1i_BFs1c { signed int v1:1; unsigned long long v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1i_BFs1i { signed int v1:1; unsigned long long v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1i_BFs1ll { signed int v1:1; unsigned long long v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1i_BFs1s { signed int v1:1; unsigned long long v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1i_BFu1c { signed int v1:1; unsigned long long v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1i_BFu1i { signed int v1:1; unsigned long long v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1i_BFu1ll { signed int v1:1; unsigned long long v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1i_BFu1s { signed int v1:1; unsigned long long v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1ll { signed int v1:1; unsigned long long v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1ll_BFs1c { signed int v1:1; unsigned long long v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1ll_BFs1i { signed int v1:1; unsigned long long v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1ll_BFs1ll { signed int v1:1; unsigned long long v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1ll_BFs1s { signed int v1:1; unsigned long long v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1ll_BFu1c { signed int v1:1; unsigned long long v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1ll_BFu1i { signed int v1:1; unsigned long long v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1ll_BFu1ll { signed int v1:1; unsigned long long v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1ll_BFu1s { signed int v1:1; unsigned long long v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1s { signed int v1:1; unsigned long long v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1s_BFs1c { signed int v1:1; unsigned long long v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1s_BFs1i { signed int v1:1; unsigned long long v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1s_BFs1ll { signed int v1:1; unsigned long long v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1s_BFs1s { signed int v1:1; unsigned long long v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1s_BFu1c { signed int v1:1; unsigned long long v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1s_BFu1i { signed int v1:1; unsigned long long v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1s_BFu1ll { signed int v1:1; unsigned long long v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFs1s_BFu1s { signed int v1:1; unsigned long long v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1c { signed int v1:1; unsigned long long v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1c_BFs1c { signed int v1:1; unsigned long long v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1c_BFs1i { signed int v1:1; unsigned long long v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1c_BFs1ll { signed int v1:1; unsigned long long v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1c_BFs1s { signed int v1:1; unsigned long long v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1c_BFu1c { signed int v1:1; unsigned long long v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1c_BFu1i { signed int v1:1; unsigned long long v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1c_BFu1ll { signed int v1:1; unsigned long long v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1c_BFu1s { signed int v1:1; unsigned long long v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1i { signed int v1:1; unsigned long long v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1i_BFs1c { signed int v1:1; unsigned long long v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1i_BFs1i { signed int v1:1; unsigned long long v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1i_BFs1ll { signed int v1:1; unsigned long long v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1i_BFs1s { signed int v1:1; unsigned long long v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1i_BFu1c { signed int v1:1; unsigned long long v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1i_BFu1i { signed int v1:1; unsigned long long v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1i_BFu1ll { signed int v1:1; unsigned long long v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1i_BFu1s { signed int v1:1; unsigned long long v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1ll { signed int v1:1; unsigned long long v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1ll_BFs1c { signed int v1:1; unsigned long long v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1ll_BFs1i { signed int v1:1; unsigned long long v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1ll_BFs1ll { signed int v1:1; unsigned long long v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1ll_BFs1s { signed int v1:1; unsigned long long v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1ll_BFu1c { signed int v1:1; unsigned long long v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1ll_BFu1i { signed int v1:1; unsigned long long v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1ll_BFu1ll { signed int v1:1; unsigned long long v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1ll_BFu1s { signed int v1:1; unsigned long long v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1s { signed int v1:1; unsigned long long v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1s_BFs1c { signed int v1:1; unsigned long long v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1s_BFs1i { signed int v1:1; unsigned long long v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1s_BFs1ll { signed int v1:1; unsigned long long v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1s_BFs1s { signed int v1:1; unsigned long long v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1s_BFu1c { signed int v1:1; unsigned long long v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1s_BFu1i { signed int v1:1; unsigned long long v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1s_BFu1ll { signed int v1:1; unsigned long long v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1ll_BFu1s_BFu1s { signed int v1:1; unsigned long long v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s { signed int v1:1; unsigned short v2:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1c { signed int v1:1; unsigned short v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1c_BFs1c { signed int v1:1; unsigned short v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1c_BFs1i { signed int v1:1; unsigned short v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1c_BFs1ll { signed int v1:1; unsigned short v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1c_BFs1s { signed int v1:1; unsigned short v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1c_BFu1c { signed int v1:1; unsigned short v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1c_BFu1i { signed int v1:1; unsigned short v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1c_BFu1ll { signed int v1:1; unsigned short v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1c_BFu1s { signed int v1:1; unsigned short v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1i { signed int v1:1; unsigned short v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1i_BFs1c { signed int v1:1; unsigned short v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1i_BFs1i { signed int v1:1; unsigned short v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1i_BFs1ll { signed int v1:1; unsigned short v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1i_BFs1s { signed int v1:1; unsigned short v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1i_BFu1c { signed int v1:1; unsigned short v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1i_BFu1i { signed int v1:1; unsigned short v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1i_BFu1ll { signed int v1:1; unsigned short v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1i_BFu1s { signed int v1:1; unsigned short v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1ll { signed int v1:1; unsigned short v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1ll_BFs1c { signed int v1:1; unsigned short v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1ll_BFs1i { signed int v1:1; unsigned short v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1ll_BFs1ll { signed int v1:1; unsigned short v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1ll_BFs1s { signed int v1:1; unsigned short v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1ll_BFu1c { signed int v1:1; unsigned short v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1ll_BFu1i { signed int v1:1; unsigned short v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1ll_BFu1ll { signed int v1:1; unsigned short v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1ll_BFu1s { signed int v1:1; unsigned short v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1s { signed int v1:1; unsigned short v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1s_BFs1c { signed int v1:1; unsigned short v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1s_BFs1i { signed int v1:1; unsigned short v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1s_BFs1ll { signed int v1:1; unsigned short v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1s_BFs1s { signed int v1:1; unsigned short v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1s_BFu1c { signed int v1:1; unsigned short v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1s_BFu1i { signed int v1:1; unsigned short v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1s_BFu1ll { signed int v1:1; unsigned short v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFs1s_BFu1s { signed int v1:1; unsigned short v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1c { signed int v1:1; unsigned short v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1c_BFs1c { signed int v1:1; unsigned short v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1c_BFs1i { signed int v1:1; unsigned short v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1c_BFs1ll { signed int v1:1; unsigned short v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1c_BFs1s { signed int v1:1; unsigned short v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1c_BFu1c { signed int v1:1; unsigned short v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1c_BFu1i { signed int v1:1; unsigned short v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1c_BFu1ll { signed int v1:1; unsigned short v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1c_BFu1s { signed int v1:1; unsigned short v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1i { signed int v1:1; unsigned short v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1i_BFs1c { signed int v1:1; unsigned short v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1i_BFs1i { signed int v1:1; unsigned short v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1i_BFs1ll { signed int v1:1; unsigned short v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1i_BFs1s { signed int v1:1; unsigned short v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1i_BFu1c { signed int v1:1; unsigned short v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1i_BFu1i { signed int v1:1; unsigned short v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1i_BFu1ll { signed int v1:1; unsigned short v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1i_BFu1s { signed int v1:1; unsigned short v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1ll { signed int v1:1; unsigned short v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1ll_BFs1c { signed int v1:1; unsigned short v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1ll_BFs1i { signed int v1:1; unsigned short v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1ll_BFs1ll { signed int v1:1; unsigned short v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1ll_BFs1s { signed int v1:1; unsigned short v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1ll_BFu1c { signed int v1:1; unsigned short v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1ll_BFu1i { signed int v1:1; unsigned short v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1ll_BFu1ll { signed int v1:1; unsigned short v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1ll_BFu1s { signed int v1:1; unsigned short v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1s { signed int v1:1; unsigned short v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1s_BFs1c { signed int v1:1; unsigned short v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1s_BFs1i { signed int v1:1; unsigned short v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1s_BFs1ll { signed int v1:1; unsigned short v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1s_BFs1s { signed int v1:1; unsigned short v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1s_BFu1c { signed int v1:1; unsigned short v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1s_BFu1i { signed int v1:1; unsigned short v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1s_BFu1ll { signed int v1:1; unsigned short v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1i_BFu1s_BFu1s_BFu1s { signed int v1:1; unsigned short v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c { signed long long v1:1; signed char v2:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1c { signed long long v1:1; signed char v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1c_BFs1c { signed long long v1:1; signed char v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1c_BFs1i { signed long long v1:1; signed char v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1c_BFs1ll { signed long long v1:1; signed char v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1c_BFs1s { signed long long v1:1; signed char v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1c_BFu1c { signed long long v1:1; signed char v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1c_BFu1i { signed long long v1:1; signed char v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1c_BFu1ll { signed long long v1:1; signed char v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1c_BFu1s { signed long long v1:1; signed char v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1i { signed long long v1:1; signed char v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1i_BFs1c { signed long long v1:1; signed char v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1i_BFs1i { signed long long v1:1; signed char v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1i_BFs1ll { signed long long v1:1; signed char v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1i_BFs1s { signed long long v1:1; signed char v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1i_BFu1c { signed long long v1:1; signed char v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1i_BFu1i { signed long long v1:1; signed char v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1i_BFu1ll { signed long long v1:1; signed char v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1i_BFu1s { signed long long v1:1; signed char v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1ll { signed long long v1:1; signed char v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1ll_BFs1c { signed long long v1:1; signed char v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1ll_BFs1i { signed long long v1:1; signed char v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1ll_BFs1ll { signed long long v1:1; signed char v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1ll_BFs1s { signed long long v1:1; signed char v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1ll_BFu1c { signed long long v1:1; signed char v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1ll_BFu1i { signed long long v1:1; signed char v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1ll_BFu1ll { signed long long v1:1; signed char v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1ll_BFu1s { signed long long v1:1; signed char v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1s { signed long long v1:1; signed char v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1s_BFs1c { signed long long v1:1; signed char v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1s_BFs1i { signed long long v1:1; signed char v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1s_BFs1ll { signed long long v1:1; signed char v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1s_BFs1s { signed long long v1:1; signed char v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1s_BFu1c { signed long long v1:1; signed char v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1s_BFu1i { signed long long v1:1; signed char v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1s_BFu1ll { signed long long v1:1; signed char v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFs1s_BFu1s { signed long long v1:1; signed char v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1c { signed long long v1:1; signed char v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1c_BFs1c { signed long long v1:1; signed char v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1c_BFs1i { signed long long v1:1; signed char v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1c_BFs1ll { signed long long v1:1; signed char v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1c_BFs1s { signed long long v1:1; signed char v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1c_BFu1c { signed long long v1:1; signed char v2:1; unsigned char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1c_BFu1i { signed long long v1:1; signed char v2:1; unsigned char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1c_BFu1ll { signed long long v1:1; signed char v2:1; unsigned char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1c_BFu1s { signed long long v1:1; signed char v2:1; unsigned char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1i { signed long long v1:1; signed char v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1i_BFs1c { signed long long v1:1; signed char v2:1; unsigned int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1i_BFs1i { signed long long v1:1; signed char v2:1; unsigned int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1i_BFs1ll { signed long long v1:1; signed char v2:1; unsigned int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1i_BFs1s { signed long long v1:1; signed char v2:1; unsigned int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1i_BFu1c { signed long long v1:1; signed char v2:1; unsigned int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1i_BFu1i { signed long long v1:1; signed char v2:1; unsigned int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1i_BFu1ll { signed long long v1:1; signed char v2:1; unsigned int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1i_BFu1s { signed long long v1:1; signed char v2:1; unsigned int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1ll { signed long long v1:1; signed char v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1ll_BFs1c { signed long long v1:1; signed char v2:1; unsigned long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1ll_BFs1i { signed long long v1:1; signed char v2:1; unsigned long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1ll_BFs1ll { signed long long v1:1; signed char v2:1; unsigned long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1ll_BFs1s { signed long long v1:1; signed char v2:1; unsigned long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1ll_BFu1c { signed long long v1:1; signed char v2:1; unsigned long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1ll_BFu1i { signed long long v1:1; signed char v2:1; unsigned long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1ll_BFu1ll { signed long long v1:1; signed char v2:1; unsigned long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1ll_BFu1s { signed long long v1:1; signed char v2:1; unsigned long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1s { signed long long v1:1; signed char v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1s_BFs1c { signed long long v1:1; signed char v2:1; unsigned short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1s_BFs1i { signed long long v1:1; signed char v2:1; unsigned short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1s_BFs1ll { signed long long v1:1; signed char v2:1; unsigned short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1s_BFs1s { signed long long v1:1; signed char v2:1; unsigned short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1s_BFu1c { signed long long v1:1; signed char v2:1; unsigned short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1s_BFu1i { signed long long v1:1; signed char v2:1; unsigned short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1s_BFu1ll { signed long long v1:1; signed char v2:1; unsigned short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1c_BFu1s_BFu1s { signed long long v1:1; signed char v2:1; unsigned short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i { signed long long v1:1; signed int v2:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1c { signed long long v1:1; signed int v2:1; signed char v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1c_BFs1c { signed long long v1:1; signed int v2:1; signed char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1c_BFs1i { signed long long v1:1; signed int v2:1; signed char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1c_BFs1ll { signed long long v1:1; signed int v2:1; signed char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1c_BFs1s { signed long long v1:1; signed int v2:1; signed char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1c_BFu1c { signed long long v1:1; signed int v2:1; signed char v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1c_BFu1i { signed long long v1:1; signed int v2:1; signed char v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1c_BFu1ll { signed long long v1:1; signed int v2:1; signed char v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1c_BFu1s { signed long long v1:1; signed int v2:1; signed char v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1i { signed long long v1:1; signed int v2:1; signed int v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1i_BFs1c { signed long long v1:1; signed int v2:1; signed int v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1i_BFs1i { signed long long v1:1; signed int v2:1; signed int v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1i_BFs1ll { signed long long v1:1; signed int v2:1; signed int v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1i_BFs1s { signed long long v1:1; signed int v2:1; signed int v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1i_BFu1c { signed long long v1:1; signed int v2:1; signed int v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1i_BFu1i { signed long long v1:1; signed int v2:1; signed int v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1i_BFu1ll { signed long long v1:1; signed int v2:1; signed int v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1i_BFu1s { signed long long v1:1; signed int v2:1; signed int v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1ll { signed long long v1:1; signed int v2:1; signed long long v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1ll_BFs1c { signed long long v1:1; signed int v2:1; signed long long v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1ll_BFs1i { signed long long v1:1; signed int v2:1; signed long long v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1ll_BFs1ll { signed long long v1:1; signed int v2:1; signed long long v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1ll_BFs1s { signed long long v1:1; signed int v2:1; signed long long v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1ll_BFu1c { signed long long v1:1; signed int v2:1; signed long long v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1ll_BFu1i { signed long long v1:1; signed int v2:1; signed long long v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1ll_BFu1ll { signed long long v1:1; signed int v2:1; signed long long v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1ll_BFu1s { signed long long v1:1; signed int v2:1; signed long long v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1s { signed long long v1:1; signed int v2:1; signed short v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1s_BFs1c { signed long long v1:1; signed int v2:1; signed short v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1s_BFs1i { signed long long v1:1; signed int v2:1; signed short v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1s_BFs1ll { signed long long v1:1; signed int v2:1; signed short v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1s_BFs1s { signed long long v1:1; signed int v2:1; signed short v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1s_BFu1c { signed long long v1:1; signed int v2:1; signed short v3:1; unsigned char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1s_BFu1i { signed long long v1:1; signed int v2:1; signed short v3:1; unsigned int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1s_BFu1ll { signed long long v1:1; signed int v2:1; signed short v3:1; unsigned long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFs1s_BFu1s { signed long long v1:1; signed int v2:1; signed short v3:1; unsigned short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFu1c { signed long long v1:1; signed int v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFu1c_BFs1c { signed long long v1:1; signed int v2:1; unsigned char v3:1; signed char v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFu1c_BFs1i { signed long long v1:1; signed int v2:1; unsigned char v3:1; signed int v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFu1c_BFs1ll { signed long long v1:1; signed int v2:1; unsigned char v3:1; signed long long v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFu1c_BFs1s { signed long long v1:1; signed int v2:1; unsigned char v3:1; signed short v4:1; };
struct __attribute__((packed)) aBFs1ll_BFs1i_BFu1c_BFu1c { signed long long v1:1; signed int v2:1; unsigned char v3:1; unsigned char v4:1; };


static void Test_aBFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i, aBFs15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15i, aBFs15i_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15i_BFs15i, aBFs15i_BFs15i_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15i_BFs15ll, aBFs15i_BFs15i_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15i_BFs15s, aBFs15i_BFs15i_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15i_BFu15i, aBFs15i_BFs15i_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15i_BFu15ll, aBFs15i_BFs15i_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15i_BFu15s, aBFs15i_BFs15i_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15ll, aBFs15i_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15ll_BFs15i, aBFs15i_BFs15i_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15ll_BFs15ll, aBFs15i_BFs15i_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15ll_BFs15s, aBFs15i_BFs15i_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15ll_BFu15i, aBFs15i_BFs15i_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15ll_BFu15ll, aBFs15i_BFs15i_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15ll_BFu15s, aBFs15i_BFs15i_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15s, aBFs15i_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15s_BFs15i, aBFs15i_BFs15i_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15s_BFs15ll, aBFs15i_BFs15i_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15s_BFs15s, aBFs15i_BFs15i_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15s_BFu15i, aBFs15i_BFs15i_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15s_BFu15ll, aBFs15i_BFs15i_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFs15s_BFu15s, aBFs15i_BFs15i_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15i, aBFs15i_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15i_BFs15i, aBFs15i_BFs15i_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15i_BFs15ll, aBFs15i_BFs15i_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15i_BFs15s, aBFs15i_BFs15i_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15i_BFu15i, aBFs15i_BFs15i_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15i_BFu15ll, aBFs15i_BFs15i_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15i_BFu15s, aBFs15i_BFs15i_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15ll, aBFs15i_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15ll_BFs15i, aBFs15i_BFs15i_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15ll_BFs15ll, aBFs15i_BFs15i_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15ll_BFs15s, aBFs15i_BFs15i_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15ll_BFu15i, aBFs15i_BFs15i_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15ll_BFu15ll, aBFs15i_BFs15i_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15ll_BFu15s, aBFs15i_BFs15i_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15s, aBFs15i_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15s_BFs15i, aBFs15i_BFs15i_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15s_BFs15ll, aBFs15i_BFs15i_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15s_BFs15s, aBFs15i_BFs15i_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15s_BFu15i, aBFs15i_BFs15i_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15s_BFu15ll, aBFs15i_BFs15i_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15i_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15i_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15i_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15i_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15i_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15i_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15i_BFu15s_BFu15s, aBFs15i_BFs15i_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll, aBFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15i, aBFs15i_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15i_BFs15i, aBFs15i_BFs15ll_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15i_BFs15ll, aBFs15i_BFs15ll_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15i_BFs15s, aBFs15i_BFs15ll_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15i_BFu15i, aBFs15i_BFs15ll_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15i_BFu15ll, aBFs15i_BFs15ll_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15i_BFu15s, aBFs15i_BFs15ll_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15ll, aBFs15i_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15ll_BFs15i, aBFs15i_BFs15ll_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15ll_BFs15ll, aBFs15i_BFs15ll_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15ll_BFs15s, aBFs15i_BFs15ll_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15ll_BFu15i, aBFs15i_BFs15ll_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15ll_BFu15ll, aBFs15i_BFs15ll_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15ll_BFu15s, aBFs15i_BFs15ll_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15s, aBFs15i_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15s_BFs15i, aBFs15i_BFs15ll_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15s_BFs15ll, aBFs15i_BFs15ll_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15s_BFs15s, aBFs15i_BFs15ll_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15s_BFu15i, aBFs15i_BFs15ll_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15s_BFu15ll, aBFs15i_BFs15ll_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFs15s_BFu15s, aBFs15i_BFs15ll_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15i, aBFs15i_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15i_BFs15i, aBFs15i_BFs15ll_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15i_BFs15ll, aBFs15i_BFs15ll_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15i_BFs15s, aBFs15i_BFs15ll_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15i_BFu15i, aBFs15i_BFs15ll_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15i_BFu15ll, aBFs15i_BFs15ll_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15i_BFu15s, aBFs15i_BFs15ll_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15ll, aBFs15i_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15ll_BFs15i, aBFs15i_BFs15ll_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15ll_BFs15ll, aBFs15i_BFs15ll_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15ll_BFs15s, aBFs15i_BFs15ll_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15ll_BFu15i, aBFs15i_BFs15ll_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15ll_BFu15ll, aBFs15i_BFs15ll_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15ll_BFu15s, aBFs15i_BFs15ll_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15s, aBFs15i_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15s_BFs15i, aBFs15i_BFs15ll_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15s_BFs15ll, aBFs15i_BFs15ll_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15s_BFs15s, aBFs15i_BFs15ll_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15s_BFu15i, aBFs15i_BFs15ll_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15s_BFu15ll, aBFs15i_BFs15ll_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15ll_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15ll_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15ll_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15ll_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15ll_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15ll_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15ll_BFu15s_BFu15s, aBFs15i_BFs15ll_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s, aBFs15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15i, aBFs15i_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15i_BFs15i, aBFs15i_BFs15s_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15i_BFs15ll, aBFs15i_BFs15s_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15i_BFs15s, aBFs15i_BFs15s_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15i_BFu15i, aBFs15i_BFs15s_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15i_BFu15ll, aBFs15i_BFs15s_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15i_BFu15s, aBFs15i_BFs15s_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15ll, aBFs15i_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15ll_BFs15i, aBFs15i_BFs15s_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15ll_BFs15ll, aBFs15i_BFs15s_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15ll_BFs15s, aBFs15i_BFs15s_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15ll_BFu15i, aBFs15i_BFs15s_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15ll_BFu15ll, aBFs15i_BFs15s_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15ll_BFu15s, aBFs15i_BFs15s_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15s, aBFs15i_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15s_BFs15i, aBFs15i_BFs15s_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15s_BFs15ll, aBFs15i_BFs15s_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15s_BFs15s, aBFs15i_BFs15s_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15s_BFu15i, aBFs15i_BFs15s_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15s_BFu15ll, aBFs15i_BFs15s_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFs15s_BFu15s, aBFs15i_BFs15s_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15i, aBFs15i_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15i_BFs15i, aBFs15i_BFs15s_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15i_BFs15ll, aBFs15i_BFs15s_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15i_BFs15s, aBFs15i_BFs15s_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15i_BFu15i, aBFs15i_BFs15s_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15i_BFu15ll, aBFs15i_BFs15s_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15i_BFu15s, aBFs15i_BFs15s_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15ll, aBFs15i_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15ll_BFs15i, aBFs15i_BFs15s_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15ll_BFs15ll, aBFs15i_BFs15s_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15ll_BFs15s, aBFs15i_BFs15s_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15ll_BFu15i, aBFs15i_BFs15s_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15ll_BFu15ll, aBFs15i_BFs15s_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15ll_BFu15s, aBFs15i_BFs15s_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15s, aBFs15i_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15s_BFs15i, aBFs15i_BFs15s_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15s_BFs15ll, aBFs15i_BFs15s_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15s_BFs15s, aBFs15i_BFs15s_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15s_BFu15i, aBFs15i_BFs15s_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15s_BFu15ll, aBFs15i_BFs15s_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFs15s_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFs15s_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFs15s_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFs15s_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFs15s_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFs15s_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFs15s_BFu15s_BFu15s, aBFs15i_BFs15s_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i, aBFs15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15i, aBFs15i_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15i_BFs15i, aBFs15i_BFu15i_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15i_BFs15ll, aBFs15i_BFu15i_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15i_BFs15s, aBFs15i_BFu15i_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15i_BFu15i, aBFs15i_BFu15i_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15i_BFu15ll, aBFs15i_BFu15i_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15i_BFu15s, aBFs15i_BFu15i_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15ll, aBFs15i_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15ll_BFs15i, aBFs15i_BFu15i_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15ll_BFs15ll, aBFs15i_BFu15i_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15ll_BFs15s, aBFs15i_BFu15i_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15ll_BFu15i, aBFs15i_BFu15i_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15ll_BFu15ll, aBFs15i_BFu15i_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15ll_BFu15s, aBFs15i_BFu15i_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15s, aBFs15i_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15s_BFs15i, aBFs15i_BFu15i_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15s_BFs15ll, aBFs15i_BFu15i_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15s_BFs15s, aBFs15i_BFu15i_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15s_BFu15i, aBFs15i_BFu15i_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15s_BFu15ll, aBFs15i_BFu15i_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFs15s_BFu15s, aBFs15i_BFu15i_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15i, aBFs15i_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15i_BFs15i, aBFs15i_BFu15i_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15i_BFs15ll, aBFs15i_BFu15i_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15i_BFs15s, aBFs15i_BFu15i_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15i_BFu15i, aBFs15i_BFu15i_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15i_BFu15ll, aBFs15i_BFu15i_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15i_BFu15s, aBFs15i_BFu15i_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15ll, aBFs15i_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15ll_BFs15i, aBFs15i_BFu15i_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15ll_BFs15ll, aBFs15i_BFu15i_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15ll_BFs15s, aBFs15i_BFu15i_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15ll_BFu15i, aBFs15i_BFu15i_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15ll_BFu15ll, aBFs15i_BFu15i_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15ll_BFu15s, aBFs15i_BFu15i_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15s, aBFs15i_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15s_BFs15i, aBFs15i_BFu15i_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15s_BFs15ll, aBFs15i_BFu15i_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15s_BFs15s, aBFs15i_BFu15i_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15s_BFu15i, aBFs15i_BFu15i_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15s_BFu15ll, aBFs15i_BFu15i_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15i_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15i_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15i_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15i_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15i_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15i_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15i_BFu15s_BFu15s, aBFs15i_BFu15i_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll, aBFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15i, aBFs15i_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15i_BFs15i, aBFs15i_BFu15ll_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15i_BFs15ll, aBFs15i_BFu15ll_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15i_BFs15s, aBFs15i_BFu15ll_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15i_BFu15i, aBFs15i_BFu15ll_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15i_BFu15ll, aBFs15i_BFu15ll_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15i_BFu15s, aBFs15i_BFu15ll_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15ll, aBFs15i_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15ll_BFs15i, aBFs15i_BFu15ll_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15ll_BFs15ll, aBFs15i_BFu15ll_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15ll_BFs15s, aBFs15i_BFu15ll_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15ll_BFu15i, aBFs15i_BFu15ll_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15ll_BFu15ll, aBFs15i_BFu15ll_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15ll_BFu15s, aBFs15i_BFu15ll_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15s, aBFs15i_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15s_BFs15i, aBFs15i_BFu15ll_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15s_BFs15ll, aBFs15i_BFu15ll_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15s_BFs15s, aBFs15i_BFu15ll_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15s_BFu15i, aBFs15i_BFu15ll_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15s_BFu15ll, aBFs15i_BFu15ll_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFs15s_BFu15s, aBFs15i_BFu15ll_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15i, aBFs15i_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15i_BFs15i, aBFs15i_BFu15ll_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15i_BFs15ll, aBFs15i_BFu15ll_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15i_BFs15s, aBFs15i_BFu15ll_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15i_BFu15i, aBFs15i_BFu15ll_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15i_BFu15ll, aBFs15i_BFu15ll_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15i_BFu15s, aBFs15i_BFu15ll_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15ll, aBFs15i_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15ll_BFs15i, aBFs15i_BFu15ll_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15ll_BFs15ll, aBFs15i_BFu15ll_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15ll_BFs15s, aBFs15i_BFu15ll_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15ll_BFu15i, aBFs15i_BFu15ll_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15ll_BFu15ll, aBFs15i_BFu15ll_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15ll_BFu15s, aBFs15i_BFu15ll_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15s, aBFs15i_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15s_BFs15i, aBFs15i_BFu15ll_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15s_BFs15ll, aBFs15i_BFu15ll_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15s_BFs15s, aBFs15i_BFu15ll_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15s_BFu15i, aBFs15i_BFu15ll_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15s_BFu15ll, aBFs15i_BFu15ll_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15ll_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15ll_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15ll_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15ll_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15ll_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15ll_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15ll_BFu15s_BFu15s, aBFs15i_BFu15ll_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s, aBFs15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15i, aBFs15i_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15i_BFs15i, aBFs15i_BFu15s_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15i_BFs15ll, aBFs15i_BFu15s_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15i_BFs15s, aBFs15i_BFu15s_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15i_BFu15i, aBFs15i_BFu15s_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15i_BFu15ll, aBFs15i_BFu15s_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15i_BFu15s, aBFs15i_BFu15s_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15ll, aBFs15i_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15ll_BFs15i, aBFs15i_BFu15s_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15ll_BFs15ll, aBFs15i_BFu15s_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15ll_BFs15s, aBFs15i_BFu15s_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15ll_BFu15i, aBFs15i_BFu15s_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15ll_BFu15ll, aBFs15i_BFu15s_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15ll_BFu15s, aBFs15i_BFu15s_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15s, aBFs15i_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15s_BFs15i, aBFs15i_BFu15s_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15s_BFs15ll, aBFs15i_BFu15s_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15s_BFs15s, aBFs15i_BFu15s_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15s_BFu15i, aBFs15i_BFu15s_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15s_BFu15ll, aBFs15i_BFu15s_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFs15s_BFu15s, aBFs15i_BFu15s_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15i, aBFs15i_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15i_BFs15i, aBFs15i_BFu15s_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15i_BFs15ll, aBFs15i_BFu15s_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15i_BFs15s, aBFs15i_BFu15s_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15i_BFu15i, aBFs15i_BFu15s_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15i_BFu15ll, aBFs15i_BFu15s_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15i_BFu15s, aBFs15i_BFu15s_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15ll, aBFs15i_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15ll_BFs15i, aBFs15i_BFu15s_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15ll_BFs15ll, aBFs15i_BFu15s_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15ll_BFs15s, aBFs15i_BFu15s_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15ll_BFu15i, aBFs15i_BFu15s_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15ll_BFu15ll, aBFs15i_BFu15s_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15ll_BFu15s, aBFs15i_BFu15s_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15i_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15s, aBFs15i_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15s_BFs15i, aBFs15i_BFu15s_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15s_BFs15ll, aBFs15i_BFu15s_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15s_BFs15s, aBFs15i_BFu15s_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15s_BFu15i, aBFs15i_BFu15s_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15s_BFu15ll, aBFs15i_BFu15s_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15i_BFu15s_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15i_BFu15s_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15i_BFu15s_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15i_BFu15s_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15i_BFu15s_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15i_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15i_BFu15s_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15i_BFu15s_BFu15s_BFu15s, aBFs15i_BFu15s_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i, aBFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15i, aBFs15ll_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15i_BFs15i, aBFs15ll_BFs15i_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15i_BFs15ll, aBFs15ll_BFs15i_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15i_BFs15s, aBFs15ll_BFs15i_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15i_BFu15i, aBFs15ll_BFs15i_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15i_BFu15ll, aBFs15ll_BFs15i_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15i_BFu15s, aBFs15ll_BFs15i_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15ll, aBFs15ll_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15ll_BFs15i, aBFs15ll_BFs15i_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15ll_BFs15ll, aBFs15ll_BFs15i_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15ll_BFs15s, aBFs15ll_BFs15i_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15ll_BFu15i, aBFs15ll_BFs15i_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15ll_BFu15ll, aBFs15ll_BFs15i_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15ll_BFu15s, aBFs15ll_BFs15i_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15s, aBFs15ll_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15s_BFs15i, aBFs15ll_BFs15i_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15s_BFs15ll, aBFs15ll_BFs15i_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15s_BFs15s, aBFs15ll_BFs15i_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15s_BFu15i, aBFs15ll_BFs15i_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15s_BFu15ll, aBFs15ll_BFs15i_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFs15s_BFu15s, aBFs15ll_BFs15i_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15i, aBFs15ll_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15i_BFs15i, aBFs15ll_BFs15i_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15i_BFs15ll, aBFs15ll_BFs15i_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15i_BFs15s, aBFs15ll_BFs15i_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15i_BFu15i, aBFs15ll_BFs15i_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15i_BFu15ll, aBFs15ll_BFs15i_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15i_BFu15s, aBFs15ll_BFs15i_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15ll, aBFs15ll_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15ll_BFs15i, aBFs15ll_BFs15i_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15ll_BFs15ll, aBFs15ll_BFs15i_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15ll_BFs15s, aBFs15ll_BFs15i_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15ll_BFu15i, aBFs15ll_BFs15i_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15ll_BFu15ll, aBFs15ll_BFs15i_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15ll_BFu15s, aBFs15ll_BFs15i_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15s, aBFs15ll_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15s_BFs15i, aBFs15ll_BFs15i_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15s_BFs15ll, aBFs15ll_BFs15i_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15s_BFs15s, aBFs15ll_BFs15i_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15s_BFu15i, aBFs15ll_BFs15i_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15s_BFu15ll, aBFs15ll_BFs15i_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15i_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15i_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15i_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15i_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15i_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15i_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15i_BFu15s_BFu15s, aBFs15ll_BFs15i_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll, aBFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15i, aBFs15ll_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15i_BFs15i, aBFs15ll_BFs15ll_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15i_BFs15ll, aBFs15ll_BFs15ll_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15i_BFs15s, aBFs15ll_BFs15ll_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15i_BFu15i, aBFs15ll_BFs15ll_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15i_BFu15ll, aBFs15ll_BFs15ll_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15i_BFu15s, aBFs15ll_BFs15ll_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15ll, aBFs15ll_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15ll_BFs15i, aBFs15ll_BFs15ll_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15ll_BFs15ll, aBFs15ll_BFs15ll_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15ll_BFs15s, aBFs15ll_BFs15ll_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15ll_BFu15i, aBFs15ll_BFs15ll_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15ll_BFu15ll, aBFs15ll_BFs15ll_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15ll_BFu15s, aBFs15ll_BFs15ll_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15s, aBFs15ll_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15s_BFs15i, aBFs15ll_BFs15ll_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15s_BFs15ll, aBFs15ll_BFs15ll_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15s_BFs15s, aBFs15ll_BFs15ll_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15s_BFu15i, aBFs15ll_BFs15ll_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15s_BFu15ll, aBFs15ll_BFs15ll_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFs15s_BFu15s, aBFs15ll_BFs15ll_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15i, aBFs15ll_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15i_BFs15i, aBFs15ll_BFs15ll_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15i_BFs15ll, aBFs15ll_BFs15ll_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15i_BFs15s, aBFs15ll_BFs15ll_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15i_BFu15i, aBFs15ll_BFs15ll_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15i_BFu15ll, aBFs15ll_BFs15ll_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15i_BFu15s, aBFs15ll_BFs15ll_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15ll, aBFs15ll_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15ll_BFs15i, aBFs15ll_BFs15ll_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15ll_BFs15ll, aBFs15ll_BFs15ll_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15ll_BFs15s, aBFs15ll_BFs15ll_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15ll_BFu15i, aBFs15ll_BFs15ll_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15ll_BFu15ll, aBFs15ll_BFs15ll_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15ll_BFu15s, aBFs15ll_BFs15ll_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15s, aBFs15ll_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15s_BFs15i, aBFs15ll_BFs15ll_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15s_BFs15ll, aBFs15ll_BFs15ll_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15s_BFs15s, aBFs15ll_BFs15ll_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15s_BFu15i, aBFs15ll_BFs15ll_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15s_BFu15ll, aBFs15ll_BFs15ll_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15ll_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15ll_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15ll_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15ll_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15ll_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15ll_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15ll_BFu15s_BFu15s, aBFs15ll_BFs15ll_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s, aBFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15i, aBFs15ll_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15i_BFs15i, aBFs15ll_BFs15s_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15i_BFs15ll, aBFs15ll_BFs15s_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15i_BFs15s, aBFs15ll_BFs15s_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15i_BFu15i, aBFs15ll_BFs15s_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15i_BFu15ll, aBFs15ll_BFs15s_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15i_BFu15s, aBFs15ll_BFs15s_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15ll, aBFs15ll_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15ll_BFs15i, aBFs15ll_BFs15s_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15ll_BFs15ll, aBFs15ll_BFs15s_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15ll_BFs15s, aBFs15ll_BFs15s_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15ll_BFu15i, aBFs15ll_BFs15s_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15ll_BFu15ll, aBFs15ll_BFs15s_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15ll_BFu15s, aBFs15ll_BFs15s_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15s, aBFs15ll_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15s_BFs15i, aBFs15ll_BFs15s_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15s_BFs15ll, aBFs15ll_BFs15s_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15s_BFs15s, aBFs15ll_BFs15s_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15s_BFu15i, aBFs15ll_BFs15s_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15s_BFu15ll, aBFs15ll_BFs15s_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFs15s_BFu15s, aBFs15ll_BFs15s_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15i, aBFs15ll_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15i_BFs15i, aBFs15ll_BFs15s_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15i_BFs15ll, aBFs15ll_BFs15s_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15i_BFs15s, aBFs15ll_BFs15s_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15i_BFu15i, aBFs15ll_BFs15s_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15i_BFu15ll, aBFs15ll_BFs15s_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15i_BFu15s, aBFs15ll_BFs15s_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15ll, aBFs15ll_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15ll_BFs15i, aBFs15ll_BFs15s_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15ll_BFs15ll, aBFs15ll_BFs15s_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15ll_BFs15s, aBFs15ll_BFs15s_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15ll_BFu15i, aBFs15ll_BFs15s_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15ll_BFu15ll, aBFs15ll_BFs15s_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15ll_BFu15s, aBFs15ll_BFs15s_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15s, aBFs15ll_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15s_BFs15i, aBFs15ll_BFs15s_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15s_BFs15ll, aBFs15ll_BFs15s_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15s_BFs15s, aBFs15ll_BFs15s_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15s_BFu15i, aBFs15ll_BFs15s_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15s_BFu15ll, aBFs15ll_BFs15s_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFs15s_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFs15s_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFs15s_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFs15s_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFs15s_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFs15s_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFs15s_BFu15s_BFu15s, aBFs15ll_BFs15s_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i, aBFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15i, aBFs15ll_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15i_BFs15i, aBFs15ll_BFu15i_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15i_BFs15ll, aBFs15ll_BFu15i_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15i_BFs15s, aBFs15ll_BFu15i_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15i_BFu15i, aBFs15ll_BFu15i_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15i_BFu15ll, aBFs15ll_BFu15i_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15i_BFu15s, aBFs15ll_BFu15i_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15ll, aBFs15ll_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15ll_BFs15i, aBFs15ll_BFu15i_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15ll_BFs15ll, aBFs15ll_BFu15i_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15ll_BFs15s, aBFs15ll_BFu15i_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15ll_BFu15i, aBFs15ll_BFu15i_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15ll_BFu15ll, aBFs15ll_BFu15i_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15ll_BFu15s, aBFs15ll_BFu15i_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15s, aBFs15ll_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15s_BFs15i, aBFs15ll_BFu15i_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15s_BFs15ll, aBFs15ll_BFu15i_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15s_BFs15s, aBFs15ll_BFu15i_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15s_BFu15i, aBFs15ll_BFu15i_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15s_BFu15ll, aBFs15ll_BFu15i_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFs15s_BFu15s, aBFs15ll_BFu15i_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15i, aBFs15ll_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15i_BFs15i, aBFs15ll_BFu15i_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15i_BFs15ll, aBFs15ll_BFu15i_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15i_BFs15s, aBFs15ll_BFu15i_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15i_BFu15i, aBFs15ll_BFu15i_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15i_BFu15ll, aBFs15ll_BFu15i_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15i_BFu15s, aBFs15ll_BFu15i_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15ll, aBFs15ll_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15ll_BFs15i, aBFs15ll_BFu15i_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15ll_BFs15ll, aBFs15ll_BFu15i_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15ll_BFs15s, aBFs15ll_BFu15i_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15ll_BFu15i, aBFs15ll_BFu15i_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15ll_BFu15ll, aBFs15ll_BFu15i_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15ll_BFu15s, aBFs15ll_BFu15i_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15s, aBFs15ll_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15s_BFs15i, aBFs15ll_BFu15i_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15s_BFs15ll, aBFs15ll_BFu15i_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15s_BFs15s, aBFs15ll_BFu15i_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15s_BFu15i, aBFs15ll_BFu15i_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15s_BFu15ll, aBFs15ll_BFu15i_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15i_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15i_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15i_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15i_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15i_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15i_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15i_BFu15s_BFu15s, aBFs15ll_BFu15i_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll, aBFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15i, aBFs15ll_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15i_BFs15i, aBFs15ll_BFu15ll_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15i_BFs15ll, aBFs15ll_BFu15ll_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15i_BFs15s, aBFs15ll_BFu15ll_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15i_BFu15i, aBFs15ll_BFu15ll_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15i_BFu15ll, aBFs15ll_BFu15ll_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15i_BFu15s, aBFs15ll_BFu15ll_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15ll, aBFs15ll_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15ll_BFs15i, aBFs15ll_BFu15ll_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15ll_BFs15ll, aBFs15ll_BFu15ll_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15ll_BFs15s, aBFs15ll_BFu15ll_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15ll_BFu15i, aBFs15ll_BFu15ll_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15ll_BFu15ll, aBFs15ll_BFu15ll_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15ll_BFu15s, aBFs15ll_BFu15ll_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15s, aBFs15ll_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15s_BFs15i, aBFs15ll_BFu15ll_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15s_BFs15ll, aBFs15ll_BFu15ll_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15s_BFs15s, aBFs15ll_BFu15ll_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15s_BFu15i, aBFs15ll_BFu15ll_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15s_BFu15ll, aBFs15ll_BFu15ll_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFs15s_BFu15s, aBFs15ll_BFu15ll_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15i, aBFs15ll_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15i_BFs15i, aBFs15ll_BFu15ll_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15i_BFs15ll, aBFs15ll_BFu15ll_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15i_BFs15s, aBFs15ll_BFu15ll_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15i_BFu15i, aBFs15ll_BFu15ll_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15i_BFu15ll, aBFs15ll_BFu15ll_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15i_BFu15s, aBFs15ll_BFu15ll_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15ll, aBFs15ll_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15ll_BFs15i, aBFs15ll_BFu15ll_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15ll_BFs15ll, aBFs15ll_BFu15ll_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15ll_BFs15s, aBFs15ll_BFu15ll_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15ll_BFu15i, aBFs15ll_BFu15ll_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15ll_BFu15ll, aBFs15ll_BFu15ll_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15ll_BFu15s, aBFs15ll_BFu15ll_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15s, aBFs15ll_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15s_BFs15i, aBFs15ll_BFu15ll_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15s_BFs15ll, aBFs15ll_BFu15ll_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15s_BFs15s, aBFs15ll_BFu15ll_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15s_BFu15i, aBFs15ll_BFu15ll_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15s_BFu15ll, aBFs15ll_BFu15ll_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15ll_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15ll_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15ll_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15ll_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15ll_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15ll_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15ll_BFu15s_BFu15s, aBFs15ll_BFu15ll_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s, aBFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15i, aBFs15ll_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15i_BFs15i, aBFs15ll_BFu15s_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15i_BFs15ll, aBFs15ll_BFu15s_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15i_BFs15s, aBFs15ll_BFu15s_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15i_BFu15i, aBFs15ll_BFu15s_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15i_BFu15ll, aBFs15ll_BFu15s_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15i_BFu15s, aBFs15ll_BFu15s_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15ll, aBFs15ll_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15ll_BFs15i, aBFs15ll_BFu15s_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15ll_BFs15ll, aBFs15ll_BFu15s_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15ll_BFs15s, aBFs15ll_BFu15s_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15ll_BFu15i, aBFs15ll_BFu15s_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15ll_BFu15ll, aBFs15ll_BFu15s_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15ll_BFu15s, aBFs15ll_BFu15s_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15s, aBFs15ll_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15s_BFs15i, aBFs15ll_BFu15s_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15s_BFs15ll, aBFs15ll_BFu15s_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15s_BFs15s, aBFs15ll_BFu15s_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15s_BFu15i, aBFs15ll_BFu15s_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15s_BFu15ll, aBFs15ll_BFu15s_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFs15s_BFu15s, aBFs15ll_BFu15s_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15i, aBFs15ll_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15i_BFs15i, aBFs15ll_BFu15s_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15i_BFs15ll, aBFs15ll_BFu15s_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15i_BFs15s, aBFs15ll_BFu15s_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15i_BFu15i, aBFs15ll_BFu15s_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15i_BFu15ll, aBFs15ll_BFu15s_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15i_BFu15s, aBFs15ll_BFu15s_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15ll, aBFs15ll_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15ll_BFs15i, aBFs15ll_BFu15s_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15ll_BFs15ll, aBFs15ll_BFu15s_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15ll_BFs15s, aBFs15ll_BFu15s_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15ll_BFu15i, aBFs15ll_BFu15s_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15ll_BFu15ll, aBFs15ll_BFu15s_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15ll_BFu15s, aBFs15ll_BFu15s_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15ll_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15s, aBFs15ll_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15s_BFs15i, aBFs15ll_BFu15s_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15s_BFs15ll, aBFs15ll_BFu15s_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15s_BFs15s, aBFs15ll_BFu15s_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15s_BFu15i, aBFs15ll_BFu15s_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15s_BFu15ll, aBFs15ll_BFu15s_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15ll_BFu15s_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15ll_BFu15s_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15ll_BFu15s_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15ll_BFu15s_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15ll_BFu15s_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15ll_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15ll_BFu15s_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15ll_BFu15s_BFu15s_BFu15s, aBFs15ll_BFu15s_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i, aBFs15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15i, aBFs15s_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15i_BFs15i, aBFs15s_BFs15i_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15i_BFs15ll, aBFs15s_BFs15i_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15i_BFs15s, aBFs15s_BFs15i_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15i_BFu15i, aBFs15s_BFs15i_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15i_BFu15ll, aBFs15s_BFs15i_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15i_BFu15s, aBFs15s_BFs15i_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15ll, aBFs15s_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15ll_BFs15i, aBFs15s_BFs15i_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15ll_BFs15ll, aBFs15s_BFs15i_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15ll_BFs15s, aBFs15s_BFs15i_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15ll_BFu15i, aBFs15s_BFs15i_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15ll_BFu15ll, aBFs15s_BFs15i_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15ll_BFu15s, aBFs15s_BFs15i_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15s, aBFs15s_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15s_BFs15i, aBFs15s_BFs15i_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15s_BFs15ll, aBFs15s_BFs15i_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15s_BFs15s, aBFs15s_BFs15i_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15s_BFu15i, aBFs15s_BFs15i_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15s_BFu15ll, aBFs15s_BFs15i_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFs15s_BFu15s, aBFs15s_BFs15i_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15i, aBFs15s_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15i_BFs15i, aBFs15s_BFs15i_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15i_BFs15ll, aBFs15s_BFs15i_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15i_BFs15s, aBFs15s_BFs15i_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15i_BFu15i, aBFs15s_BFs15i_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15i_BFu15ll, aBFs15s_BFs15i_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15i_BFu15s, aBFs15s_BFs15i_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15ll, aBFs15s_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15ll_BFs15i, aBFs15s_BFs15i_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15ll_BFs15ll, aBFs15s_BFs15i_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15ll_BFs15s, aBFs15s_BFs15i_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15ll_BFu15i, aBFs15s_BFs15i_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15ll_BFu15ll, aBFs15s_BFs15i_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15ll_BFu15s, aBFs15s_BFs15i_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15s, aBFs15s_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15s_BFs15i, aBFs15s_BFs15i_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15s_BFs15ll, aBFs15s_BFs15i_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15s_BFs15s, aBFs15s_BFs15i_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15s_BFu15i, aBFs15s_BFs15i_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15s_BFu15ll, aBFs15s_BFs15i_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15i_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15i_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15i_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15i_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15i_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15i_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15i_BFu15s_BFu15s, aBFs15s_BFs15i_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll, aBFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15i, aBFs15s_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15i_BFs15i, aBFs15s_BFs15ll_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15i_BFs15ll, aBFs15s_BFs15ll_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15i_BFs15s, aBFs15s_BFs15ll_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15i_BFu15i, aBFs15s_BFs15ll_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15i_BFu15ll, aBFs15s_BFs15ll_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15i_BFu15s, aBFs15s_BFs15ll_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15ll, aBFs15s_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15ll_BFs15i, aBFs15s_BFs15ll_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15ll_BFs15ll, aBFs15s_BFs15ll_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15ll_BFs15s, aBFs15s_BFs15ll_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15ll_BFu15i, aBFs15s_BFs15ll_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15ll_BFu15ll, aBFs15s_BFs15ll_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15ll_BFu15s, aBFs15s_BFs15ll_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15s, aBFs15s_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15s_BFs15i, aBFs15s_BFs15ll_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15s_BFs15ll, aBFs15s_BFs15ll_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15s_BFs15s, aBFs15s_BFs15ll_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15s_BFu15i, aBFs15s_BFs15ll_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15s_BFu15ll, aBFs15s_BFs15ll_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFs15s_BFu15s, aBFs15s_BFs15ll_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15i, aBFs15s_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15i_BFs15i, aBFs15s_BFs15ll_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15i_BFs15ll, aBFs15s_BFs15ll_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15i_BFs15s, aBFs15s_BFs15ll_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15i_BFu15i, aBFs15s_BFs15ll_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15i_BFu15ll, aBFs15s_BFs15ll_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15i_BFu15s, aBFs15s_BFs15ll_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15ll, aBFs15s_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15ll_BFs15i, aBFs15s_BFs15ll_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15ll_BFs15ll, aBFs15s_BFs15ll_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15ll_BFs15s, aBFs15s_BFs15ll_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15ll_BFu15i, aBFs15s_BFs15ll_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15ll_BFu15ll, aBFs15s_BFs15ll_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15ll_BFu15s, aBFs15s_BFs15ll_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15s, aBFs15s_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15s_BFs15i, aBFs15s_BFs15ll_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15s_BFs15ll, aBFs15s_BFs15ll_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15s_BFs15s, aBFs15s_BFs15ll_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15s_BFu15i, aBFs15s_BFs15ll_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15s_BFu15ll, aBFs15s_BFs15ll_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15ll_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15ll_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15ll_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15ll_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15ll_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15ll_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15ll_BFu15s_BFu15s, aBFs15s_BFs15ll_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s, aBFs15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15i, aBFs15s_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15i_BFs15i, aBFs15s_BFs15s_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15i_BFs15ll, aBFs15s_BFs15s_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15i_BFs15s, aBFs15s_BFs15s_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15i_BFu15i, aBFs15s_BFs15s_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15i_BFu15ll, aBFs15s_BFs15s_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15i_BFu15s, aBFs15s_BFs15s_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15ll, aBFs15s_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15ll_BFs15i, aBFs15s_BFs15s_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15ll_BFs15ll, aBFs15s_BFs15s_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15ll_BFs15s, aBFs15s_BFs15s_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15ll_BFu15i, aBFs15s_BFs15s_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15ll_BFu15ll, aBFs15s_BFs15s_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15ll_BFu15s, aBFs15s_BFs15s_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15s, aBFs15s_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15s_BFs15i, aBFs15s_BFs15s_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15s_BFs15ll, aBFs15s_BFs15s_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15s_BFs15s, aBFs15s_BFs15s_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15s_BFu15i, aBFs15s_BFs15s_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15s_BFu15ll, aBFs15s_BFs15s_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFs15s_BFu15s, aBFs15s_BFs15s_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15i, aBFs15s_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15i_BFs15i, aBFs15s_BFs15s_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15i_BFs15ll, aBFs15s_BFs15s_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15i_BFs15s, aBFs15s_BFs15s_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15i_BFu15i, aBFs15s_BFs15s_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15i_BFu15ll, aBFs15s_BFs15s_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15i_BFu15s, aBFs15s_BFs15s_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15ll, aBFs15s_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15ll_BFs15i, aBFs15s_BFs15s_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15ll_BFs15ll, aBFs15s_BFs15s_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15ll_BFs15s, aBFs15s_BFs15s_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15ll_BFu15i, aBFs15s_BFs15s_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15ll_BFu15ll, aBFs15s_BFs15s_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15ll_BFu15s, aBFs15s_BFs15s_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15s, aBFs15s_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15s_BFs15i, aBFs15s_BFs15s_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15s_BFs15ll, aBFs15s_BFs15s_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15s_BFs15s, aBFs15s_BFs15s_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15s_BFu15i, aBFs15s_BFs15s_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15s_BFu15ll, aBFs15s_BFs15s_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFs15s_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFs15s_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFs15s_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFs15s_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFs15s_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_sll(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFs15s_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFs15s_BFu15s_BFu15s, aBFs15s_BFs15s_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i, aBFs15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15i, aBFs15s_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15i_BFs15i, aBFs15s_BFu15i_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15i_BFs15ll, aBFs15s_BFu15i_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15i_BFs15s, aBFs15s_BFu15i_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15i_BFu15i, aBFs15s_BFu15i_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15i_BFu15ll, aBFs15s_BFu15i_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15i_BFu15s, aBFs15s_BFu15i_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15ll, aBFs15s_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15ll_BFs15i, aBFs15s_BFu15i_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15ll_BFs15ll, aBFs15s_BFu15i_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15ll_BFs15s, aBFs15s_BFu15i_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15ll_BFu15i, aBFs15s_BFu15i_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15ll_BFu15ll, aBFs15s_BFu15i_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15ll_BFu15s, aBFs15s_BFu15i_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15s, aBFs15s_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15s_BFs15i, aBFs15s_BFu15i_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15s_BFs15ll, aBFs15s_BFu15i_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15s_BFs15s, aBFs15s_BFu15i_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15s_BFu15i, aBFs15s_BFu15i_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15s_BFu15ll, aBFs15s_BFu15i_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFs15s_BFu15s, aBFs15s_BFu15i_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15i, aBFs15s_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15i_BFs15i, aBFs15s_BFu15i_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15i_BFs15ll, aBFs15s_BFu15i_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15i_BFs15s, aBFs15s_BFu15i_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15i_BFu15i, aBFs15s_BFu15i_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15i_BFu15ll, aBFs15s_BFu15i_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15i_BFu15s, aBFs15s_BFu15i_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15ll, aBFs15s_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15ll_BFs15i, aBFs15s_BFu15i_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15ll_BFs15ll, aBFs15s_BFu15i_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15ll_BFs15s, aBFs15s_BFu15i_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15ll_BFu15i, aBFs15s_BFu15i_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15ll_BFu15ll, aBFs15s_BFu15i_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15ll_BFu15s, aBFs15s_BFu15i_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15s, aBFs15s_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15s_BFs15i, aBFs15s_BFu15i_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15s_BFs15ll, aBFs15s_BFu15i_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15s_BFs15s, aBFs15s_BFu15i_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15s_BFu15i, aBFs15s_BFu15i_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15s_BFu15ll, aBFs15s_BFu15i_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15i_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15i_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15i_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15i_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15i_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15i_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15i_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15i_BFu15s_BFu15s, aBFs15s_BFu15i_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll, aBFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15i, aBFs15s_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15i_BFs15i, aBFs15s_BFu15ll_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15i_BFs15ll, aBFs15s_BFu15ll_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15i_BFs15s, aBFs15s_BFu15ll_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15i_BFu15i, aBFs15s_BFu15ll_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15i_BFu15ll, aBFs15s_BFu15ll_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15i_BFu15s, aBFs15s_BFu15ll_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15ll, aBFs15s_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15ll_BFs15i, aBFs15s_BFu15ll_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15ll_BFs15ll, aBFs15s_BFu15ll_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15ll_BFs15s, aBFs15s_BFu15ll_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15ll_BFu15i, aBFs15s_BFu15ll_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15ll_BFu15ll, aBFs15s_BFu15ll_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15ll_BFu15s, aBFs15s_BFu15ll_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15s, aBFs15s_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15s_BFs15i, aBFs15s_BFu15ll_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15s_BFs15ll, aBFs15s_BFu15ll_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15s_BFs15s, aBFs15s_BFu15ll_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15s_BFu15i, aBFs15s_BFu15ll_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15s_BFu15ll, aBFs15s_BFu15ll_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFs15s_BFu15s, aBFs15s_BFu15ll_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15i, aBFs15s_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15i_BFs15i, aBFs15s_BFu15ll_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15i_BFs15ll, aBFs15s_BFu15ll_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15i_BFs15s, aBFs15s_BFu15ll_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15i_BFu15i, aBFs15s_BFu15ll_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15i_BFu15ll, aBFs15s_BFu15ll_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15i_BFu15s, aBFs15s_BFu15ll_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15ll, aBFs15s_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15ll_BFs15i, aBFs15s_BFu15ll_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15ll_BFs15ll, aBFs15s_BFu15ll_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15ll_BFs15s, aBFs15s_BFu15ll_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15ll_BFu15i, aBFs15s_BFu15ll_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15ll_BFu15ll, aBFs15s_BFu15ll_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15ll_BFu15s, aBFs15s_BFu15ll_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15s, aBFs15s_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15s_BFs15i, aBFs15s_BFu15ll_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15s_BFs15ll, aBFs15s_BFu15ll_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15s_BFs15s, aBFs15s_BFu15ll_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15s_BFu15i, aBFs15s_BFu15ll_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15s_BFu15ll, aBFs15s_BFu15ll_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15ll_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15ll_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15ll_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15ll_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15ll_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15ll_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15ll_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15ll_BFu15s_BFu15s, aBFs15s_BFu15ll_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s, aBFs15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15i, aBFs15s_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15i_BFs15i, aBFs15s_BFu15s_BFs15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15i_BFs15ll, aBFs15s_BFu15s_BFs15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15i_BFs15s, aBFs15s_BFu15s_BFs15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15i_BFu15i, aBFs15s_BFu15s_BFs15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15i_BFu15ll, aBFs15s_BFu15s_BFs15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15i_BFu15s, aBFs15s_BFu15s_BFs15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15ll, aBFs15s_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15ll_BFs15i, aBFs15s_BFu15s_BFs15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15ll_BFs15ll, aBFs15s_BFu15s_BFs15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15ll_BFs15s, aBFs15s_BFu15s_BFs15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15ll_BFu15i, aBFs15s_BFu15s_BFs15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15ll_BFu15ll, aBFs15s_BFu15s_BFs15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15ll_BFu15s, aBFs15s_BFu15s_BFs15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15s, aBFs15s_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15s_BFs15i, aBFs15s_BFu15s_BFs15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15s_BFs15ll, aBFs15s_BFu15s_BFs15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15s_BFs15s, aBFs15s_BFu15s_BFs15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15s_BFu15i, aBFs15s_BFu15s_BFs15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15s_BFu15ll, aBFs15s_BFu15s_BFs15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFs15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFs15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFs15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFs15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFs15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFs15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFs15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFs15s_BFu15s, aBFs15s_BFu15s_BFs15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15i, aBFs15s_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15i_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15i_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15i_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15i_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15i_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15i_BFs15i, aBFs15s_BFu15s_BFu15i_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15i_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15i_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15i_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15i_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15i_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15i_BFs15ll, aBFs15s_BFu15s_BFu15i_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15i_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15i_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15i_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15i_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15i_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15i_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15i_BFs15s, aBFs15s_BFu15s_BFu15i_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15i_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15i_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15i_BFu15i, aBFs15s_BFu15s_BFu15i_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15i_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15i_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15i_BFu15ll, aBFs15s_BFu15s_BFu15i_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15i_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15i_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15i_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15i_BFu15s, aBFs15s_BFu15s_BFu15i_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15ll, aBFs15s_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15ll_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15ll_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15ll_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15ll_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15ll_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15ll_BFs15i, aBFs15s_BFu15s_BFu15ll_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15ll_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15ll_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15ll_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15ll_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15ll_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15ll_BFs15ll, aBFs15s_BFu15s_BFu15ll_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15ll_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15ll_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15ll_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15ll_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15ll_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15ll_BFs15s, aBFs15s_BFu15s_BFu15ll_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15ll_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15ll_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15ll_BFu15i, aBFs15s_BFu15s_BFu15ll_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15ll_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15ll_BFu15ll, aBFs15s_BFu15s_BFu15ll_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15ll_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15ll_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15ll_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15ll_BFu15s, aBFs15s_BFu15s_BFu15ll_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs15s_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15s, aBFs15s_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15s_BFs15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15s_BFs15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15s_BFs15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15s_BFs15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15s_BFs15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15s_BFs15i, aBFs15s_BFu15s_BFu15s_BFs15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15s_BFs15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15s_BFs15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15s_BFs15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15s_BFs15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15s_BFs15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15s_BFs15ll, aBFs15s_BFu15s_BFu15s_BFs15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15s_BFs15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15s_BFs15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15s_BFs15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15s_BFs15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15s_BFs15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15s_BFs15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFs15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15s_BFs15s, aBFs15s_BFu15s_BFu15s_BFs15s)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15s_BFu15i()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15s_BFu15i");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15s_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15i");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15s_BFu15i, aBFs15s_BFu15s_BFu15s_BFu15i)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15s_BFu15ll()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15s_BFu15ll");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15ll");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15s_BFu15ll, aBFs15s_BFu15s_BFu15s_BFu15ll)
//============================================================================



static void Test_aBFs15s_BFu15s_BFu15s_BFu15s()
{
  {
    init_simple_test("aBFs15s_BFu15s_BFu15s_BFu15s");
    static STRUCT_IF_C aBFs15s_BFu15s_BFu15s_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs15s_BFu15s_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs15s_BFu15s_BFu15s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_sll(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 6, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, 1, "aBFs15s_BFu15s_BFu15s_BFu15s");
    set_bf_and_test(lv, v4, 5, 5, 15, hide_ull(1LL<<14), "aBFs15s_BFu15s_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs15s_BFu15s_BFu15s_BFu15s, aBFs15s_BFu15s_BFu15s_BFu15s)
//============================================================================



static void Test_aBFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i, aBFs16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16i, aBFs16i_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16i_BFs16i, aBFs16i_BFs16i_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16i_BFs16ll, aBFs16i_BFs16i_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16i_BFs16s, aBFs16i_BFs16i_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16i_BFu16i, aBFs16i_BFs16i_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16i_BFu16ll, aBFs16i_BFs16i_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16i_BFu16s, aBFs16i_BFs16i_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16ll, aBFs16i_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16ll_BFs16i, aBFs16i_BFs16i_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16ll_BFs16ll, aBFs16i_BFs16i_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16ll_BFs16s, aBFs16i_BFs16i_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16ll_BFu16i, aBFs16i_BFs16i_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16ll_BFu16ll, aBFs16i_BFs16i_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16ll_BFu16s, aBFs16i_BFs16i_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16s, aBFs16i_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16s_BFs16i, aBFs16i_BFs16i_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16s_BFs16ll, aBFs16i_BFs16i_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16s_BFs16s, aBFs16i_BFs16i_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16s_BFu16i, aBFs16i_BFs16i_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16s_BFu16ll, aBFs16i_BFs16i_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFs16s_BFu16s, aBFs16i_BFs16i_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16i, aBFs16i_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16i_BFs16i, aBFs16i_BFs16i_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16i_BFs16ll, aBFs16i_BFs16i_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16i_BFs16s, aBFs16i_BFs16i_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16i_BFu16i, aBFs16i_BFs16i_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16i_BFu16ll, aBFs16i_BFs16i_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16i_BFu16s, aBFs16i_BFs16i_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16ll, aBFs16i_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16ll_BFs16i, aBFs16i_BFs16i_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16ll_BFs16ll, aBFs16i_BFs16i_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16ll_BFs16s, aBFs16i_BFs16i_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16ll_BFu16i, aBFs16i_BFs16i_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16ll_BFu16ll, aBFs16i_BFs16i_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16ll_BFu16s, aBFs16i_BFs16i_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16s, aBFs16i_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16s_BFs16i, aBFs16i_BFs16i_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16s_BFs16ll, aBFs16i_BFs16i_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16s_BFs16s, aBFs16i_BFs16i_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16s_BFu16i, aBFs16i_BFs16i_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16s_BFu16ll, aBFs16i_BFs16i_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16i_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16i_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16i_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16i_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16i_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16i_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16i_BFu16s_BFu16s, aBFs16i_BFs16i_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll, aBFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16i, aBFs16i_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16i_BFs16i, aBFs16i_BFs16ll_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16i_BFs16ll, aBFs16i_BFs16ll_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16i_BFs16s, aBFs16i_BFs16ll_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16i_BFu16i, aBFs16i_BFs16ll_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16i_BFu16ll, aBFs16i_BFs16ll_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16i_BFu16s, aBFs16i_BFs16ll_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16ll, aBFs16i_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16ll_BFs16i, aBFs16i_BFs16ll_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16ll_BFs16ll, aBFs16i_BFs16ll_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16ll_BFs16s, aBFs16i_BFs16ll_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16ll_BFu16i, aBFs16i_BFs16ll_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16ll_BFu16ll, aBFs16i_BFs16ll_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16ll_BFu16s, aBFs16i_BFs16ll_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16s, aBFs16i_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16s_BFs16i, aBFs16i_BFs16ll_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16s_BFs16ll, aBFs16i_BFs16ll_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16s_BFs16s, aBFs16i_BFs16ll_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16s_BFu16i, aBFs16i_BFs16ll_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16s_BFu16ll, aBFs16i_BFs16ll_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFs16s_BFu16s, aBFs16i_BFs16ll_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16i, aBFs16i_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16i_BFs16i, aBFs16i_BFs16ll_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16i_BFs16ll, aBFs16i_BFs16ll_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16i_BFs16s, aBFs16i_BFs16ll_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16i_BFu16i, aBFs16i_BFs16ll_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16i_BFu16ll, aBFs16i_BFs16ll_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16i_BFu16s, aBFs16i_BFs16ll_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16ll, aBFs16i_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16ll_BFs16i, aBFs16i_BFs16ll_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16ll_BFs16ll, aBFs16i_BFs16ll_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16ll_BFs16s, aBFs16i_BFs16ll_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16ll_BFu16i, aBFs16i_BFs16ll_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16ll_BFu16ll, aBFs16i_BFs16ll_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16ll_BFu16s, aBFs16i_BFs16ll_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16s, aBFs16i_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16s_BFs16i, aBFs16i_BFs16ll_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16s_BFs16ll, aBFs16i_BFs16ll_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16s_BFs16s, aBFs16i_BFs16ll_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16s_BFu16i, aBFs16i_BFs16ll_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16s_BFu16ll, aBFs16i_BFs16ll_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16ll_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16ll_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16ll_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16ll_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16ll_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16ll_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16ll_BFu16s_BFu16s, aBFs16i_BFs16ll_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s, aBFs16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16i, aBFs16i_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16i_BFs16i, aBFs16i_BFs16s_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16i_BFs16ll, aBFs16i_BFs16s_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16i_BFs16s, aBFs16i_BFs16s_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16i_BFu16i, aBFs16i_BFs16s_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16i_BFu16ll, aBFs16i_BFs16s_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16i_BFu16s, aBFs16i_BFs16s_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16ll, aBFs16i_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16ll_BFs16i, aBFs16i_BFs16s_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16ll_BFs16ll, aBFs16i_BFs16s_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16ll_BFs16s, aBFs16i_BFs16s_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16ll_BFu16i, aBFs16i_BFs16s_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16ll_BFu16ll, aBFs16i_BFs16s_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16ll_BFu16s, aBFs16i_BFs16s_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16s, aBFs16i_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16s_BFs16i, aBFs16i_BFs16s_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16s_BFs16ll, aBFs16i_BFs16s_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16s_BFs16s, aBFs16i_BFs16s_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16s_BFu16i, aBFs16i_BFs16s_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16s_BFu16ll, aBFs16i_BFs16s_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFs16s_BFu16s, aBFs16i_BFs16s_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16i, aBFs16i_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16i_BFs16i, aBFs16i_BFs16s_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16i_BFs16ll, aBFs16i_BFs16s_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16i_BFs16s, aBFs16i_BFs16s_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16i_BFu16i, aBFs16i_BFs16s_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16i_BFu16ll, aBFs16i_BFs16s_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16i_BFu16s, aBFs16i_BFs16s_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16ll, aBFs16i_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16ll_BFs16i, aBFs16i_BFs16s_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16ll_BFs16ll, aBFs16i_BFs16s_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16ll_BFs16s, aBFs16i_BFs16s_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16ll_BFu16i, aBFs16i_BFs16s_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16ll_BFu16ll, aBFs16i_BFs16s_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16ll_BFu16s, aBFs16i_BFs16s_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16s, aBFs16i_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16s_BFs16i, aBFs16i_BFs16s_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16s_BFs16ll, aBFs16i_BFs16s_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16s_BFs16s, aBFs16i_BFs16s_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16s_BFu16i, aBFs16i_BFs16s_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16s_BFu16ll, aBFs16i_BFs16s_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFs16s_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFs16s_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFs16s_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFs16s_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFs16s_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFs16s_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFs16s_BFu16s_BFu16s, aBFs16i_BFs16s_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i, aBFs16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16i, aBFs16i_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16i_BFs16i, aBFs16i_BFu16i_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16i_BFs16ll, aBFs16i_BFu16i_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16i_BFs16s, aBFs16i_BFu16i_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16i_BFu16i, aBFs16i_BFu16i_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16i_BFu16ll, aBFs16i_BFu16i_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16i_BFu16s, aBFs16i_BFu16i_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16ll, aBFs16i_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16ll_BFs16i, aBFs16i_BFu16i_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16ll_BFs16ll, aBFs16i_BFu16i_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16ll_BFs16s, aBFs16i_BFu16i_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16ll_BFu16i, aBFs16i_BFu16i_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16ll_BFu16ll, aBFs16i_BFu16i_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16ll_BFu16s, aBFs16i_BFu16i_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16s, aBFs16i_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16s_BFs16i, aBFs16i_BFu16i_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16s_BFs16ll, aBFs16i_BFu16i_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16s_BFs16s, aBFs16i_BFu16i_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16s_BFu16i, aBFs16i_BFu16i_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16s_BFu16ll, aBFs16i_BFu16i_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFs16s_BFu16s, aBFs16i_BFu16i_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16i, aBFs16i_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16i_BFs16i, aBFs16i_BFu16i_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16i_BFs16ll, aBFs16i_BFu16i_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16i_BFs16s, aBFs16i_BFu16i_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16i_BFu16i, aBFs16i_BFu16i_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16i_BFu16ll, aBFs16i_BFu16i_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16i_BFu16s, aBFs16i_BFu16i_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16ll, aBFs16i_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16ll_BFs16i, aBFs16i_BFu16i_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16ll_BFs16ll, aBFs16i_BFu16i_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16ll_BFs16s, aBFs16i_BFu16i_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16ll_BFu16i, aBFs16i_BFu16i_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16ll_BFu16ll, aBFs16i_BFu16i_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16ll_BFu16s, aBFs16i_BFu16i_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16s, aBFs16i_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16s_BFs16i, aBFs16i_BFu16i_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16s_BFs16ll, aBFs16i_BFu16i_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16s_BFs16s, aBFs16i_BFu16i_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16s_BFu16i, aBFs16i_BFu16i_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16s_BFu16ll, aBFs16i_BFu16i_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16i_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16i_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16i_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16i_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16i_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16i_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16i_BFu16s_BFu16s, aBFs16i_BFu16i_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll, aBFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16i, aBFs16i_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16i_BFs16i, aBFs16i_BFu16ll_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16i_BFs16ll, aBFs16i_BFu16ll_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16i_BFs16s, aBFs16i_BFu16ll_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16i_BFu16i, aBFs16i_BFu16ll_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16i_BFu16ll, aBFs16i_BFu16ll_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16i_BFu16s, aBFs16i_BFu16ll_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16ll, aBFs16i_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16ll_BFs16i, aBFs16i_BFu16ll_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16ll_BFs16ll, aBFs16i_BFu16ll_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16ll_BFs16s, aBFs16i_BFu16ll_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16ll_BFu16i, aBFs16i_BFu16ll_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16ll_BFu16ll, aBFs16i_BFu16ll_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16ll_BFu16s, aBFs16i_BFu16ll_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16s, aBFs16i_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16s_BFs16i, aBFs16i_BFu16ll_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16s_BFs16ll, aBFs16i_BFu16ll_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16s_BFs16s, aBFs16i_BFu16ll_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16s_BFu16i, aBFs16i_BFu16ll_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16s_BFu16ll, aBFs16i_BFu16ll_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFs16s_BFu16s, aBFs16i_BFu16ll_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16i, aBFs16i_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16i_BFs16i, aBFs16i_BFu16ll_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16i_BFs16ll, aBFs16i_BFu16ll_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16i_BFs16s, aBFs16i_BFu16ll_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16i_BFu16i, aBFs16i_BFu16ll_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16i_BFu16ll, aBFs16i_BFu16ll_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16i_BFu16s, aBFs16i_BFu16ll_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16ll, aBFs16i_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16ll_BFs16i, aBFs16i_BFu16ll_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16ll_BFs16ll, aBFs16i_BFu16ll_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16ll_BFs16s, aBFs16i_BFu16ll_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16ll_BFu16i, aBFs16i_BFu16ll_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16ll_BFu16ll, aBFs16i_BFu16ll_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16ll_BFu16s, aBFs16i_BFu16ll_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16s, aBFs16i_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16s_BFs16i, aBFs16i_BFu16ll_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16s_BFs16ll, aBFs16i_BFu16ll_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16s_BFs16s, aBFs16i_BFu16ll_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16s_BFu16i, aBFs16i_BFu16ll_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16s_BFu16ll, aBFs16i_BFu16ll_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16ll_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16ll_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16ll_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16ll_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16ll_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16ll_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16ll_BFu16s_BFu16s, aBFs16i_BFu16ll_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s, aBFs16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16i, aBFs16i_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16i_BFs16i, aBFs16i_BFu16s_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16i_BFs16ll, aBFs16i_BFu16s_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16i_BFs16s, aBFs16i_BFu16s_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16i_BFu16i, aBFs16i_BFu16s_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16i_BFu16ll, aBFs16i_BFu16s_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16i_BFu16s, aBFs16i_BFu16s_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16ll, aBFs16i_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16ll_BFs16i, aBFs16i_BFu16s_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16ll_BFs16ll, aBFs16i_BFu16s_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16ll_BFs16s, aBFs16i_BFu16s_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16ll_BFu16i, aBFs16i_BFu16s_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16ll_BFu16ll, aBFs16i_BFu16s_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16ll_BFu16s, aBFs16i_BFu16s_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16s, aBFs16i_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16s_BFs16i, aBFs16i_BFu16s_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16s_BFs16ll, aBFs16i_BFu16s_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16s_BFs16s, aBFs16i_BFu16s_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16s_BFu16i, aBFs16i_BFu16s_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16s_BFu16ll, aBFs16i_BFu16s_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFs16s_BFu16s, aBFs16i_BFu16s_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16i, aBFs16i_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16i_BFs16i, aBFs16i_BFu16s_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16i_BFs16ll, aBFs16i_BFu16s_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16i_BFs16s, aBFs16i_BFu16s_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16i_BFu16i, aBFs16i_BFu16s_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16i_BFu16ll, aBFs16i_BFu16s_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16i_BFu16s, aBFs16i_BFu16s_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16ll, aBFs16i_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16ll_BFs16i, aBFs16i_BFu16s_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16ll_BFs16ll, aBFs16i_BFu16s_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16ll_BFs16s, aBFs16i_BFu16s_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16ll_BFu16i, aBFs16i_BFu16s_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16ll_BFu16ll, aBFs16i_BFu16s_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16ll_BFu16s, aBFs16i_BFu16s_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16i_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16s, aBFs16i_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16s_BFs16i, aBFs16i_BFu16s_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16s_BFs16ll, aBFs16i_BFu16s_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16s_BFs16s, aBFs16i_BFu16s_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16s_BFu16i, aBFs16i_BFu16s_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16s_BFu16ll, aBFs16i_BFu16s_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16i_BFu16s_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16i_BFu16s_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16i_BFu16s_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16i_BFu16s_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16i_BFu16s_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16i_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16i_BFu16s_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16i_BFu16s_BFu16s_BFu16s, aBFs16i_BFu16s_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i, aBFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16i, aBFs16ll_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16i_BFs16i, aBFs16ll_BFs16i_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16i_BFs16ll, aBFs16ll_BFs16i_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16i_BFs16s, aBFs16ll_BFs16i_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16i_BFu16i, aBFs16ll_BFs16i_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16i_BFu16ll, aBFs16ll_BFs16i_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16i_BFu16s, aBFs16ll_BFs16i_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16ll, aBFs16ll_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16ll_BFs16i, aBFs16ll_BFs16i_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16ll_BFs16ll, aBFs16ll_BFs16i_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16ll_BFs16s, aBFs16ll_BFs16i_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16ll_BFu16i, aBFs16ll_BFs16i_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16ll_BFu16ll, aBFs16ll_BFs16i_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16ll_BFu16s, aBFs16ll_BFs16i_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16s, aBFs16ll_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16s_BFs16i, aBFs16ll_BFs16i_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16s_BFs16ll, aBFs16ll_BFs16i_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16s_BFs16s, aBFs16ll_BFs16i_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16s_BFu16i, aBFs16ll_BFs16i_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16s_BFu16ll, aBFs16ll_BFs16i_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFs16s_BFu16s, aBFs16ll_BFs16i_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16i, aBFs16ll_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16i_BFs16i, aBFs16ll_BFs16i_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16i_BFs16ll, aBFs16ll_BFs16i_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16i_BFs16s, aBFs16ll_BFs16i_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16i_BFu16i, aBFs16ll_BFs16i_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16i_BFu16ll, aBFs16ll_BFs16i_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16i_BFu16s, aBFs16ll_BFs16i_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16ll, aBFs16ll_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16ll_BFs16i, aBFs16ll_BFs16i_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16ll_BFs16ll, aBFs16ll_BFs16i_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16ll_BFs16s, aBFs16ll_BFs16i_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16ll_BFu16i, aBFs16ll_BFs16i_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16ll_BFu16ll, aBFs16ll_BFs16i_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16ll_BFu16s, aBFs16ll_BFs16i_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16s, aBFs16ll_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16s_BFs16i, aBFs16ll_BFs16i_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16s_BFs16ll, aBFs16ll_BFs16i_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16s_BFs16s, aBFs16ll_BFs16i_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16s_BFu16i, aBFs16ll_BFs16i_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16s_BFu16ll, aBFs16ll_BFs16i_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16i_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16i_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16i_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16i_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16i_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16i_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16i_BFu16s_BFu16s, aBFs16ll_BFs16i_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll, aBFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16i, aBFs16ll_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16i_BFs16i, aBFs16ll_BFs16ll_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16i_BFs16ll, aBFs16ll_BFs16ll_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16i_BFs16s, aBFs16ll_BFs16ll_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16i_BFu16i, aBFs16ll_BFs16ll_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16i_BFu16ll, aBFs16ll_BFs16ll_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16i_BFu16s, aBFs16ll_BFs16ll_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16ll, aBFs16ll_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16ll_BFs16i, aBFs16ll_BFs16ll_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16ll_BFs16ll, aBFs16ll_BFs16ll_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16ll_BFs16s, aBFs16ll_BFs16ll_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16ll_BFu16i, aBFs16ll_BFs16ll_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16ll_BFu16ll, aBFs16ll_BFs16ll_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16ll_BFu16s, aBFs16ll_BFs16ll_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16s, aBFs16ll_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16s_BFs16i, aBFs16ll_BFs16ll_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16s_BFs16ll, aBFs16ll_BFs16ll_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16s_BFs16s, aBFs16ll_BFs16ll_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16s_BFu16i, aBFs16ll_BFs16ll_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16s_BFu16ll, aBFs16ll_BFs16ll_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFs16s_BFu16s, aBFs16ll_BFs16ll_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16i, aBFs16ll_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16i_BFs16i, aBFs16ll_BFs16ll_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16i_BFs16ll, aBFs16ll_BFs16ll_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16i_BFs16s, aBFs16ll_BFs16ll_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16i_BFu16i, aBFs16ll_BFs16ll_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16i_BFu16ll, aBFs16ll_BFs16ll_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16i_BFu16s, aBFs16ll_BFs16ll_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16ll, aBFs16ll_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16ll_BFs16i, aBFs16ll_BFs16ll_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16ll_BFs16ll, aBFs16ll_BFs16ll_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16ll_BFs16s, aBFs16ll_BFs16ll_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16ll_BFu16i, aBFs16ll_BFs16ll_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16ll_BFu16ll, aBFs16ll_BFs16ll_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16ll_BFu16s, aBFs16ll_BFs16ll_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16s, aBFs16ll_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16s_BFs16i, aBFs16ll_BFs16ll_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16s_BFs16ll, aBFs16ll_BFs16ll_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16s_BFs16s, aBFs16ll_BFs16ll_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16s_BFu16i, aBFs16ll_BFs16ll_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16s_BFu16ll, aBFs16ll_BFs16ll_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16ll_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16ll_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16ll_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16ll_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16ll_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16ll_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16ll_BFu16s_BFu16s, aBFs16ll_BFs16ll_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s, aBFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16i, aBFs16ll_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16i_BFs16i, aBFs16ll_BFs16s_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16i_BFs16ll, aBFs16ll_BFs16s_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16i_BFs16s, aBFs16ll_BFs16s_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16i_BFu16i, aBFs16ll_BFs16s_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16i_BFu16ll, aBFs16ll_BFs16s_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16i_BFu16s, aBFs16ll_BFs16s_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16ll, aBFs16ll_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16ll_BFs16i, aBFs16ll_BFs16s_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16ll_BFs16ll, aBFs16ll_BFs16s_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16ll_BFs16s, aBFs16ll_BFs16s_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16ll_BFu16i, aBFs16ll_BFs16s_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16ll_BFu16ll, aBFs16ll_BFs16s_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16ll_BFu16s, aBFs16ll_BFs16s_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16s, aBFs16ll_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16s_BFs16i, aBFs16ll_BFs16s_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16s_BFs16ll, aBFs16ll_BFs16s_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16s_BFs16s, aBFs16ll_BFs16s_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16s_BFu16i, aBFs16ll_BFs16s_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16s_BFu16ll, aBFs16ll_BFs16s_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFs16s_BFu16s, aBFs16ll_BFs16s_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16i, aBFs16ll_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16i_BFs16i, aBFs16ll_BFs16s_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16i_BFs16ll, aBFs16ll_BFs16s_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16i_BFs16s, aBFs16ll_BFs16s_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16i_BFu16i, aBFs16ll_BFs16s_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16i_BFu16ll, aBFs16ll_BFs16s_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16i_BFu16s, aBFs16ll_BFs16s_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16ll, aBFs16ll_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16ll_BFs16i, aBFs16ll_BFs16s_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16ll_BFs16ll, aBFs16ll_BFs16s_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16ll_BFs16s, aBFs16ll_BFs16s_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16ll_BFu16i, aBFs16ll_BFs16s_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16ll_BFu16ll, aBFs16ll_BFs16s_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16ll_BFu16s, aBFs16ll_BFs16s_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16s, aBFs16ll_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16s_BFs16i, aBFs16ll_BFs16s_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16s_BFs16ll, aBFs16ll_BFs16s_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16s_BFs16s, aBFs16ll_BFs16s_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16s_BFu16i, aBFs16ll_BFs16s_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16s_BFu16ll, aBFs16ll_BFs16s_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFs16s_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFs16s_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFs16s_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFs16s_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFs16s_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFs16s_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFs16s_BFu16s_BFu16s, aBFs16ll_BFs16s_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i, aBFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16i, aBFs16ll_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16i_BFs16i, aBFs16ll_BFu16i_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16i_BFs16ll, aBFs16ll_BFu16i_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16i_BFs16s, aBFs16ll_BFu16i_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16i_BFu16i, aBFs16ll_BFu16i_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16i_BFu16ll, aBFs16ll_BFu16i_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16i_BFu16s, aBFs16ll_BFu16i_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16ll, aBFs16ll_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16ll_BFs16i, aBFs16ll_BFu16i_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16ll_BFs16ll, aBFs16ll_BFu16i_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16ll_BFs16s, aBFs16ll_BFu16i_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16ll_BFu16i, aBFs16ll_BFu16i_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16ll_BFu16ll, aBFs16ll_BFu16i_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16ll_BFu16s, aBFs16ll_BFu16i_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16s, aBFs16ll_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16s_BFs16i, aBFs16ll_BFu16i_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16s_BFs16ll, aBFs16ll_BFu16i_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16s_BFs16s, aBFs16ll_BFu16i_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16s_BFu16i, aBFs16ll_BFu16i_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16s_BFu16ll, aBFs16ll_BFu16i_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFs16s_BFu16s, aBFs16ll_BFu16i_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16i, aBFs16ll_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16i_BFs16i, aBFs16ll_BFu16i_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16i_BFs16ll, aBFs16ll_BFu16i_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16i_BFs16s, aBFs16ll_BFu16i_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16i_BFu16i, aBFs16ll_BFu16i_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16i_BFu16ll, aBFs16ll_BFu16i_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16i_BFu16s, aBFs16ll_BFu16i_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16ll, aBFs16ll_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16ll_BFs16i, aBFs16ll_BFu16i_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16ll_BFs16ll, aBFs16ll_BFu16i_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16ll_BFs16s, aBFs16ll_BFu16i_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16ll_BFu16i, aBFs16ll_BFu16i_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16ll_BFu16ll, aBFs16ll_BFu16i_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16ll_BFu16s, aBFs16ll_BFu16i_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16s, aBFs16ll_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16s_BFs16i, aBFs16ll_BFu16i_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16s_BFs16ll, aBFs16ll_BFu16i_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16s_BFs16s, aBFs16ll_BFu16i_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16s_BFu16i, aBFs16ll_BFu16i_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16s_BFu16ll, aBFs16ll_BFu16i_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16i_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16i_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16i_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16i_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16i_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16i_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16i_BFu16s_BFu16s, aBFs16ll_BFu16i_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll, aBFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16i, aBFs16ll_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16i_BFs16i, aBFs16ll_BFu16ll_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16i_BFs16ll, aBFs16ll_BFu16ll_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16i_BFs16s, aBFs16ll_BFu16ll_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16i_BFu16i, aBFs16ll_BFu16ll_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16i_BFu16ll, aBFs16ll_BFu16ll_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16i_BFu16s, aBFs16ll_BFu16ll_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16ll, aBFs16ll_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16ll_BFs16i, aBFs16ll_BFu16ll_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16ll_BFs16ll, aBFs16ll_BFu16ll_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16ll_BFs16s, aBFs16ll_BFu16ll_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16ll_BFu16i, aBFs16ll_BFu16ll_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16ll_BFu16ll, aBFs16ll_BFu16ll_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16ll_BFu16s, aBFs16ll_BFu16ll_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16s, aBFs16ll_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16s_BFs16i, aBFs16ll_BFu16ll_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16s_BFs16ll, aBFs16ll_BFu16ll_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16s_BFs16s, aBFs16ll_BFu16ll_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16s_BFu16i, aBFs16ll_BFu16ll_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16s_BFu16ll, aBFs16ll_BFu16ll_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFs16s_BFu16s, aBFs16ll_BFu16ll_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16i, aBFs16ll_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16i_BFs16i, aBFs16ll_BFu16ll_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16i_BFs16ll, aBFs16ll_BFu16ll_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16i_BFs16s, aBFs16ll_BFu16ll_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16i_BFu16i, aBFs16ll_BFu16ll_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16i_BFu16ll, aBFs16ll_BFu16ll_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16i_BFu16s, aBFs16ll_BFu16ll_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16ll, aBFs16ll_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16ll_BFs16i, aBFs16ll_BFu16ll_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16ll_BFs16ll, aBFs16ll_BFu16ll_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16ll_BFs16s, aBFs16ll_BFu16ll_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16ll_BFu16i, aBFs16ll_BFu16ll_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16ll_BFu16ll, aBFs16ll_BFu16ll_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16ll_BFu16s, aBFs16ll_BFu16ll_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16s, aBFs16ll_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16s_BFs16i, aBFs16ll_BFu16ll_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16s_BFs16ll, aBFs16ll_BFu16ll_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16s_BFs16s, aBFs16ll_BFu16ll_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16s_BFu16i, aBFs16ll_BFu16ll_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16s_BFu16ll, aBFs16ll_BFu16ll_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16ll_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16ll_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16ll_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16ll_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16ll_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16ll_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16ll_BFu16s_BFu16s, aBFs16ll_BFu16ll_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s, aBFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16i, aBFs16ll_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16i_BFs16i, aBFs16ll_BFu16s_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16i_BFs16ll, aBFs16ll_BFu16s_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16i_BFs16s, aBFs16ll_BFu16s_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16i_BFu16i, aBFs16ll_BFu16s_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16i_BFu16ll, aBFs16ll_BFu16s_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16i_BFu16s, aBFs16ll_BFu16s_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16ll, aBFs16ll_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16ll_BFs16i, aBFs16ll_BFu16s_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16ll_BFs16ll, aBFs16ll_BFu16s_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16ll_BFs16s, aBFs16ll_BFu16s_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16ll_BFu16i, aBFs16ll_BFu16s_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16ll_BFu16ll, aBFs16ll_BFu16s_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16ll_BFu16s, aBFs16ll_BFu16s_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16s, aBFs16ll_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16s_BFs16i, aBFs16ll_BFu16s_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16s_BFs16ll, aBFs16ll_BFu16s_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16s_BFs16s, aBFs16ll_BFu16s_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16s_BFu16i, aBFs16ll_BFu16s_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16s_BFu16ll, aBFs16ll_BFu16s_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFs16s_BFu16s, aBFs16ll_BFu16s_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16i, aBFs16ll_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16i_BFs16i, aBFs16ll_BFu16s_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16i_BFs16ll, aBFs16ll_BFu16s_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16i_BFs16s, aBFs16ll_BFu16s_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16i_BFu16i, aBFs16ll_BFu16s_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16i_BFu16ll, aBFs16ll_BFu16s_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16i_BFu16s, aBFs16ll_BFu16s_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16ll, aBFs16ll_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16ll_BFs16i, aBFs16ll_BFu16s_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16ll_BFs16ll, aBFs16ll_BFu16s_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16ll_BFs16s, aBFs16ll_BFu16s_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16ll_BFu16i, aBFs16ll_BFu16s_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16ll_BFu16ll, aBFs16ll_BFu16s_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16ll_BFu16s, aBFs16ll_BFu16s_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16ll_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16s, aBFs16ll_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16s_BFs16i, aBFs16ll_BFu16s_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16s_BFs16ll, aBFs16ll_BFu16s_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16s_BFs16s, aBFs16ll_BFu16s_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16s_BFu16i, aBFs16ll_BFu16s_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16s_BFu16ll, aBFs16ll_BFu16s_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16ll_BFu16s_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16ll_BFu16s_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16ll_BFu16s_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16ll_BFu16s_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16ll_BFu16s_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16ll_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16ll_BFu16s_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16ll_BFu16s_BFu16s_BFu16s, aBFs16ll_BFu16s_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i, aBFs16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16i, aBFs16s_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16i_BFs16i, aBFs16s_BFs16i_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16i_BFs16ll, aBFs16s_BFs16i_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16i_BFs16s, aBFs16s_BFs16i_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16i_BFu16i, aBFs16s_BFs16i_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16i_BFu16ll, aBFs16s_BFs16i_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16i_BFu16s, aBFs16s_BFs16i_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16ll, aBFs16s_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16ll_BFs16i, aBFs16s_BFs16i_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16ll_BFs16ll, aBFs16s_BFs16i_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16ll_BFs16s, aBFs16s_BFs16i_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16ll_BFu16i, aBFs16s_BFs16i_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16ll_BFu16ll, aBFs16s_BFs16i_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16ll_BFu16s, aBFs16s_BFs16i_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16s, aBFs16s_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16s_BFs16i, aBFs16s_BFs16i_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16s_BFs16ll, aBFs16s_BFs16i_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16s_BFs16s, aBFs16s_BFs16i_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16s_BFu16i, aBFs16s_BFs16i_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16s_BFu16ll, aBFs16s_BFs16i_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFs16s_BFu16s, aBFs16s_BFs16i_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16i, aBFs16s_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16i_BFs16i, aBFs16s_BFs16i_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16i_BFs16ll, aBFs16s_BFs16i_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16i_BFs16s, aBFs16s_BFs16i_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16i_BFu16i, aBFs16s_BFs16i_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16i_BFu16ll, aBFs16s_BFs16i_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16i_BFu16s, aBFs16s_BFs16i_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16ll, aBFs16s_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16ll_BFs16i, aBFs16s_BFs16i_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16ll_BFs16ll, aBFs16s_BFs16i_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16ll_BFs16s, aBFs16s_BFs16i_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16ll_BFu16i, aBFs16s_BFs16i_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16ll_BFu16ll, aBFs16s_BFs16i_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16ll_BFu16s, aBFs16s_BFs16i_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16s, aBFs16s_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16s_BFs16i, aBFs16s_BFs16i_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16s_BFs16ll, aBFs16s_BFs16i_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16s_BFs16s, aBFs16s_BFs16i_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16s_BFu16i, aBFs16s_BFs16i_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16s_BFu16ll, aBFs16s_BFs16i_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16i_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16i_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16i_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16i_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16i_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16i_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16i_BFu16s_BFu16s, aBFs16s_BFs16i_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll, aBFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16i, aBFs16s_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16i_BFs16i, aBFs16s_BFs16ll_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16i_BFs16ll, aBFs16s_BFs16ll_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16i_BFs16s, aBFs16s_BFs16ll_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16i_BFu16i, aBFs16s_BFs16ll_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16i_BFu16ll, aBFs16s_BFs16ll_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16i_BFu16s, aBFs16s_BFs16ll_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16ll, aBFs16s_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16ll_BFs16i, aBFs16s_BFs16ll_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16ll_BFs16ll, aBFs16s_BFs16ll_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16ll_BFs16s, aBFs16s_BFs16ll_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16ll_BFu16i, aBFs16s_BFs16ll_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16ll_BFu16ll, aBFs16s_BFs16ll_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16ll_BFu16s, aBFs16s_BFs16ll_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16s, aBFs16s_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16s_BFs16i, aBFs16s_BFs16ll_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16s_BFs16ll, aBFs16s_BFs16ll_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16s_BFs16s, aBFs16s_BFs16ll_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16s_BFu16i, aBFs16s_BFs16ll_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16s_BFu16ll, aBFs16s_BFs16ll_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFs16s_BFu16s, aBFs16s_BFs16ll_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16i, aBFs16s_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16i_BFs16i, aBFs16s_BFs16ll_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16i_BFs16ll, aBFs16s_BFs16ll_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16i_BFs16s, aBFs16s_BFs16ll_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16i_BFu16i, aBFs16s_BFs16ll_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16i_BFu16ll, aBFs16s_BFs16ll_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16i_BFu16s, aBFs16s_BFs16ll_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16ll, aBFs16s_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16ll_BFs16i, aBFs16s_BFs16ll_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16ll_BFs16ll, aBFs16s_BFs16ll_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16ll_BFs16s, aBFs16s_BFs16ll_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16ll_BFu16i, aBFs16s_BFs16ll_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16ll_BFu16ll, aBFs16s_BFs16ll_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16ll_BFu16s, aBFs16s_BFs16ll_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16s, aBFs16s_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16s_BFs16i, aBFs16s_BFs16ll_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16s_BFs16ll, aBFs16s_BFs16ll_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16s_BFs16s, aBFs16s_BFs16ll_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16s_BFu16i, aBFs16s_BFs16ll_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16s_BFu16ll, aBFs16s_BFs16ll_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16ll_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16ll_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16ll_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16ll_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16ll_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16ll_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16ll_BFu16s_BFu16s, aBFs16s_BFs16ll_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s, aBFs16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16i, aBFs16s_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16i_BFs16i, aBFs16s_BFs16s_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16i_BFs16ll, aBFs16s_BFs16s_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16i_BFs16s, aBFs16s_BFs16s_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16i_BFu16i, aBFs16s_BFs16s_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16i_BFu16ll, aBFs16s_BFs16s_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16i_BFu16s, aBFs16s_BFs16s_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16ll, aBFs16s_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16ll_BFs16i, aBFs16s_BFs16s_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16ll_BFs16ll, aBFs16s_BFs16s_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16ll_BFs16s, aBFs16s_BFs16s_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16ll_BFu16i, aBFs16s_BFs16s_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16ll_BFu16ll, aBFs16s_BFs16s_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16ll_BFu16s, aBFs16s_BFs16s_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16s, aBFs16s_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16s_BFs16i, aBFs16s_BFs16s_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16s_BFs16ll, aBFs16s_BFs16s_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16s_BFs16s, aBFs16s_BFs16s_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16s_BFu16i, aBFs16s_BFs16s_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16s_BFu16ll, aBFs16s_BFs16s_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFs16s_BFu16s, aBFs16s_BFs16s_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16i, aBFs16s_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16i_BFs16i, aBFs16s_BFs16s_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16i_BFs16ll, aBFs16s_BFs16s_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16i_BFs16s, aBFs16s_BFs16s_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16i_BFu16i, aBFs16s_BFs16s_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16i_BFu16ll, aBFs16s_BFs16s_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16i_BFu16s, aBFs16s_BFs16s_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16ll, aBFs16s_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16ll_BFs16i, aBFs16s_BFs16s_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16ll_BFs16ll, aBFs16s_BFs16s_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16ll_BFs16s, aBFs16s_BFs16s_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16ll_BFu16i, aBFs16s_BFs16s_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16ll_BFu16ll, aBFs16s_BFs16s_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16ll_BFu16s, aBFs16s_BFs16s_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16s, aBFs16s_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16s_BFs16i, aBFs16s_BFs16s_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16s_BFs16ll, aBFs16s_BFs16s_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16s_BFs16s, aBFs16s_BFs16s_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16s_BFu16i, aBFs16s_BFs16s_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16s_BFu16ll, aBFs16s_BFs16s_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFs16s_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFs16s_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFs16s_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFs16s_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFs16s_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFs16s_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFs16s_BFu16s_BFu16s, aBFs16s_BFs16s_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i, aBFs16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16i, aBFs16s_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16i_BFs16i, aBFs16s_BFu16i_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16i_BFs16ll, aBFs16s_BFu16i_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16i_BFs16s, aBFs16s_BFu16i_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16i_BFu16i, aBFs16s_BFu16i_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16i_BFu16ll, aBFs16s_BFu16i_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16i_BFu16s, aBFs16s_BFu16i_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16ll, aBFs16s_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16ll_BFs16i, aBFs16s_BFu16i_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16ll_BFs16ll, aBFs16s_BFu16i_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16ll_BFs16s, aBFs16s_BFu16i_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16ll_BFu16i, aBFs16s_BFu16i_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16ll_BFu16ll, aBFs16s_BFu16i_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16ll_BFu16s, aBFs16s_BFu16i_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16s, aBFs16s_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16s_BFs16i, aBFs16s_BFu16i_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16s_BFs16ll, aBFs16s_BFu16i_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16s_BFs16s, aBFs16s_BFu16i_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16s_BFu16i, aBFs16s_BFu16i_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16s_BFu16ll, aBFs16s_BFu16i_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFs16s_BFu16s, aBFs16s_BFu16i_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16i, aBFs16s_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16i_BFs16i, aBFs16s_BFu16i_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16i_BFs16ll, aBFs16s_BFu16i_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16i_BFs16s, aBFs16s_BFu16i_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16i_BFu16i, aBFs16s_BFu16i_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16i_BFu16ll, aBFs16s_BFu16i_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16i_BFu16s, aBFs16s_BFu16i_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16ll, aBFs16s_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16ll_BFs16i, aBFs16s_BFu16i_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16ll_BFs16ll, aBFs16s_BFu16i_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16ll_BFs16s, aBFs16s_BFu16i_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16ll_BFu16i, aBFs16s_BFu16i_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16ll_BFu16ll, aBFs16s_BFu16i_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16ll_BFu16s, aBFs16s_BFu16i_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16s, aBFs16s_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16s_BFs16i, aBFs16s_BFu16i_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16s_BFs16ll, aBFs16s_BFu16i_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16s_BFs16s, aBFs16s_BFu16i_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16s_BFu16i, aBFs16s_BFu16i_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16s_BFu16ll, aBFs16s_BFu16i_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16i_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16i_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16i_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16i_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16i_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16i_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16i_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16i_BFu16s_BFu16s, aBFs16s_BFu16i_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll, aBFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16i, aBFs16s_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16i_BFs16i, aBFs16s_BFu16ll_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16i_BFs16ll, aBFs16s_BFu16ll_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16i_BFs16s, aBFs16s_BFu16ll_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16i_BFu16i, aBFs16s_BFu16ll_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16i_BFu16ll, aBFs16s_BFu16ll_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16i_BFu16s, aBFs16s_BFu16ll_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16ll, aBFs16s_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16ll_BFs16i, aBFs16s_BFu16ll_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16ll_BFs16ll, aBFs16s_BFu16ll_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16ll_BFs16s, aBFs16s_BFu16ll_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16ll_BFu16i, aBFs16s_BFu16ll_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16ll_BFu16ll, aBFs16s_BFu16ll_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16ll_BFu16s, aBFs16s_BFu16ll_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16s, aBFs16s_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16s_BFs16i, aBFs16s_BFu16ll_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16s_BFs16ll, aBFs16s_BFu16ll_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16s_BFs16s, aBFs16s_BFu16ll_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16s_BFu16i, aBFs16s_BFu16ll_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16s_BFu16ll, aBFs16s_BFu16ll_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFs16s_BFu16s, aBFs16s_BFu16ll_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16i, aBFs16s_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16i_BFs16i, aBFs16s_BFu16ll_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16i_BFs16ll, aBFs16s_BFu16ll_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16i_BFs16s, aBFs16s_BFu16ll_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16i_BFu16i, aBFs16s_BFu16ll_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16i_BFu16ll, aBFs16s_BFu16ll_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16i_BFu16s, aBFs16s_BFu16ll_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16ll, aBFs16s_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16ll_BFs16i, aBFs16s_BFu16ll_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16ll_BFs16ll, aBFs16s_BFu16ll_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16ll_BFs16s, aBFs16s_BFu16ll_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16ll_BFu16i, aBFs16s_BFu16ll_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16ll_BFu16ll, aBFs16s_BFu16ll_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16ll_BFu16s, aBFs16s_BFu16ll_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16s, aBFs16s_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16s_BFs16i, aBFs16s_BFu16ll_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16s_BFs16ll, aBFs16s_BFu16ll_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16s_BFs16s, aBFs16s_BFu16ll_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16s_BFu16i, aBFs16s_BFu16ll_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16s_BFu16ll, aBFs16s_BFu16ll_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16ll_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16ll_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16ll_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16ll_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16ll_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16ll_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16ll_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16ll_BFu16s_BFu16s, aBFs16s_BFu16ll_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s, aBFs16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16i, aBFs16s_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16i_BFs16i, aBFs16s_BFu16s_BFs16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16i_BFs16ll, aBFs16s_BFu16s_BFs16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16i_BFs16s, aBFs16s_BFu16s_BFs16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16i_BFu16i, aBFs16s_BFu16s_BFs16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16i_BFu16ll, aBFs16s_BFu16s_BFs16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16i_BFu16s, aBFs16s_BFu16s_BFs16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16ll, aBFs16s_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16ll_BFs16i, aBFs16s_BFu16s_BFs16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16ll_BFs16ll, aBFs16s_BFu16s_BFs16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16ll_BFs16s, aBFs16s_BFu16s_BFs16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16ll_BFu16i, aBFs16s_BFu16s_BFs16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16ll_BFu16ll, aBFs16s_BFu16s_BFs16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16ll_BFu16s, aBFs16s_BFu16s_BFs16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16s, aBFs16s_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16s_BFs16i, aBFs16s_BFu16s_BFs16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16s_BFs16ll, aBFs16s_BFu16s_BFs16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16s_BFs16s, aBFs16s_BFu16s_BFs16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16s_BFu16i, aBFs16s_BFu16s_BFs16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16s_BFu16ll, aBFs16s_BFu16s_BFs16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFs16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFs16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFs16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFs16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFs16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFs16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFs16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFs16s_BFu16s, aBFs16s_BFu16s_BFs16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16i, aBFs16s_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16i_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16i_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16i_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16i_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16i_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16i_BFs16i, aBFs16s_BFu16s_BFu16i_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16i_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16i_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16i_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16i_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16i_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16i_BFs16ll, aBFs16s_BFu16s_BFu16i_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16i_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16i_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16i_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16i_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16i_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16i_BFs16s, aBFs16s_BFu16s_BFu16i_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16i_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16i_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16i_BFu16i, aBFs16s_BFu16s_BFu16i_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16i_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16i_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16i_BFu16ll, aBFs16s_BFu16s_BFu16i_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16i_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16i_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16i_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16i_BFu16s, aBFs16s_BFu16s_BFu16i_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16ll, aBFs16s_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16ll_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16ll_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16ll_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16ll_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16ll_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16ll_BFs16i, aBFs16s_BFu16s_BFu16ll_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16ll_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16ll_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16ll_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16ll_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16ll_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16ll_BFs16ll, aBFs16s_BFu16s_BFu16ll_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16ll_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16ll_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16ll_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16ll_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16ll_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16ll_BFs16s, aBFs16s_BFu16s_BFu16ll_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16ll_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16ll_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16ll_BFu16i, aBFs16s_BFu16s_BFu16ll_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16ll_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16ll_BFu16ll, aBFs16s_BFu16s_BFu16ll_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16ll_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16ll_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16ll_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16ll_BFu16s, aBFs16s_BFu16s_BFu16ll_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFs16s_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16s, aBFs16s_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16s_BFs16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16s_BFs16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16s_BFs16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16s_BFs16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16s_BFs16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16s_BFs16i, aBFs16s_BFu16s_BFu16s_BFs16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16s_BFs16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16s_BFs16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16s_BFs16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16s_BFs16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16s_BFs16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16s_BFs16ll, aBFs16s_BFu16s_BFu16s_BFs16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16s_BFs16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16s_BFs16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16s_BFs16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16s_BFs16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16s_BFs16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFs16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFs16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16s_BFs16s, aBFs16s_BFu16s_BFu16s_BFs16s)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16s_BFu16i()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16s_BFu16i");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16s_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16i");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16s_BFu16i, aBFs16s_BFu16s_BFu16s_BFu16i)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16s_BFu16ll()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16s_BFu16ll");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16ll");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16s_BFu16ll, aBFs16s_BFu16s_BFu16s_BFu16ll)
//============================================================================



static void Test_aBFs16s_BFu16s_BFu16s_BFu16s()
{
  {
    init_simple_test("aBFs16s_BFu16s_BFu16s_BFu16s");
    static STRUCT_IF_C aBFs16s_BFu16s_BFu16s_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFs16s_BFu16s_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs16s_BFu16s_BFu16s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_sll(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, 1, "aBFs16s_BFu16s_BFu16s_BFu16s");
    set_bf_and_test(lv, v4, 6, 0, 16, hide_ull(1LL<<15), "aBFs16s_BFu16s_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs16s_BFu16s_BFu16s_BFu16s, aBFs16s_BFu16s_BFu16s_BFu16s)
//============================================================================



static void Test_aBFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i, aBFs17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17i, aBFs17i_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17i_BFs17i, aBFs17i_BFs17i_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17i_BFs17ll, aBFs17i_BFs17i_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17i_BFu17i, aBFs17i_BFs17i_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17i_BFu17ll, aBFs17i_BFs17i_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17ll, aBFs17i_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17ll_BFs17i, aBFs17i_BFs17i_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17ll_BFs17ll, aBFs17i_BFs17i_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17ll_BFu17i, aBFs17i_BFs17i_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFs17ll_BFu17ll, aBFs17i_BFs17i_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17i, aBFs17i_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17i_BFs17i, aBFs17i_BFs17i_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17i_BFs17ll, aBFs17i_BFs17i_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17i_BFu17i, aBFs17i_BFs17i_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17i_BFu17ll, aBFs17i_BFs17i_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17ll, aBFs17i_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17ll_BFs17i, aBFs17i_BFs17i_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17ll_BFs17ll, aBFs17i_BFs17i_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17ll_BFu17i, aBFs17i_BFs17i_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17i_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17i_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17i_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17i_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17i_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17i_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17i_BFu17ll_BFu17ll, aBFs17i_BFs17i_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll, aBFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17i, aBFs17i_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17i_BFs17i, aBFs17i_BFs17ll_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17i_BFs17ll, aBFs17i_BFs17ll_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17i_BFu17i, aBFs17i_BFs17ll_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17i_BFu17ll, aBFs17i_BFs17ll_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17ll, aBFs17i_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17ll_BFs17i, aBFs17i_BFs17ll_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17ll_BFs17ll, aBFs17i_BFs17ll_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17ll_BFu17i, aBFs17i_BFs17ll_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFs17ll_BFu17ll, aBFs17i_BFs17ll_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17i, aBFs17i_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17i_BFs17i, aBFs17i_BFs17ll_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17i_BFs17ll, aBFs17i_BFs17ll_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17i_BFu17i, aBFs17i_BFs17ll_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17i_BFu17ll, aBFs17i_BFs17ll_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17ll, aBFs17i_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17ll_BFs17i, aBFs17i_BFs17ll_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17ll_BFs17ll, aBFs17i_BFs17ll_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17ll_BFu17i, aBFs17i_BFs17ll_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFs17ll_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFs17ll_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFs17ll_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFs17ll_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFs17ll_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFs17ll_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFs17ll_BFu17ll_BFu17ll, aBFs17i_BFs17ll_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i, aBFs17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17i, aBFs17i_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17i_BFs17i, aBFs17i_BFu17i_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17i_BFs17ll, aBFs17i_BFu17i_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17i_BFu17i, aBFs17i_BFu17i_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17i_BFu17ll, aBFs17i_BFu17i_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17ll, aBFs17i_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17ll_BFs17i, aBFs17i_BFu17i_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17ll_BFs17ll, aBFs17i_BFu17i_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17ll_BFu17i, aBFs17i_BFu17i_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFs17ll_BFu17ll, aBFs17i_BFu17i_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17i, aBFs17i_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17i_BFs17i, aBFs17i_BFu17i_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17i_BFs17ll, aBFs17i_BFu17i_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17i_BFu17i, aBFs17i_BFu17i_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17i_BFu17ll, aBFs17i_BFu17i_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17ll, aBFs17i_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17ll_BFs17i, aBFs17i_BFu17i_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17ll_BFs17ll, aBFs17i_BFu17i_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17ll_BFu17i, aBFs17i_BFu17i_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17i_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17i_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17i_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17i_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17i_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17i_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17i_BFu17ll_BFu17ll, aBFs17i_BFu17i_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll, aBFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17i, aBFs17i_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17i_BFs17i, aBFs17i_BFu17ll_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17i_BFs17ll, aBFs17i_BFu17ll_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17i_BFu17i, aBFs17i_BFu17ll_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17i_BFu17ll, aBFs17i_BFu17ll_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17ll, aBFs17i_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17ll_BFs17i, aBFs17i_BFu17ll_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17ll_BFs17ll, aBFs17i_BFu17ll_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17ll_BFu17i, aBFs17i_BFu17ll_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFs17ll_BFu17ll, aBFs17i_BFu17ll_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17i, aBFs17i_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17i_BFs17i, aBFs17i_BFu17ll_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17i_BFs17ll, aBFs17i_BFu17ll_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17i_BFu17i, aBFs17i_BFu17ll_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17i_BFu17ll, aBFs17i_BFu17ll_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17i_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17ll, aBFs17i_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17ll_BFs17i, aBFs17i_BFu17ll_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17ll_BFs17ll, aBFs17i_BFu17ll_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17ll_BFu17i, aBFs17i_BFu17ll_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17i_BFu17ll_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17i_BFu17ll_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17i_BFu17ll_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17i_BFu17ll_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17i_BFu17ll_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17i_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17i_BFu17ll_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17i_BFu17ll_BFu17ll_BFu17ll, aBFs17i_BFu17ll_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i, aBFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17i, aBFs17ll_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17i_BFs17i, aBFs17ll_BFs17i_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17i_BFs17ll, aBFs17ll_BFs17i_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17i_BFu17i, aBFs17ll_BFs17i_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17i_BFu17ll, aBFs17ll_BFs17i_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17ll, aBFs17ll_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17ll_BFs17i, aBFs17ll_BFs17i_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17ll_BFs17ll, aBFs17ll_BFs17i_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17ll_BFu17i, aBFs17ll_BFs17i_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFs17ll_BFu17ll, aBFs17ll_BFs17i_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17i, aBFs17ll_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17i_BFs17i, aBFs17ll_BFs17i_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17i_BFs17ll, aBFs17ll_BFs17i_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17i_BFu17i, aBFs17ll_BFs17i_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17i_BFu17ll, aBFs17ll_BFs17i_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17ll, aBFs17ll_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17ll_BFs17i, aBFs17ll_BFs17i_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17ll_BFs17ll, aBFs17ll_BFs17i_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17ll_BFu17i, aBFs17ll_BFs17i_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17i_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17i_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17i_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17i_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17i_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17i_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17i_BFu17ll_BFu17ll, aBFs17ll_BFs17i_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll, aBFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17i, aBFs17ll_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17i_BFs17i, aBFs17ll_BFs17ll_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17i_BFs17ll, aBFs17ll_BFs17ll_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17i_BFu17i, aBFs17ll_BFs17ll_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17i_BFu17ll, aBFs17ll_BFs17ll_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17ll, aBFs17ll_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17ll_BFs17i, aBFs17ll_BFs17ll_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17ll_BFs17ll, aBFs17ll_BFs17ll_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17ll_BFu17i, aBFs17ll_BFs17ll_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFs17ll_BFu17ll, aBFs17ll_BFs17ll_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17i, aBFs17ll_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17i_BFs17i, aBFs17ll_BFs17ll_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17i_BFs17ll, aBFs17ll_BFs17ll_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17i_BFu17i, aBFs17ll_BFs17ll_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17i_BFu17ll, aBFs17ll_BFs17ll_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17ll, aBFs17ll_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17ll_BFs17i, aBFs17ll_BFs17ll_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17ll_BFs17ll, aBFs17ll_BFs17ll_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17ll_BFu17i, aBFs17ll_BFs17ll_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFs17ll_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFs17ll_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFs17ll_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFs17ll_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFs17ll_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_sll(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFs17ll_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFs17ll_BFu17ll_BFu17ll, aBFs17ll_BFs17ll_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i, aBFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17i, aBFs17ll_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17i_BFs17i, aBFs17ll_BFu17i_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17i_BFs17ll, aBFs17ll_BFu17i_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17i_BFu17i, aBFs17ll_BFu17i_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17i_BFu17ll, aBFs17ll_BFu17i_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17ll, aBFs17ll_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17ll_BFs17i, aBFs17ll_BFu17i_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17ll_BFs17ll, aBFs17ll_BFu17i_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17ll_BFu17i, aBFs17ll_BFu17i_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFs17ll_BFu17ll, aBFs17ll_BFu17i_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17i, aBFs17ll_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17i_BFs17i, aBFs17ll_BFu17i_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17i_BFs17ll, aBFs17ll_BFu17i_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17i_BFu17i, aBFs17ll_BFu17i_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17i_BFu17ll, aBFs17ll_BFu17i_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17ll, aBFs17ll_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17ll_BFs17i, aBFs17ll_BFu17i_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17ll_BFs17ll, aBFs17ll_BFu17i_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17ll_BFu17i, aBFs17ll_BFu17i_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17i_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17i_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17i_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17i_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17i_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17i_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17i_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17i_BFu17ll_BFu17ll, aBFs17ll_BFu17i_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll, aBFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17i, aBFs17ll_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFs17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17i_BFs17i, aBFs17ll_BFu17ll_BFs17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFs17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17i_BFs17ll, aBFs17ll_BFu17ll_BFs17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFs17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17i_BFu17i, aBFs17ll_BFu17ll_BFs17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFs17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFs17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17i_BFu17ll, aBFs17ll_BFu17ll_BFs17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17ll, aBFs17ll_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFs17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17ll_BFs17i, aBFs17ll_BFu17ll_BFs17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFs17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17ll_BFs17ll, aBFs17ll_BFu17ll_BFs17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFs17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17ll_BFu17i, aBFs17ll_BFu17ll_BFs17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFs17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFs17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFs17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFs17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFs17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFs17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFs17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFs17ll_BFu17ll, aBFs17ll_BFu17ll_BFs17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17i, aBFs17ll_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17i_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17i_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17i_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFu17i_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17i_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17i_BFs17i, aBFs17ll_BFu17ll_BFu17i_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17i_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17i_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17i_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFu17i_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17i_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17i_BFs17ll, aBFs17ll_BFu17ll_BFu17i_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17i_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17i_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17i_BFu17i, aBFs17ll_BFu17ll_BFu17i_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17i_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17i_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFu17i_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17i_BFu17ll, aBFs17ll_BFu17ll_BFu17i_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFs17ll_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17ll, aBFs17ll_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17ll_BFs17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17ll_BFs17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17ll_BFs17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFu17ll_BFs17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17ll_BFs17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFs17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFs17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17ll_BFs17i, aBFs17ll_BFu17ll_BFu17ll_BFs17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17ll_BFs17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17ll_BFs17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17ll_BFs17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFu17ll_BFs17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17ll_BFs17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFs17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFs17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17ll_BFs17ll, aBFs17ll_BFu17ll_BFu17ll_BFs17ll)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17ll_BFu17i()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17ll_BFu17i");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFu17i");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17ll_BFu17i, aBFs17ll_BFu17ll_BFu17ll_BFu17i)
//============================================================================



static void Test_aBFs17ll_BFu17ll_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aBFs17ll_BFu17ll_BFu17ll_BFu17ll");
    static STRUCT_IF_C aBFs17ll_BFu17ll_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFs17ll_BFu17ll_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs17ll_BFu17ll_BFu17ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_sll(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 2, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, 1, "aBFs17ll_BFu17ll_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v4, 6, 3, 17, hide_ull(1LL<<16), "aBFs17ll_BFu17ll_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs17ll_BFu17ll_BFu17ll_BFu17ll, aBFs17ll_BFu17ll_BFu17ll_BFu17ll)
//============================================================================



static void Test_aBFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c, aBFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1c, aBFs1c_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1c_BFs1c, aBFs1c_BFs1c_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1c_BFs1i, aBFs1c_BFs1c_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1c_BFs1ll, aBFs1c_BFs1c_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1c_BFs1s, aBFs1c_BFs1c_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1c_BFu1c, aBFs1c_BFs1c_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1c_BFu1i, aBFs1c_BFs1c_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1c_BFu1ll, aBFs1c_BFs1c_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1c_BFu1s, aBFs1c_BFs1c_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1i, aBFs1c_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1i_BFs1c, aBFs1c_BFs1c_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1i_BFs1i, aBFs1c_BFs1c_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1i_BFs1ll, aBFs1c_BFs1c_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1i_BFs1s, aBFs1c_BFs1c_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1i_BFu1c, aBFs1c_BFs1c_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1i_BFu1i, aBFs1c_BFs1c_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1i_BFu1ll, aBFs1c_BFs1c_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1i_BFu1s, aBFs1c_BFs1c_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1ll, aBFs1c_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1ll_BFs1c, aBFs1c_BFs1c_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1ll_BFs1i, aBFs1c_BFs1c_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1ll_BFs1ll, aBFs1c_BFs1c_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1ll_BFs1s, aBFs1c_BFs1c_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1ll_BFu1c, aBFs1c_BFs1c_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1ll_BFu1i, aBFs1c_BFs1c_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1ll_BFu1ll, aBFs1c_BFs1c_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1ll_BFu1s, aBFs1c_BFs1c_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1s, aBFs1c_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1s_BFs1c, aBFs1c_BFs1c_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1s_BFs1i, aBFs1c_BFs1c_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1s_BFs1ll, aBFs1c_BFs1c_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1s_BFs1s, aBFs1c_BFs1c_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1s_BFu1c, aBFs1c_BFs1c_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1s_BFu1i, aBFs1c_BFs1c_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1s_BFu1ll, aBFs1c_BFs1c_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFs1s_BFu1s, aBFs1c_BFs1c_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1c, aBFs1c_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1c_BFs1c, aBFs1c_BFs1c_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1c_BFs1i, aBFs1c_BFs1c_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1c_BFs1ll, aBFs1c_BFs1c_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1c_BFs1s, aBFs1c_BFs1c_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1c_BFu1c, aBFs1c_BFs1c_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1c_BFu1i, aBFs1c_BFs1c_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1c_BFu1ll, aBFs1c_BFs1c_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1c_BFu1s, aBFs1c_BFs1c_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1i, aBFs1c_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1i_BFs1c, aBFs1c_BFs1c_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1i_BFs1i, aBFs1c_BFs1c_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1i_BFs1ll, aBFs1c_BFs1c_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1i_BFs1s, aBFs1c_BFs1c_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1i_BFu1c, aBFs1c_BFs1c_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1i_BFu1i, aBFs1c_BFs1c_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1i_BFu1ll, aBFs1c_BFs1c_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1i_BFu1s, aBFs1c_BFs1c_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1ll, aBFs1c_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1ll_BFs1c, aBFs1c_BFs1c_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1ll_BFs1i, aBFs1c_BFs1c_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1ll_BFs1ll, aBFs1c_BFs1c_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1ll_BFs1s, aBFs1c_BFs1c_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1ll_BFu1c, aBFs1c_BFs1c_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1ll_BFu1i, aBFs1c_BFs1c_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1ll_BFu1ll, aBFs1c_BFs1c_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1ll_BFu1s, aBFs1c_BFs1c_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1s, aBFs1c_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1s_BFs1c, aBFs1c_BFs1c_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1s_BFs1i, aBFs1c_BFs1c_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1s_BFs1ll, aBFs1c_BFs1c_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1c_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1s_BFs1s, aBFs1c_BFs1c_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1s_BFu1c, aBFs1c_BFs1c_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1s_BFu1i, aBFs1c_BFs1c_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1s_BFu1ll, aBFs1c_BFs1c_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1c_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1c_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1c_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1c_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1c_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1c_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1c_BFu1s_BFu1s, aBFs1c_BFs1c_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i, aBFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1c, aBFs1c_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1c_BFs1c, aBFs1c_BFs1i_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1c_BFs1i, aBFs1c_BFs1i_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1c_BFs1ll, aBFs1c_BFs1i_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1c_BFs1s, aBFs1c_BFs1i_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1c_BFu1c, aBFs1c_BFs1i_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1c_BFu1i, aBFs1c_BFs1i_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1c_BFu1ll, aBFs1c_BFs1i_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1c_BFu1s, aBFs1c_BFs1i_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1i, aBFs1c_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1i_BFs1c, aBFs1c_BFs1i_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1i_BFs1i, aBFs1c_BFs1i_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1i_BFs1ll, aBFs1c_BFs1i_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1i_BFs1s, aBFs1c_BFs1i_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1i_BFu1c, aBFs1c_BFs1i_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1i_BFu1i, aBFs1c_BFs1i_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1i_BFu1ll, aBFs1c_BFs1i_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1i_BFu1s, aBFs1c_BFs1i_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1ll, aBFs1c_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1ll_BFs1c, aBFs1c_BFs1i_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1ll_BFs1i, aBFs1c_BFs1i_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1ll_BFs1ll, aBFs1c_BFs1i_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1ll_BFs1s, aBFs1c_BFs1i_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1ll_BFu1c, aBFs1c_BFs1i_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1ll_BFu1i, aBFs1c_BFs1i_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1ll_BFu1ll, aBFs1c_BFs1i_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1ll_BFu1s, aBFs1c_BFs1i_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1s, aBFs1c_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1s_BFs1c, aBFs1c_BFs1i_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1s_BFs1i, aBFs1c_BFs1i_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1s_BFs1ll, aBFs1c_BFs1i_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1s_BFs1s, aBFs1c_BFs1i_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1s_BFu1c, aBFs1c_BFs1i_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1s_BFu1i, aBFs1c_BFs1i_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1s_BFu1ll, aBFs1c_BFs1i_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFs1s_BFu1s, aBFs1c_BFs1i_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1c, aBFs1c_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1c_BFs1c, aBFs1c_BFs1i_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1c_BFs1i, aBFs1c_BFs1i_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1c_BFs1ll, aBFs1c_BFs1i_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1c_BFs1s, aBFs1c_BFs1i_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1c_BFu1c, aBFs1c_BFs1i_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1c_BFu1i, aBFs1c_BFs1i_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1c_BFu1ll, aBFs1c_BFs1i_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1c_BFu1s, aBFs1c_BFs1i_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1i, aBFs1c_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1i_BFs1c, aBFs1c_BFs1i_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1i_BFs1i, aBFs1c_BFs1i_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1i_BFs1ll, aBFs1c_BFs1i_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1i_BFs1s, aBFs1c_BFs1i_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1i_BFu1c, aBFs1c_BFs1i_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1i_BFu1i, aBFs1c_BFs1i_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1i_BFu1ll, aBFs1c_BFs1i_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1i_BFu1s, aBFs1c_BFs1i_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1ll, aBFs1c_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1ll_BFs1c, aBFs1c_BFs1i_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1ll_BFs1i, aBFs1c_BFs1i_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1ll_BFs1ll, aBFs1c_BFs1i_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1ll_BFs1s, aBFs1c_BFs1i_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1ll_BFu1c, aBFs1c_BFs1i_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1ll_BFu1i, aBFs1c_BFs1i_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1ll_BFu1ll, aBFs1c_BFs1i_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1ll_BFu1s, aBFs1c_BFs1i_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1s, aBFs1c_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1s_BFs1c, aBFs1c_BFs1i_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1s_BFs1i, aBFs1c_BFs1i_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1s_BFs1ll, aBFs1c_BFs1i_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1i_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1s_BFs1s, aBFs1c_BFs1i_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1s_BFu1c, aBFs1c_BFs1i_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1s_BFu1i, aBFs1c_BFs1i_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1s_BFu1ll, aBFs1c_BFs1i_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1i_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1i_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1i_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1i_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1i_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1i_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1i_BFu1s_BFu1s, aBFs1c_BFs1i_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll, aBFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1c, aBFs1c_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1c_BFs1c, aBFs1c_BFs1ll_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1c_BFs1i, aBFs1c_BFs1ll_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1c_BFs1ll, aBFs1c_BFs1ll_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1c_BFs1s, aBFs1c_BFs1ll_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1c_BFu1c, aBFs1c_BFs1ll_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1c_BFu1i, aBFs1c_BFs1ll_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1c_BFu1ll, aBFs1c_BFs1ll_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1c_BFu1s, aBFs1c_BFs1ll_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1i, aBFs1c_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1i_BFs1c, aBFs1c_BFs1ll_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1i_BFs1i, aBFs1c_BFs1ll_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1i_BFs1ll, aBFs1c_BFs1ll_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1i_BFs1s, aBFs1c_BFs1ll_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1i_BFu1c, aBFs1c_BFs1ll_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1i_BFu1i, aBFs1c_BFs1ll_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1i_BFu1ll, aBFs1c_BFs1ll_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1i_BFu1s, aBFs1c_BFs1ll_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1ll, aBFs1c_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1ll_BFs1c, aBFs1c_BFs1ll_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1ll_BFs1i, aBFs1c_BFs1ll_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1ll_BFs1ll, aBFs1c_BFs1ll_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1ll_BFs1s, aBFs1c_BFs1ll_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1ll_BFu1c, aBFs1c_BFs1ll_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1ll_BFu1i, aBFs1c_BFs1ll_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1ll_BFu1ll, aBFs1c_BFs1ll_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1ll_BFu1s, aBFs1c_BFs1ll_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1s, aBFs1c_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1s_BFs1c, aBFs1c_BFs1ll_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1s_BFs1i, aBFs1c_BFs1ll_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1s_BFs1ll, aBFs1c_BFs1ll_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1s_BFs1s, aBFs1c_BFs1ll_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1s_BFu1c, aBFs1c_BFs1ll_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1s_BFu1i, aBFs1c_BFs1ll_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1s_BFu1ll, aBFs1c_BFs1ll_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFs1s_BFu1s, aBFs1c_BFs1ll_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1c, aBFs1c_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1c_BFs1c, aBFs1c_BFs1ll_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1c_BFs1i, aBFs1c_BFs1ll_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1c_BFs1ll, aBFs1c_BFs1ll_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1c_BFs1s, aBFs1c_BFs1ll_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1c_BFu1c, aBFs1c_BFs1ll_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1c_BFu1i, aBFs1c_BFs1ll_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1c_BFu1ll, aBFs1c_BFs1ll_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1c_BFu1s, aBFs1c_BFs1ll_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1i, aBFs1c_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1i_BFs1c, aBFs1c_BFs1ll_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1i_BFs1i, aBFs1c_BFs1ll_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1i_BFs1ll, aBFs1c_BFs1ll_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1i_BFs1s, aBFs1c_BFs1ll_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1i_BFu1c, aBFs1c_BFs1ll_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1i_BFu1i, aBFs1c_BFs1ll_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1i_BFu1ll, aBFs1c_BFs1ll_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1i_BFu1s, aBFs1c_BFs1ll_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1ll, aBFs1c_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1ll_BFs1c, aBFs1c_BFs1ll_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1ll_BFs1i, aBFs1c_BFs1ll_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1ll_BFs1ll, aBFs1c_BFs1ll_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1ll_BFs1s, aBFs1c_BFs1ll_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1ll_BFu1c, aBFs1c_BFs1ll_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1ll_BFu1i, aBFs1c_BFs1ll_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1ll_BFu1ll, aBFs1c_BFs1ll_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1ll_BFu1s, aBFs1c_BFs1ll_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1s, aBFs1c_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1s_BFs1c, aBFs1c_BFs1ll_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1s_BFs1i, aBFs1c_BFs1ll_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1s_BFs1ll, aBFs1c_BFs1ll_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1s_BFs1s, aBFs1c_BFs1ll_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1s_BFu1c, aBFs1c_BFs1ll_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1s_BFu1i, aBFs1c_BFs1ll_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1s_BFu1ll, aBFs1c_BFs1ll_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1ll_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1ll_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1ll_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1ll_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1ll_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1ll_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1ll_BFu1s_BFu1s, aBFs1c_BFs1ll_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s, aBFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1c, aBFs1c_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1c_BFs1c, aBFs1c_BFs1s_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1c_BFs1i, aBFs1c_BFs1s_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1c_BFs1ll, aBFs1c_BFs1s_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1c_BFs1s, aBFs1c_BFs1s_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1c_BFu1c, aBFs1c_BFs1s_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1c_BFu1i, aBFs1c_BFs1s_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1c_BFu1ll, aBFs1c_BFs1s_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1c_BFu1s, aBFs1c_BFs1s_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1i, aBFs1c_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1i_BFs1c, aBFs1c_BFs1s_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1i_BFs1i, aBFs1c_BFs1s_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1i_BFs1ll, aBFs1c_BFs1s_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1i_BFs1s, aBFs1c_BFs1s_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1i_BFu1c, aBFs1c_BFs1s_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1i_BFu1i, aBFs1c_BFs1s_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1i_BFu1ll, aBFs1c_BFs1s_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1i_BFu1s, aBFs1c_BFs1s_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1ll, aBFs1c_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1ll_BFs1c, aBFs1c_BFs1s_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1ll_BFs1i, aBFs1c_BFs1s_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1ll_BFs1ll, aBFs1c_BFs1s_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1ll_BFs1s, aBFs1c_BFs1s_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1ll_BFu1c, aBFs1c_BFs1s_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1ll_BFu1i, aBFs1c_BFs1s_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1ll_BFu1ll, aBFs1c_BFs1s_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1ll_BFu1s, aBFs1c_BFs1s_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1s, aBFs1c_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1s_BFs1c, aBFs1c_BFs1s_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1s_BFs1i, aBFs1c_BFs1s_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1s_BFs1ll, aBFs1c_BFs1s_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1s_BFs1s, aBFs1c_BFs1s_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1s_BFu1c, aBFs1c_BFs1s_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1s_BFu1i, aBFs1c_BFs1s_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1s_BFu1ll, aBFs1c_BFs1s_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFs1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFs1s_BFu1s, aBFs1c_BFs1s_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1c, aBFs1c_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1c_BFs1c, aBFs1c_BFs1s_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1c_BFs1i, aBFs1c_BFs1s_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1c_BFs1ll, aBFs1c_BFs1s_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1c_BFs1s, aBFs1c_BFs1s_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1c_BFu1c, aBFs1c_BFs1s_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1c_BFu1i, aBFs1c_BFs1s_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1c_BFu1ll, aBFs1c_BFs1s_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1c_BFu1s, aBFs1c_BFs1s_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1i, aBFs1c_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1i_BFs1c, aBFs1c_BFs1s_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1i_BFs1i, aBFs1c_BFs1s_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1i_BFs1ll, aBFs1c_BFs1s_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1i_BFs1s, aBFs1c_BFs1s_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1i_BFu1c, aBFs1c_BFs1s_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1i_BFu1i, aBFs1c_BFs1s_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1i_BFu1ll, aBFs1c_BFs1s_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1i_BFu1s, aBFs1c_BFs1s_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1ll, aBFs1c_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1ll_BFs1c, aBFs1c_BFs1s_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1ll_BFs1i, aBFs1c_BFs1s_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1ll_BFs1ll, aBFs1c_BFs1s_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1ll_BFs1s, aBFs1c_BFs1s_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1ll_BFu1c, aBFs1c_BFs1s_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1ll_BFu1i, aBFs1c_BFs1s_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1ll_BFu1ll, aBFs1c_BFs1s_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1ll_BFu1s, aBFs1c_BFs1s_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1s, aBFs1c_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1s_BFs1c, aBFs1c_BFs1s_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1s_BFs1i, aBFs1c_BFs1s_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1s_BFs1ll, aBFs1c_BFs1s_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFs1s_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1s_BFs1s, aBFs1c_BFs1s_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1s_BFu1c, aBFs1c_BFs1s_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1s_BFu1i, aBFs1c_BFs1s_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1s_BFu1ll, aBFs1c_BFs1s_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFs1s_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFs1s_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFs1s_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFs1s_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFs1s_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFs1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1c_BFs1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFs1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFs1s_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFs1s_BFu1s_BFu1s, aBFs1c_BFs1s_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c, aBFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1c, aBFs1c_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1c_BFs1c, aBFs1c_BFu1c_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1c_BFs1i, aBFs1c_BFu1c_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1c_BFs1ll, aBFs1c_BFu1c_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1c_BFs1s, aBFs1c_BFu1c_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1c_BFu1c, aBFs1c_BFu1c_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1c_BFu1i, aBFs1c_BFu1c_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1c_BFu1ll, aBFs1c_BFu1c_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1c_BFu1s, aBFs1c_BFu1c_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1i, aBFs1c_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1i_BFs1c, aBFs1c_BFu1c_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1i_BFs1i, aBFs1c_BFu1c_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1i_BFs1ll, aBFs1c_BFu1c_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1i_BFs1s, aBFs1c_BFu1c_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1i_BFu1c, aBFs1c_BFu1c_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1i_BFu1i, aBFs1c_BFu1c_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1i_BFu1ll, aBFs1c_BFu1c_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1i_BFu1s, aBFs1c_BFu1c_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1ll, aBFs1c_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1ll_BFs1c, aBFs1c_BFu1c_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1ll_BFs1i, aBFs1c_BFu1c_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1ll_BFs1ll, aBFs1c_BFu1c_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1ll_BFs1s, aBFs1c_BFu1c_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1ll_BFu1c, aBFs1c_BFu1c_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1ll_BFu1i, aBFs1c_BFu1c_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1ll_BFu1ll, aBFs1c_BFu1c_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1ll_BFu1s, aBFs1c_BFu1c_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1s, aBFs1c_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1s_BFs1c, aBFs1c_BFu1c_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1s_BFs1i, aBFs1c_BFu1c_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1s_BFs1ll, aBFs1c_BFu1c_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1s_BFs1s, aBFs1c_BFu1c_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1s_BFu1c, aBFs1c_BFu1c_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1s_BFu1i, aBFs1c_BFu1c_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1s_BFu1ll, aBFs1c_BFu1c_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFs1s_BFu1s, aBFs1c_BFu1c_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1c, aBFs1c_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1c_BFs1c, aBFs1c_BFu1c_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1c_BFs1i, aBFs1c_BFu1c_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1c_BFs1ll, aBFs1c_BFu1c_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1c_BFs1s, aBFs1c_BFu1c_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1c_BFu1c, aBFs1c_BFu1c_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1c_BFu1i, aBFs1c_BFu1c_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1c_BFu1ll, aBFs1c_BFu1c_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1c_BFu1s, aBFs1c_BFu1c_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1i, aBFs1c_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1i_BFs1c, aBFs1c_BFu1c_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1i_BFs1i, aBFs1c_BFu1c_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1i_BFs1ll, aBFs1c_BFu1c_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1i_BFs1s, aBFs1c_BFu1c_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1i_BFu1c, aBFs1c_BFu1c_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1i_BFu1i, aBFs1c_BFu1c_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1i_BFu1ll, aBFs1c_BFu1c_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1i_BFu1s, aBFs1c_BFu1c_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1ll, aBFs1c_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1ll_BFs1c, aBFs1c_BFu1c_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1ll_BFs1i, aBFs1c_BFu1c_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1ll_BFs1ll, aBFs1c_BFu1c_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1ll_BFs1s, aBFs1c_BFu1c_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1ll_BFu1c, aBFs1c_BFu1c_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1ll_BFu1i, aBFs1c_BFu1c_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1ll_BFu1ll, aBFs1c_BFu1c_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1ll_BFu1s, aBFs1c_BFu1c_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1s, aBFs1c_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1s_BFs1c, aBFs1c_BFu1c_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1s_BFs1i, aBFs1c_BFu1c_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1s_BFs1ll, aBFs1c_BFu1c_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1c_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1s_BFs1s, aBFs1c_BFu1c_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1s_BFu1c, aBFs1c_BFu1c_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1s_BFu1i, aBFs1c_BFu1c_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1s_BFu1ll, aBFs1c_BFu1c_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1c_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1c_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1c_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1c_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1c_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1c_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1c_BFu1s_BFu1s, aBFs1c_BFu1c_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i, aBFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1c, aBFs1c_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1c_BFs1c, aBFs1c_BFu1i_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1c_BFs1i, aBFs1c_BFu1i_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1c_BFs1ll, aBFs1c_BFu1i_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1c_BFs1s, aBFs1c_BFu1i_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1c_BFu1c, aBFs1c_BFu1i_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1c_BFu1i, aBFs1c_BFu1i_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1c_BFu1ll, aBFs1c_BFu1i_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1c_BFu1s, aBFs1c_BFu1i_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1i, aBFs1c_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1i_BFs1c, aBFs1c_BFu1i_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1i_BFs1i, aBFs1c_BFu1i_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1i_BFs1ll, aBFs1c_BFu1i_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1i_BFs1s, aBFs1c_BFu1i_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1i_BFu1c, aBFs1c_BFu1i_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1i_BFu1i, aBFs1c_BFu1i_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1i_BFu1ll, aBFs1c_BFu1i_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1i_BFu1s, aBFs1c_BFu1i_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1ll, aBFs1c_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1ll_BFs1c, aBFs1c_BFu1i_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1ll_BFs1i, aBFs1c_BFu1i_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1ll_BFs1ll, aBFs1c_BFu1i_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1ll_BFs1s, aBFs1c_BFu1i_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1ll_BFu1c, aBFs1c_BFu1i_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1ll_BFu1i, aBFs1c_BFu1i_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1ll_BFu1ll, aBFs1c_BFu1i_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1ll_BFu1s, aBFs1c_BFu1i_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1s, aBFs1c_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1s_BFs1c, aBFs1c_BFu1i_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1s_BFs1i, aBFs1c_BFu1i_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1s_BFs1ll, aBFs1c_BFu1i_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1s_BFs1s, aBFs1c_BFu1i_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1s_BFu1c, aBFs1c_BFu1i_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1s_BFu1i, aBFs1c_BFu1i_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1s_BFu1ll, aBFs1c_BFu1i_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFs1s_BFu1s, aBFs1c_BFu1i_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1c, aBFs1c_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1c_BFs1c, aBFs1c_BFu1i_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1c_BFs1i, aBFs1c_BFu1i_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1c_BFs1ll, aBFs1c_BFu1i_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1c_BFs1s, aBFs1c_BFu1i_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1c_BFu1c, aBFs1c_BFu1i_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1c_BFu1i, aBFs1c_BFu1i_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1c_BFu1ll, aBFs1c_BFu1i_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1c_BFu1s, aBFs1c_BFu1i_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1i, aBFs1c_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1i_BFs1c, aBFs1c_BFu1i_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1i_BFs1i, aBFs1c_BFu1i_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1i_BFs1ll, aBFs1c_BFu1i_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1i_BFs1s, aBFs1c_BFu1i_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1i_BFu1c, aBFs1c_BFu1i_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1i_BFu1i, aBFs1c_BFu1i_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1i_BFu1ll, aBFs1c_BFu1i_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1i_BFu1s, aBFs1c_BFu1i_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1ll, aBFs1c_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1ll_BFs1c, aBFs1c_BFu1i_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1ll_BFs1i, aBFs1c_BFu1i_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1ll_BFs1ll, aBFs1c_BFu1i_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1ll_BFs1s, aBFs1c_BFu1i_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1ll_BFu1c, aBFs1c_BFu1i_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1ll_BFu1i, aBFs1c_BFu1i_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1ll_BFu1ll, aBFs1c_BFu1i_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1ll_BFu1s, aBFs1c_BFu1i_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1s, aBFs1c_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1s_BFs1c, aBFs1c_BFu1i_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1s_BFs1i, aBFs1c_BFu1i_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1s_BFs1ll, aBFs1c_BFu1i_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1i_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1s_BFs1s, aBFs1c_BFu1i_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1s_BFu1c, aBFs1c_BFu1i_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1s_BFu1i, aBFs1c_BFu1i_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1s_BFu1ll, aBFs1c_BFu1i_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1i_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1i_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1i_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1i_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1i_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1i_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1i_BFu1s_BFu1s, aBFs1c_BFu1i_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll, aBFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1c, aBFs1c_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1c_BFs1c, aBFs1c_BFu1ll_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1c_BFs1i, aBFs1c_BFu1ll_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1c_BFs1ll, aBFs1c_BFu1ll_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1c_BFs1s, aBFs1c_BFu1ll_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1c_BFu1c, aBFs1c_BFu1ll_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1c_BFu1i, aBFs1c_BFu1ll_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1c_BFu1ll, aBFs1c_BFu1ll_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1c_BFu1s, aBFs1c_BFu1ll_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1i, aBFs1c_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1i_BFs1c, aBFs1c_BFu1ll_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1i_BFs1i, aBFs1c_BFu1ll_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1i_BFs1ll, aBFs1c_BFu1ll_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1i_BFs1s, aBFs1c_BFu1ll_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1i_BFu1c, aBFs1c_BFu1ll_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1i_BFu1i, aBFs1c_BFu1ll_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1i_BFu1ll, aBFs1c_BFu1ll_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1i_BFu1s, aBFs1c_BFu1ll_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1ll, aBFs1c_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1ll_BFs1c, aBFs1c_BFu1ll_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1ll_BFs1i, aBFs1c_BFu1ll_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1ll_BFs1ll, aBFs1c_BFu1ll_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1ll_BFs1s, aBFs1c_BFu1ll_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1ll_BFu1c, aBFs1c_BFu1ll_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1ll_BFu1i, aBFs1c_BFu1ll_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1ll_BFu1ll, aBFs1c_BFu1ll_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1ll_BFu1s, aBFs1c_BFu1ll_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1s, aBFs1c_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1s_BFs1c, aBFs1c_BFu1ll_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1s_BFs1i, aBFs1c_BFu1ll_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1s_BFs1ll, aBFs1c_BFu1ll_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1s_BFs1s, aBFs1c_BFu1ll_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1s_BFu1c, aBFs1c_BFu1ll_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1s_BFu1i, aBFs1c_BFu1ll_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1s_BFu1ll, aBFs1c_BFu1ll_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFs1s_BFu1s, aBFs1c_BFu1ll_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1c, aBFs1c_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1c_BFs1c, aBFs1c_BFu1ll_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1c_BFs1i, aBFs1c_BFu1ll_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1c_BFs1ll, aBFs1c_BFu1ll_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1c_BFs1s, aBFs1c_BFu1ll_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1c_BFu1c, aBFs1c_BFu1ll_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1c_BFu1i, aBFs1c_BFu1ll_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1c_BFu1ll, aBFs1c_BFu1ll_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1c_BFu1s, aBFs1c_BFu1ll_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1i, aBFs1c_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1i_BFs1c, aBFs1c_BFu1ll_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1i_BFs1i, aBFs1c_BFu1ll_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1i_BFs1ll, aBFs1c_BFu1ll_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1i_BFs1s, aBFs1c_BFu1ll_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1i_BFu1c, aBFs1c_BFu1ll_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1i_BFu1i, aBFs1c_BFu1ll_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1i_BFu1ll, aBFs1c_BFu1ll_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1i_BFu1s, aBFs1c_BFu1ll_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1ll, aBFs1c_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1ll_BFs1c, aBFs1c_BFu1ll_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1ll_BFs1i, aBFs1c_BFu1ll_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1ll_BFs1ll, aBFs1c_BFu1ll_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1ll_BFs1s, aBFs1c_BFu1ll_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1ll_BFu1c, aBFs1c_BFu1ll_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1ll_BFu1i, aBFs1c_BFu1ll_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1ll_BFu1ll, aBFs1c_BFu1ll_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1ll_BFu1s, aBFs1c_BFu1ll_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1s, aBFs1c_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1s_BFs1c, aBFs1c_BFu1ll_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1s_BFs1i, aBFs1c_BFu1ll_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1s_BFs1ll, aBFs1c_BFu1ll_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1s_BFs1s, aBFs1c_BFu1ll_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1s_BFu1c, aBFs1c_BFu1ll_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1s_BFu1i, aBFs1c_BFu1ll_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1s_BFu1ll, aBFs1c_BFu1ll_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1ll_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1ll_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1ll_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1ll_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1ll_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1ll_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1ll_BFu1s_BFu1s, aBFs1c_BFu1ll_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s, aBFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1c, aBFs1c_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1c_BFs1c, aBFs1c_BFu1s_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1c_BFs1i, aBFs1c_BFu1s_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1c_BFs1ll, aBFs1c_BFu1s_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1c_BFs1s, aBFs1c_BFu1s_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1c_BFu1c, aBFs1c_BFu1s_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1c_BFu1i, aBFs1c_BFu1s_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1c_BFu1ll, aBFs1c_BFu1s_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1c_BFu1s, aBFs1c_BFu1s_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1i, aBFs1c_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1i_BFs1c, aBFs1c_BFu1s_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1i_BFs1i, aBFs1c_BFu1s_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1i_BFs1ll, aBFs1c_BFu1s_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1i_BFs1s, aBFs1c_BFu1s_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1i_BFu1c, aBFs1c_BFu1s_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1i_BFu1i, aBFs1c_BFu1s_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1i_BFu1ll, aBFs1c_BFu1s_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1i_BFu1s, aBFs1c_BFu1s_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1ll, aBFs1c_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1ll_BFs1c, aBFs1c_BFu1s_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1ll_BFs1i, aBFs1c_BFu1s_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1ll_BFs1ll, aBFs1c_BFu1s_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1ll_BFs1s, aBFs1c_BFu1s_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1ll_BFu1c, aBFs1c_BFu1s_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1ll_BFu1i, aBFs1c_BFu1s_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1ll_BFu1ll, aBFs1c_BFu1s_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1ll_BFu1s, aBFs1c_BFu1s_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1s, aBFs1c_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1s_BFs1c, aBFs1c_BFu1s_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1s_BFs1i, aBFs1c_BFu1s_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1s_BFs1ll, aBFs1c_BFu1s_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1s_BFs1s, aBFs1c_BFu1s_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1s_BFu1c, aBFs1c_BFu1s_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1s_BFu1i, aBFs1c_BFu1s_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1s_BFu1ll, aBFs1c_BFu1s_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1c_BFu1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFs1s_BFu1s, aBFs1c_BFu1s_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1c, aBFs1c_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1c_BFs1c, aBFs1c_BFu1s_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1c_BFs1i, aBFs1c_BFu1s_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1c_BFs1ll, aBFs1c_BFu1s_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1c_BFs1s, aBFs1c_BFu1s_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1c_BFu1c, aBFs1c_BFu1s_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1c_BFu1i, aBFs1c_BFu1s_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1c_BFu1ll, aBFs1c_BFu1s_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1c_BFu1s, aBFs1c_BFu1s_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1i, aBFs1c_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1i_BFs1c, aBFs1c_BFu1s_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1i_BFs1i, aBFs1c_BFu1s_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1i_BFs1ll, aBFs1c_BFu1s_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1i_BFs1s, aBFs1c_BFu1s_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1i_BFu1c, aBFs1c_BFu1s_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1i_BFu1i, aBFs1c_BFu1s_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1i_BFu1ll, aBFs1c_BFu1s_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1i_BFu1s, aBFs1c_BFu1s_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1ll, aBFs1c_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1ll_BFs1c, aBFs1c_BFu1s_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1ll_BFs1i, aBFs1c_BFu1s_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1ll_BFs1ll, aBFs1c_BFu1s_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1ll_BFs1s, aBFs1c_BFu1s_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1ll_BFu1c, aBFs1c_BFu1s_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1ll_BFu1i, aBFs1c_BFu1s_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1ll_BFu1ll, aBFs1c_BFu1s_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1ll_BFu1s, aBFs1c_BFu1s_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1s, aBFs1c_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1s_BFs1c, aBFs1c_BFu1s_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1s_BFs1i, aBFs1c_BFu1s_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1s_BFs1ll, aBFs1c_BFu1s_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1c_BFu1s_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1s_BFs1s, aBFs1c_BFu1s_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1s_BFu1c, aBFs1c_BFu1s_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1s_BFu1i, aBFs1c_BFu1s_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1s_BFu1ll, aBFs1c_BFu1s_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1c_BFu1s_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1c_BFu1s_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1c_BFu1s_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1c_BFu1s_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1c_BFu1s_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1c_BFu1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1c_BFu1s_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1c_BFu1s_BFu1s_BFu1s, aBFs1c_BFu1s_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c, aBFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1c, aBFs1i_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1c_BFs1c, aBFs1i_BFs1c_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1c_BFs1i, aBFs1i_BFs1c_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1c_BFs1ll, aBFs1i_BFs1c_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1c_BFs1s, aBFs1i_BFs1c_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1c_BFu1c, aBFs1i_BFs1c_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1c_BFu1i, aBFs1i_BFs1c_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1c_BFu1ll, aBFs1i_BFs1c_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1c_BFu1s, aBFs1i_BFs1c_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1i, aBFs1i_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1i_BFs1c, aBFs1i_BFs1c_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1i_BFs1i, aBFs1i_BFs1c_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1i_BFs1ll, aBFs1i_BFs1c_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1i_BFs1s, aBFs1i_BFs1c_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1i_BFu1c, aBFs1i_BFs1c_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1i_BFu1i, aBFs1i_BFs1c_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1i_BFu1ll, aBFs1i_BFs1c_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1i_BFu1s, aBFs1i_BFs1c_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1ll, aBFs1i_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1ll_BFs1c, aBFs1i_BFs1c_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1ll_BFs1i, aBFs1i_BFs1c_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1ll_BFs1ll, aBFs1i_BFs1c_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1ll_BFs1s, aBFs1i_BFs1c_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1ll_BFu1c, aBFs1i_BFs1c_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1ll_BFu1i, aBFs1i_BFs1c_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1ll_BFu1ll, aBFs1i_BFs1c_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1ll_BFu1s, aBFs1i_BFs1c_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1s, aBFs1i_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1s_BFs1c, aBFs1i_BFs1c_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1s_BFs1i, aBFs1i_BFs1c_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1s_BFs1ll, aBFs1i_BFs1c_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1s_BFs1s, aBFs1i_BFs1c_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1s_BFu1c, aBFs1i_BFs1c_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1s_BFu1i, aBFs1i_BFs1c_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1s_BFu1ll, aBFs1i_BFs1c_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFs1s_BFu1s, aBFs1i_BFs1c_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1c, aBFs1i_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1c_BFs1c, aBFs1i_BFs1c_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1c_BFs1i, aBFs1i_BFs1c_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1c_BFs1ll, aBFs1i_BFs1c_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1c_BFs1s, aBFs1i_BFs1c_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1c_BFu1c, aBFs1i_BFs1c_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1c_BFu1i, aBFs1i_BFs1c_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1c_BFu1ll, aBFs1i_BFs1c_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1c_BFu1s, aBFs1i_BFs1c_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1i, aBFs1i_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1i_BFs1c, aBFs1i_BFs1c_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1i_BFs1i, aBFs1i_BFs1c_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1i_BFs1ll, aBFs1i_BFs1c_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1i_BFs1s, aBFs1i_BFs1c_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1i_BFu1c, aBFs1i_BFs1c_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1i_BFu1i, aBFs1i_BFs1c_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1i_BFu1ll, aBFs1i_BFs1c_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1i_BFu1s, aBFs1i_BFs1c_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1ll, aBFs1i_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1ll_BFs1c, aBFs1i_BFs1c_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1ll_BFs1i, aBFs1i_BFs1c_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1ll_BFs1ll, aBFs1i_BFs1c_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1ll_BFs1s, aBFs1i_BFs1c_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1ll_BFu1c, aBFs1i_BFs1c_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1ll_BFu1i, aBFs1i_BFs1c_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1ll_BFu1ll, aBFs1i_BFs1c_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1ll_BFu1s, aBFs1i_BFs1c_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1s, aBFs1i_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1s_BFs1c, aBFs1i_BFs1c_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1s_BFs1i, aBFs1i_BFs1c_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1s_BFs1ll, aBFs1i_BFs1c_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1c_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1s_BFs1s, aBFs1i_BFs1c_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1s_BFu1c, aBFs1i_BFs1c_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1s_BFu1i, aBFs1i_BFs1c_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1s_BFu1ll, aBFs1i_BFs1c_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1c_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1c_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1c_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1c_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1c_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1c_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1c_BFu1s_BFu1s, aBFs1i_BFs1c_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i, aBFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1c, aBFs1i_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1c_BFs1c, aBFs1i_BFs1i_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1c_BFs1i, aBFs1i_BFs1i_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1c_BFs1ll, aBFs1i_BFs1i_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1c_BFs1s, aBFs1i_BFs1i_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1c_BFu1c, aBFs1i_BFs1i_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1c_BFu1i, aBFs1i_BFs1i_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1c_BFu1ll, aBFs1i_BFs1i_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1c_BFu1s, aBFs1i_BFs1i_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1i, aBFs1i_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1i_BFs1c, aBFs1i_BFs1i_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1i_BFs1i, aBFs1i_BFs1i_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1i_BFs1ll, aBFs1i_BFs1i_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1i_BFs1s, aBFs1i_BFs1i_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1i_BFu1c, aBFs1i_BFs1i_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1i_BFu1i, aBFs1i_BFs1i_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1i_BFu1ll, aBFs1i_BFs1i_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1i_BFu1s, aBFs1i_BFs1i_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1ll, aBFs1i_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1ll_BFs1c, aBFs1i_BFs1i_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1ll_BFs1i, aBFs1i_BFs1i_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1ll_BFs1ll, aBFs1i_BFs1i_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1ll_BFs1s, aBFs1i_BFs1i_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1ll_BFu1c, aBFs1i_BFs1i_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1ll_BFu1i, aBFs1i_BFs1i_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1ll_BFu1ll, aBFs1i_BFs1i_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1ll_BFu1s, aBFs1i_BFs1i_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1s, aBFs1i_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1s_BFs1c, aBFs1i_BFs1i_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1s_BFs1i, aBFs1i_BFs1i_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1s_BFs1ll, aBFs1i_BFs1i_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1s_BFs1s, aBFs1i_BFs1i_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1s_BFu1c, aBFs1i_BFs1i_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1s_BFu1i, aBFs1i_BFs1i_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1s_BFu1ll, aBFs1i_BFs1i_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFs1s_BFu1s, aBFs1i_BFs1i_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1c, aBFs1i_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1c_BFs1c, aBFs1i_BFs1i_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1c_BFs1i, aBFs1i_BFs1i_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1c_BFs1ll, aBFs1i_BFs1i_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1c_BFs1s, aBFs1i_BFs1i_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1c_BFu1c, aBFs1i_BFs1i_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1c_BFu1i, aBFs1i_BFs1i_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1c_BFu1ll, aBFs1i_BFs1i_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1c_BFu1s, aBFs1i_BFs1i_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1i, aBFs1i_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1i_BFs1c, aBFs1i_BFs1i_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1i_BFs1i, aBFs1i_BFs1i_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1i_BFs1ll, aBFs1i_BFs1i_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1i_BFs1s, aBFs1i_BFs1i_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1i_BFu1c, aBFs1i_BFs1i_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1i_BFu1i, aBFs1i_BFs1i_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1i_BFu1ll, aBFs1i_BFs1i_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1i_BFu1s, aBFs1i_BFs1i_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1ll, aBFs1i_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1ll_BFs1c, aBFs1i_BFs1i_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1ll_BFs1i, aBFs1i_BFs1i_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1ll_BFs1ll, aBFs1i_BFs1i_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1ll_BFs1s, aBFs1i_BFs1i_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1ll_BFu1c, aBFs1i_BFs1i_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1ll_BFu1i, aBFs1i_BFs1i_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1ll_BFu1ll, aBFs1i_BFs1i_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1ll_BFu1s, aBFs1i_BFs1i_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1s, aBFs1i_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1s_BFs1c, aBFs1i_BFs1i_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1s_BFs1i, aBFs1i_BFs1i_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1s_BFs1ll, aBFs1i_BFs1i_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1i_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1s_BFs1s, aBFs1i_BFs1i_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1s_BFu1c, aBFs1i_BFs1i_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1s_BFu1i, aBFs1i_BFs1i_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1s_BFu1ll, aBFs1i_BFs1i_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1i_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1i_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1i_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1i_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1i_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1i_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1i_BFu1s_BFu1s, aBFs1i_BFs1i_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll, aBFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1c, aBFs1i_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1c_BFs1c, aBFs1i_BFs1ll_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1c_BFs1i, aBFs1i_BFs1ll_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1c_BFs1ll, aBFs1i_BFs1ll_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1c_BFs1s, aBFs1i_BFs1ll_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1c_BFu1c, aBFs1i_BFs1ll_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1c_BFu1i, aBFs1i_BFs1ll_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1c_BFu1ll, aBFs1i_BFs1ll_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1c_BFu1s, aBFs1i_BFs1ll_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1i, aBFs1i_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1i_BFs1c, aBFs1i_BFs1ll_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1i_BFs1i, aBFs1i_BFs1ll_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1i_BFs1ll, aBFs1i_BFs1ll_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1i_BFs1s, aBFs1i_BFs1ll_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1i_BFu1c, aBFs1i_BFs1ll_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1i_BFu1i, aBFs1i_BFs1ll_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1i_BFu1ll, aBFs1i_BFs1ll_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1i_BFu1s, aBFs1i_BFs1ll_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1ll, aBFs1i_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1ll_BFs1c, aBFs1i_BFs1ll_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1ll_BFs1i, aBFs1i_BFs1ll_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1ll_BFs1ll, aBFs1i_BFs1ll_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1ll_BFs1s, aBFs1i_BFs1ll_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1ll_BFu1c, aBFs1i_BFs1ll_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1ll_BFu1i, aBFs1i_BFs1ll_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1ll_BFu1ll, aBFs1i_BFs1ll_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1ll_BFu1s, aBFs1i_BFs1ll_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1s, aBFs1i_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1s_BFs1c, aBFs1i_BFs1ll_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1s_BFs1i, aBFs1i_BFs1ll_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1s_BFs1ll, aBFs1i_BFs1ll_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1s_BFs1s, aBFs1i_BFs1ll_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1s_BFu1c, aBFs1i_BFs1ll_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1s_BFu1i, aBFs1i_BFs1ll_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1s_BFu1ll, aBFs1i_BFs1ll_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFs1s_BFu1s, aBFs1i_BFs1ll_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1c, aBFs1i_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1c_BFs1c, aBFs1i_BFs1ll_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1c_BFs1i, aBFs1i_BFs1ll_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1c_BFs1ll, aBFs1i_BFs1ll_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1c_BFs1s, aBFs1i_BFs1ll_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1c_BFu1c, aBFs1i_BFs1ll_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1c_BFu1i, aBFs1i_BFs1ll_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1c_BFu1ll, aBFs1i_BFs1ll_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1c_BFu1s, aBFs1i_BFs1ll_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1i, aBFs1i_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1i_BFs1c, aBFs1i_BFs1ll_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1i_BFs1i, aBFs1i_BFs1ll_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1i_BFs1ll, aBFs1i_BFs1ll_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1i_BFs1s, aBFs1i_BFs1ll_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1i_BFu1c, aBFs1i_BFs1ll_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1i_BFu1i, aBFs1i_BFs1ll_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1i_BFu1ll, aBFs1i_BFs1ll_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1i_BFu1s, aBFs1i_BFs1ll_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1ll, aBFs1i_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1ll_BFs1c, aBFs1i_BFs1ll_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1ll_BFs1i, aBFs1i_BFs1ll_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1ll_BFs1ll, aBFs1i_BFs1ll_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1ll_BFs1s, aBFs1i_BFs1ll_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1ll_BFu1c, aBFs1i_BFs1ll_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1ll_BFu1i, aBFs1i_BFs1ll_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1ll_BFu1ll, aBFs1i_BFs1ll_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1ll_BFu1s, aBFs1i_BFs1ll_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1s, aBFs1i_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1s_BFs1c, aBFs1i_BFs1ll_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1s_BFs1i, aBFs1i_BFs1ll_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1s_BFs1ll, aBFs1i_BFs1ll_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1s_BFs1s, aBFs1i_BFs1ll_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1s_BFu1c, aBFs1i_BFs1ll_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1s_BFu1i, aBFs1i_BFs1ll_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1s_BFu1ll, aBFs1i_BFs1ll_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1ll_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1ll_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1ll_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1ll_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1ll_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1ll_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1ll_BFu1s_BFu1s, aBFs1i_BFs1ll_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s, aBFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1c, aBFs1i_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1c_BFs1c, aBFs1i_BFs1s_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1c_BFs1i, aBFs1i_BFs1s_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1c_BFs1ll, aBFs1i_BFs1s_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1c_BFs1s, aBFs1i_BFs1s_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1c_BFu1c, aBFs1i_BFs1s_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1c_BFu1i, aBFs1i_BFs1s_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1c_BFu1ll, aBFs1i_BFs1s_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1c_BFu1s, aBFs1i_BFs1s_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1i, aBFs1i_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1i_BFs1c, aBFs1i_BFs1s_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1i_BFs1i, aBFs1i_BFs1s_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1i_BFs1ll, aBFs1i_BFs1s_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1i_BFs1s, aBFs1i_BFs1s_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1i_BFu1c, aBFs1i_BFs1s_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1i_BFu1i, aBFs1i_BFs1s_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1i_BFu1ll, aBFs1i_BFs1s_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1i_BFu1s, aBFs1i_BFs1s_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1ll, aBFs1i_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1ll_BFs1c, aBFs1i_BFs1s_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1ll_BFs1i, aBFs1i_BFs1s_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1ll_BFs1ll, aBFs1i_BFs1s_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1ll_BFs1s, aBFs1i_BFs1s_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1ll_BFu1c, aBFs1i_BFs1s_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1ll_BFu1i, aBFs1i_BFs1s_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1ll_BFu1ll, aBFs1i_BFs1s_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1ll_BFu1s, aBFs1i_BFs1s_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1s, aBFs1i_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1s_BFs1c, aBFs1i_BFs1s_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1s_BFs1i, aBFs1i_BFs1s_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1s_BFs1ll, aBFs1i_BFs1s_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1s_BFs1s, aBFs1i_BFs1s_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1s_BFu1c, aBFs1i_BFs1s_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1s_BFu1i, aBFs1i_BFs1s_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1s_BFu1ll, aBFs1i_BFs1s_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFs1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFs1s_BFu1s, aBFs1i_BFs1s_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1c, aBFs1i_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1c_BFs1c, aBFs1i_BFs1s_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1c_BFs1i, aBFs1i_BFs1s_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1c_BFs1ll, aBFs1i_BFs1s_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1c_BFs1s, aBFs1i_BFs1s_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1c_BFu1c, aBFs1i_BFs1s_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1c_BFu1i, aBFs1i_BFs1s_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1c_BFu1ll, aBFs1i_BFs1s_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1c_BFu1s, aBFs1i_BFs1s_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1i, aBFs1i_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1i_BFs1c, aBFs1i_BFs1s_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1i_BFs1i, aBFs1i_BFs1s_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1i_BFs1ll, aBFs1i_BFs1s_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1i_BFs1s, aBFs1i_BFs1s_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1i_BFu1c, aBFs1i_BFs1s_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1i_BFu1i, aBFs1i_BFs1s_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1i_BFu1ll, aBFs1i_BFs1s_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1i_BFu1s, aBFs1i_BFs1s_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1ll, aBFs1i_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1ll_BFs1c, aBFs1i_BFs1s_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1ll_BFs1i, aBFs1i_BFs1s_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1ll_BFs1ll, aBFs1i_BFs1s_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1ll_BFs1s, aBFs1i_BFs1s_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1ll_BFu1c, aBFs1i_BFs1s_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1ll_BFu1i, aBFs1i_BFs1s_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1ll_BFu1ll, aBFs1i_BFs1s_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1ll_BFu1s, aBFs1i_BFs1s_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1s, aBFs1i_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1s_BFs1c, aBFs1i_BFs1s_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1s_BFs1i, aBFs1i_BFs1s_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1s_BFs1ll, aBFs1i_BFs1s_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFs1s_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1s_BFs1s, aBFs1i_BFs1s_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1s_BFu1c, aBFs1i_BFs1s_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1s_BFu1i, aBFs1i_BFs1s_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1s_BFu1ll, aBFs1i_BFs1s_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFs1s_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFs1s_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFs1s_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFs1s_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFs1s_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFs1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1i_BFs1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFs1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFs1s_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFs1s_BFu1s_BFu1s, aBFs1i_BFs1s_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c, aBFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1c, aBFs1i_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1c_BFs1c, aBFs1i_BFu1c_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1c_BFs1i, aBFs1i_BFu1c_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1c_BFs1ll, aBFs1i_BFu1c_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1c_BFs1s, aBFs1i_BFu1c_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1c_BFu1c, aBFs1i_BFu1c_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1c_BFu1i, aBFs1i_BFu1c_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1c_BFu1ll, aBFs1i_BFu1c_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1c_BFu1s, aBFs1i_BFu1c_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1i, aBFs1i_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1i_BFs1c, aBFs1i_BFu1c_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1i_BFs1i, aBFs1i_BFu1c_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1i_BFs1ll, aBFs1i_BFu1c_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1i_BFs1s, aBFs1i_BFu1c_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1i_BFu1c, aBFs1i_BFu1c_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1i_BFu1i, aBFs1i_BFu1c_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1i_BFu1ll, aBFs1i_BFu1c_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1i_BFu1s, aBFs1i_BFu1c_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1ll, aBFs1i_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1ll_BFs1c, aBFs1i_BFu1c_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1ll_BFs1i, aBFs1i_BFu1c_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1ll_BFs1ll, aBFs1i_BFu1c_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1ll_BFs1s, aBFs1i_BFu1c_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1ll_BFu1c, aBFs1i_BFu1c_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1ll_BFu1i, aBFs1i_BFu1c_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1ll_BFu1ll, aBFs1i_BFu1c_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1ll_BFu1s, aBFs1i_BFu1c_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1s, aBFs1i_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1s_BFs1c, aBFs1i_BFu1c_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1s_BFs1i, aBFs1i_BFu1c_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1s_BFs1ll, aBFs1i_BFu1c_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1s_BFs1s, aBFs1i_BFu1c_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1s_BFu1c, aBFs1i_BFu1c_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1s_BFu1i, aBFs1i_BFu1c_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1s_BFu1ll, aBFs1i_BFu1c_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFs1s_BFu1s, aBFs1i_BFu1c_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1c, aBFs1i_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1c_BFs1c, aBFs1i_BFu1c_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1c_BFs1i, aBFs1i_BFu1c_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1c_BFs1ll, aBFs1i_BFu1c_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1c_BFs1s, aBFs1i_BFu1c_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1c_BFu1c, aBFs1i_BFu1c_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1c_BFu1i, aBFs1i_BFu1c_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1c_BFu1ll, aBFs1i_BFu1c_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1c_BFu1s, aBFs1i_BFu1c_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1i, aBFs1i_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1i_BFs1c, aBFs1i_BFu1c_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1i_BFs1i, aBFs1i_BFu1c_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1i_BFs1ll, aBFs1i_BFu1c_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1i_BFs1s, aBFs1i_BFu1c_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1i_BFu1c, aBFs1i_BFu1c_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1i_BFu1i, aBFs1i_BFu1c_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1i_BFu1ll, aBFs1i_BFu1c_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1i_BFu1s, aBFs1i_BFu1c_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1ll, aBFs1i_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1ll_BFs1c, aBFs1i_BFu1c_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1ll_BFs1i, aBFs1i_BFu1c_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1ll_BFs1ll, aBFs1i_BFu1c_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1ll_BFs1s, aBFs1i_BFu1c_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1ll_BFu1c, aBFs1i_BFu1c_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1ll_BFu1i, aBFs1i_BFu1c_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1ll_BFu1ll, aBFs1i_BFu1c_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1ll_BFu1s, aBFs1i_BFu1c_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1s, aBFs1i_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1s_BFs1c, aBFs1i_BFu1c_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1s_BFs1i, aBFs1i_BFu1c_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1s_BFs1ll, aBFs1i_BFu1c_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1c_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1s_BFs1s, aBFs1i_BFu1c_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1s_BFu1c, aBFs1i_BFu1c_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1s_BFu1i, aBFs1i_BFu1c_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1s_BFu1ll, aBFs1i_BFu1c_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1c_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1c_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1c_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1c_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1c_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1c_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1c_BFu1s_BFu1s, aBFs1i_BFu1c_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i, aBFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1c, aBFs1i_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1c_BFs1c, aBFs1i_BFu1i_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1c_BFs1i, aBFs1i_BFu1i_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1c_BFs1ll, aBFs1i_BFu1i_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1c_BFs1s, aBFs1i_BFu1i_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1c_BFu1c, aBFs1i_BFu1i_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1c_BFu1i, aBFs1i_BFu1i_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1c_BFu1ll, aBFs1i_BFu1i_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1c_BFu1s, aBFs1i_BFu1i_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1i, aBFs1i_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1i_BFs1c, aBFs1i_BFu1i_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1i_BFs1i, aBFs1i_BFu1i_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1i_BFs1ll, aBFs1i_BFu1i_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1i_BFs1s, aBFs1i_BFu1i_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1i_BFu1c, aBFs1i_BFu1i_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1i_BFu1i, aBFs1i_BFu1i_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1i_BFu1ll, aBFs1i_BFu1i_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1i_BFu1s, aBFs1i_BFu1i_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1ll, aBFs1i_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1ll_BFs1c, aBFs1i_BFu1i_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1ll_BFs1i, aBFs1i_BFu1i_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1ll_BFs1ll, aBFs1i_BFu1i_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1ll_BFs1s, aBFs1i_BFu1i_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1ll_BFu1c, aBFs1i_BFu1i_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1ll_BFu1i, aBFs1i_BFu1i_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1ll_BFu1ll, aBFs1i_BFu1i_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1ll_BFu1s, aBFs1i_BFu1i_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1s, aBFs1i_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1s_BFs1c, aBFs1i_BFu1i_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1s_BFs1i, aBFs1i_BFu1i_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1s_BFs1ll, aBFs1i_BFu1i_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1s_BFs1s, aBFs1i_BFu1i_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1s_BFu1c, aBFs1i_BFu1i_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1s_BFu1i, aBFs1i_BFu1i_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1s_BFu1ll, aBFs1i_BFu1i_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFs1s_BFu1s, aBFs1i_BFu1i_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1c, aBFs1i_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1c_BFs1c, aBFs1i_BFu1i_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1c_BFs1i, aBFs1i_BFu1i_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1c_BFs1ll, aBFs1i_BFu1i_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1c_BFs1s, aBFs1i_BFu1i_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1c_BFu1c, aBFs1i_BFu1i_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1c_BFu1i, aBFs1i_BFu1i_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1c_BFu1ll, aBFs1i_BFu1i_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1c_BFu1s, aBFs1i_BFu1i_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1i, aBFs1i_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1i_BFs1c, aBFs1i_BFu1i_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1i_BFs1i, aBFs1i_BFu1i_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1i_BFs1ll, aBFs1i_BFu1i_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1i_BFs1s, aBFs1i_BFu1i_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1i_BFu1c, aBFs1i_BFu1i_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1i_BFu1i, aBFs1i_BFu1i_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1i_BFu1ll, aBFs1i_BFu1i_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1i_BFu1s, aBFs1i_BFu1i_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1ll, aBFs1i_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1ll_BFs1c, aBFs1i_BFu1i_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1ll_BFs1i, aBFs1i_BFu1i_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1ll_BFs1ll, aBFs1i_BFu1i_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1ll_BFs1s, aBFs1i_BFu1i_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1ll_BFu1c, aBFs1i_BFu1i_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1ll_BFu1i, aBFs1i_BFu1i_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1ll_BFu1ll, aBFs1i_BFu1i_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1ll_BFu1s, aBFs1i_BFu1i_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1s, aBFs1i_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1s_BFs1c, aBFs1i_BFu1i_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1s_BFs1i, aBFs1i_BFu1i_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1s_BFs1ll, aBFs1i_BFu1i_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1i_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1s_BFs1s, aBFs1i_BFu1i_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1s_BFu1c, aBFs1i_BFu1i_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1s_BFu1i, aBFs1i_BFu1i_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1s_BFu1ll, aBFs1i_BFu1i_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1i_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1i_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1i_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1i_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1i_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1i_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1i_BFu1s_BFu1s, aBFs1i_BFu1i_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll, aBFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1c, aBFs1i_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1c_BFs1c, aBFs1i_BFu1ll_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1c_BFs1i, aBFs1i_BFu1ll_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1c_BFs1ll, aBFs1i_BFu1ll_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1c_BFs1s, aBFs1i_BFu1ll_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1c_BFu1c, aBFs1i_BFu1ll_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1c_BFu1i, aBFs1i_BFu1ll_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1c_BFu1ll, aBFs1i_BFu1ll_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1c_BFu1s, aBFs1i_BFu1ll_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1i, aBFs1i_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1i_BFs1c, aBFs1i_BFu1ll_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1i_BFs1i, aBFs1i_BFu1ll_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1i_BFs1ll, aBFs1i_BFu1ll_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1i_BFs1s, aBFs1i_BFu1ll_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1i_BFu1c, aBFs1i_BFu1ll_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1i_BFu1i, aBFs1i_BFu1ll_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1i_BFu1ll, aBFs1i_BFu1ll_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1i_BFu1s, aBFs1i_BFu1ll_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1ll, aBFs1i_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1ll_BFs1c, aBFs1i_BFu1ll_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1ll_BFs1i, aBFs1i_BFu1ll_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1ll_BFs1ll, aBFs1i_BFu1ll_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1ll_BFs1s, aBFs1i_BFu1ll_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1ll_BFu1c, aBFs1i_BFu1ll_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1ll_BFu1i, aBFs1i_BFu1ll_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1ll_BFu1ll, aBFs1i_BFu1ll_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1ll_BFu1s, aBFs1i_BFu1ll_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1s, aBFs1i_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1s_BFs1c, aBFs1i_BFu1ll_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1s_BFs1i, aBFs1i_BFu1ll_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1s_BFs1ll, aBFs1i_BFu1ll_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1s_BFs1s, aBFs1i_BFu1ll_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1s_BFu1c, aBFs1i_BFu1ll_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1s_BFu1i, aBFs1i_BFu1ll_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1s_BFu1ll, aBFs1i_BFu1ll_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1ll_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFs1s_BFu1s, aBFs1i_BFu1ll_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1c, aBFs1i_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1c_BFs1c, aBFs1i_BFu1ll_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1c_BFs1i, aBFs1i_BFu1ll_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1c_BFs1ll, aBFs1i_BFu1ll_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1c_BFs1s, aBFs1i_BFu1ll_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1c_BFu1c, aBFs1i_BFu1ll_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1c_BFu1i, aBFs1i_BFu1ll_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1c_BFu1ll, aBFs1i_BFu1ll_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1c_BFu1s, aBFs1i_BFu1ll_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1i, aBFs1i_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1i_BFs1c, aBFs1i_BFu1ll_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1i_BFs1i, aBFs1i_BFu1ll_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1i_BFs1ll, aBFs1i_BFu1ll_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1i_BFs1s, aBFs1i_BFu1ll_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1i_BFu1c, aBFs1i_BFu1ll_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1i_BFu1i, aBFs1i_BFu1ll_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1i_BFu1ll, aBFs1i_BFu1ll_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1i_BFu1s, aBFs1i_BFu1ll_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1ll, aBFs1i_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1ll_BFs1c, aBFs1i_BFu1ll_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1ll_BFs1i, aBFs1i_BFu1ll_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1ll_BFs1ll, aBFs1i_BFu1ll_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1ll_BFs1s, aBFs1i_BFu1ll_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1ll_BFu1c, aBFs1i_BFu1ll_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1ll_BFu1i, aBFs1i_BFu1ll_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1ll_BFu1ll, aBFs1i_BFu1ll_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1ll_BFu1s, aBFs1i_BFu1ll_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1s, aBFs1i_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1s_BFs1c, aBFs1i_BFu1ll_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1s_BFs1i, aBFs1i_BFu1ll_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1s_BFs1ll, aBFs1i_BFu1ll_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1s_BFs1s, aBFs1i_BFu1ll_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1s_BFu1c, aBFs1i_BFu1ll_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1s_BFu1i, aBFs1i_BFu1ll_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1s_BFu1ll, aBFs1i_BFu1ll_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1ll_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1ll_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1ll_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1ll_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1ll_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1ll_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1ll_BFu1s_BFu1s, aBFs1i_BFu1ll_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s, aBFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1c, aBFs1i_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1c_BFs1c, aBFs1i_BFu1s_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1c_BFs1i, aBFs1i_BFu1s_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1c_BFs1ll, aBFs1i_BFu1s_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1c_BFs1s, aBFs1i_BFu1s_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1c_BFu1c, aBFs1i_BFu1s_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1c_BFu1i, aBFs1i_BFu1s_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1c_BFu1ll, aBFs1i_BFu1s_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1c_BFu1s, aBFs1i_BFu1s_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1i, aBFs1i_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1i_BFs1c, aBFs1i_BFu1s_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1i_BFs1i, aBFs1i_BFu1s_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1i_BFs1ll, aBFs1i_BFu1s_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1i_BFs1s, aBFs1i_BFu1s_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1i_BFu1c, aBFs1i_BFu1s_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1i_BFu1i, aBFs1i_BFu1s_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1i_BFu1ll, aBFs1i_BFu1s_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1i_BFu1s, aBFs1i_BFu1s_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1ll, aBFs1i_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1ll_BFs1c, aBFs1i_BFu1s_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1ll_BFs1i, aBFs1i_BFu1s_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1ll_BFs1ll, aBFs1i_BFu1s_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1ll_BFs1s, aBFs1i_BFu1s_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1ll_BFu1c, aBFs1i_BFu1s_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1ll_BFu1i, aBFs1i_BFu1s_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1ll_BFu1ll, aBFs1i_BFu1s_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1ll_BFu1s, aBFs1i_BFu1s_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1s, aBFs1i_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1s_BFs1c, aBFs1i_BFu1s_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1s_BFs1i, aBFs1i_BFu1s_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1s_BFs1ll, aBFs1i_BFu1s_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1s_BFs1s, aBFs1i_BFu1s_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1s_BFu1c, aBFs1i_BFu1s_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1s_BFu1i, aBFs1i_BFu1s_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1s_BFu1ll, aBFs1i_BFu1s_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1i_BFu1s_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFs1s_BFu1s, aBFs1i_BFu1s_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1c, aBFs1i_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1c_BFs1c, aBFs1i_BFu1s_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1c_BFs1i, aBFs1i_BFu1s_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1c_BFs1ll, aBFs1i_BFu1s_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1c_BFs1s, aBFs1i_BFu1s_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1c_BFu1c, aBFs1i_BFu1s_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1c_BFu1i, aBFs1i_BFu1s_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1c_BFu1ll, aBFs1i_BFu1s_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1c_BFu1s, aBFs1i_BFu1s_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1i, aBFs1i_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1i_BFs1c, aBFs1i_BFu1s_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1i_BFs1i, aBFs1i_BFu1s_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1i_BFs1ll, aBFs1i_BFu1s_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1i_BFs1s, aBFs1i_BFu1s_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1i_BFu1c, aBFs1i_BFu1s_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1i_BFu1i, aBFs1i_BFu1s_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1i_BFu1ll, aBFs1i_BFu1s_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1i_BFu1s, aBFs1i_BFu1s_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1ll, aBFs1i_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1ll_BFs1c, aBFs1i_BFu1s_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1ll_BFs1i, aBFs1i_BFu1s_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1ll_BFs1ll, aBFs1i_BFu1s_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1ll_BFs1s, aBFs1i_BFu1s_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1ll_BFu1c, aBFs1i_BFu1s_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1ll_BFu1i, aBFs1i_BFu1s_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1ll_BFu1ll, aBFs1i_BFu1s_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1ll_BFu1s, aBFs1i_BFu1s_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1s, aBFs1i_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1s_BFs1c, aBFs1i_BFu1s_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1s_BFs1i, aBFs1i_BFu1s_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1s_BFs1ll, aBFs1i_BFu1s_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1i_BFu1s_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1s_BFs1s, aBFs1i_BFu1s_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1s_BFu1c, aBFs1i_BFu1s_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1s_BFu1i, aBFs1i_BFu1s_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1s_BFu1ll, aBFs1i_BFu1s_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1i_BFu1s_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1i_BFu1s_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1i_BFu1s_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1i_BFu1s_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1i_BFu1s_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1i_BFu1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1i_BFu1s_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1i_BFu1s_BFu1s_BFu1s, aBFs1i_BFu1s_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c, aBFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1c, aBFs1ll_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1c_BFs1c, aBFs1ll_BFs1c_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1c_BFs1i, aBFs1ll_BFs1c_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1c_BFs1ll, aBFs1ll_BFs1c_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1c_BFs1s, aBFs1ll_BFs1c_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1c_BFu1c, aBFs1ll_BFs1c_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1c_BFu1i, aBFs1ll_BFs1c_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1c_BFu1ll, aBFs1ll_BFs1c_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1c_BFu1s, aBFs1ll_BFs1c_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1i, aBFs1ll_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1i_BFs1c, aBFs1ll_BFs1c_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1i_BFs1i, aBFs1ll_BFs1c_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1i_BFs1ll, aBFs1ll_BFs1c_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1i_BFs1s, aBFs1ll_BFs1c_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1i_BFu1c, aBFs1ll_BFs1c_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1i_BFu1i, aBFs1ll_BFs1c_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1i_BFu1ll, aBFs1ll_BFs1c_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1i_BFu1s, aBFs1ll_BFs1c_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1ll, aBFs1ll_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1ll_BFs1c, aBFs1ll_BFs1c_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1ll_BFs1i, aBFs1ll_BFs1c_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1ll_BFs1ll, aBFs1ll_BFs1c_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1ll_BFs1s, aBFs1ll_BFs1c_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1ll_BFu1c, aBFs1ll_BFs1c_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1ll_BFu1i, aBFs1ll_BFs1c_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1ll_BFu1ll, aBFs1ll_BFs1c_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1ll_BFu1s, aBFs1ll_BFs1c_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1s, aBFs1ll_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1s_BFs1c, aBFs1ll_BFs1c_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1s_BFs1i, aBFs1ll_BFs1c_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1s_BFs1ll, aBFs1ll_BFs1c_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1s_BFs1s, aBFs1ll_BFs1c_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1s_BFu1c, aBFs1ll_BFs1c_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1s_BFu1i, aBFs1ll_BFs1c_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1s_BFu1ll, aBFs1ll_BFs1c_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1c_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFs1s_BFu1s, aBFs1ll_BFs1c_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1c, aBFs1ll_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1c_BFs1c, aBFs1ll_BFs1c_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1c_BFs1i, aBFs1ll_BFs1c_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1c_BFs1ll, aBFs1ll_BFs1c_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1c_BFs1s, aBFs1ll_BFs1c_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1c_BFu1c, aBFs1ll_BFs1c_BFu1c_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1c_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1c_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1c_BFu1i, aBFs1ll_BFs1c_BFu1c_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1c_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1c_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1c_BFu1ll, aBFs1ll_BFs1c_BFu1c_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1c_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1c_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1c_BFu1s, aBFs1ll_BFs1c_BFu1c_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1i, aBFs1ll_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1i_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1i_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1i_BFs1c, aBFs1ll_BFs1c_BFu1i_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1i_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1i_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1i_BFs1i, aBFs1ll_BFs1c_BFu1i_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1i_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1i_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1i_BFs1ll, aBFs1ll_BFs1c_BFu1i_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1i_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1i_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1i_BFs1s, aBFs1ll_BFs1c_BFu1i_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1i_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1i_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1i_BFu1c, aBFs1ll_BFs1c_BFu1i_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1i_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1i_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1i_BFu1i, aBFs1ll_BFs1c_BFu1i_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1i_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1i_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1i_BFu1ll, aBFs1ll_BFs1c_BFu1i_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1i_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1i_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1i_BFu1s, aBFs1ll_BFs1c_BFu1i_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1ll, aBFs1ll_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1ll_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1ll_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1ll_BFs1c, aBFs1ll_BFs1c_BFu1ll_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1ll_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1ll_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1ll_BFs1i, aBFs1ll_BFs1c_BFu1ll_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1ll_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1ll_BFs1ll, aBFs1ll_BFs1c_BFu1ll_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1ll_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1ll_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1ll_BFs1s, aBFs1ll_BFs1c_BFu1ll_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1ll_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1ll_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1ll_BFu1c, aBFs1ll_BFs1c_BFu1ll_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1ll_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1ll_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1ll_BFu1i, aBFs1ll_BFs1c_BFu1ll_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1ll_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1ll_BFu1ll, aBFs1ll_BFs1c_BFu1ll_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1ll_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1ll_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1ll_BFu1s, aBFs1ll_BFs1c_BFu1ll_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1s, aBFs1ll_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1s_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1s_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1s_BFs1c, aBFs1ll_BFs1c_BFu1s_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1s_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1s_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1s_BFs1i, aBFs1ll_BFs1c_BFu1s_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1s_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1s_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1s_BFs1ll, aBFs1ll_BFs1c_BFu1s_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1s_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1s_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1s_BFs1s, aBFs1ll_BFs1c_BFu1s_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1s_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1s_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1s_BFu1c, aBFs1ll_BFs1c_BFu1s_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1s_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1s_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1s_BFu1i, aBFs1ll_BFs1c_BFu1s_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1s_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1s_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1s_BFu1ll, aBFs1ll_BFs1c_BFu1s_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1c_BFu1s_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1c_BFu1s_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1c_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1c_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1c_BFu1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1c_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1c_BFu1s_BFu1s, aBFs1ll_BFs1c_BFu1s_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i, aBFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1c, aBFs1ll_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1c_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1c_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1c_BFs1c, aBFs1ll_BFs1i_BFs1c_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1c_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1c_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1c_BFs1i, aBFs1ll_BFs1i_BFs1c_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1c_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1c_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1c_BFs1ll, aBFs1ll_BFs1i_BFs1c_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1c_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1c_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1c_BFs1s, aBFs1ll_BFs1i_BFs1c_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1c_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1c_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1c_BFu1c, aBFs1ll_BFs1i_BFs1c_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1c_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1c_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1c_BFu1i, aBFs1ll_BFs1i_BFs1c_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1c_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1c_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1c_BFu1ll, aBFs1ll_BFs1i_BFs1c_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1c_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1c_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1c_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1c_BFu1s, aBFs1ll_BFs1i_BFs1c_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1i, aBFs1ll_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1i_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1i_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1i_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1i_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1i_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1i_BFs1c, aBFs1ll_BFs1i_BFs1i_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1i_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1i_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1i_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1i_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1i_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1i_BFs1i, aBFs1ll_BFs1i_BFs1i_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1i_BFs1ll, aBFs1ll_BFs1i_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1i_BFs1s, aBFs1ll_BFs1i_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1i_BFu1c, aBFs1ll_BFs1i_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1i_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1i_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1i_BFu1i, aBFs1ll_BFs1i_BFs1i_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1i_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1i_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1i_BFu1ll, aBFs1ll_BFs1i_BFs1i_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1i_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1i_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1i_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1i_BFu1s, aBFs1ll_BFs1i_BFs1i_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1ll, aBFs1ll_BFs1i_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1ll_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1ll_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1ll_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1ll_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1ll_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1ll_BFs1c, aBFs1ll_BFs1i_BFs1ll_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1ll_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1ll_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1ll_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1ll_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1ll_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1ll_BFs1i, aBFs1ll_BFs1i_BFs1ll_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1ll_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1ll_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1ll_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1ll_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1ll_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1ll_BFs1ll, aBFs1ll_BFs1i_BFs1ll_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1ll_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1ll_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1ll_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1ll_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1ll_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1ll_BFs1s, aBFs1ll_BFs1i_BFs1ll_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1ll_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1ll_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1ll_BFu1c, aBFs1ll_BFs1i_BFs1ll_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1ll_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1ll_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1ll_BFu1i, aBFs1ll_BFs1i_BFs1ll_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1ll_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1ll_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1ll_BFu1ll, aBFs1ll_BFs1i_BFs1ll_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1ll_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1ll_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1ll_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1ll_BFu1s, aBFs1ll_BFs1i_BFs1ll_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1s, aBFs1ll_BFs1i_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1s_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1s_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1s_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1s_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1s_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1s_BFs1c, aBFs1ll_BFs1i_BFs1s_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1s_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1s_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1s_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1s_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1s_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1s_BFs1i, aBFs1ll_BFs1i_BFs1s_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1s_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1s_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1s_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1s_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1s_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1s_BFs1ll, aBFs1ll_BFs1i_BFs1s_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1s_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1s_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1s_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1s_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1s_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1s_BFs1s, aBFs1ll_BFs1i_BFs1s_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1s_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1s_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1s_BFu1c, aBFs1ll_BFs1i_BFs1s_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1s_BFu1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1s_BFu1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1i");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1s_BFu1i, aBFs1ll_BFs1i_BFs1s_BFu1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1s_BFu1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1s_BFu1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1s_BFu1ll, aBFs1ll_BFs1i_BFs1s_BFu1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFs1s_BFu1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFs1s_BFu1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFs1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFs1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFs1s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 2, 1, -1, "aBFs1ll_BFs1i_BFs1s_BFu1s");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFs1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFs1s_BFu1s, aBFs1ll_BFs1i_BFs1s_BFu1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFu1c, aBFs1ll_BFs1i_BFu1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFu1c_BFs1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFu1c_BFs1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFu1c_BFs1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFu1c_BFs1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFu1c_BFs1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1i_BFu1c_BFs1c");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFu1c_BFs1c, aBFs1ll_BFs1i_BFu1c_BFs1c)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFu1c_BFs1i()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFu1c_BFs1i");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFu1c_BFs1i lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFu1c_BFs1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFu1c_BFs1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1i_BFu1c_BFs1i");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFu1c_BFs1i, aBFs1ll_BFs1i_BFu1c_BFs1i)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFu1c_BFs1ll()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFu1c_BFs1ll");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFu1c_BFs1ll lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFu1c_BFs1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFu1c_BFs1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1i_BFu1c_BFs1ll");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFu1c_BFs1ll, aBFs1ll_BFs1i_BFu1c_BFs1ll)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFu1c_BFs1s()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFu1c_BFs1s");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFu1c_BFs1s lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFu1c_BFs1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFu1c_BFs1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1i_BFu1c_BFs1s");
    set_bf_and_test(lv, v4, 0, 3, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFs1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFu1c_BFs1s, aBFs1ll_BFs1i_BFu1c_BFs1s)
//============================================================================



static void Test_aBFs1ll_BFs1i_BFu1c_BFu1c()
{
  {
    init_simple_test("aBFs1ll_BFs1i_BFu1c_BFu1c");
    static STRUCT_IF_C aBFs1ll_BFs1i_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(aBFs1ll_BFs1i_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFs1ll_BFs1i_BFu1c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v2, 0, 1, 1, -1, "aBFs1ll_BFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 2, 1, 1, "aBFs1ll_BFs1i_BFu1c_BFu1c");
    set_bf_and_test(lv, v4, 0, 3, 1, 1, "aBFs1ll_BFs1i_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFs1ll_BFs1i_BFu1c_BFu1c, aBFs1ll_BFs1i_BFu1c_BFu1c)
//============================================================================

