// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: cxx_compiler cxx_rtti -c %s -I "common" -o %t2.o
// RUN: c_compiler -c %s -I "common" -o %t3.o
// RUN: linker -o %t2%exeext  %t1.o %t2.o %t3.o
// RUN: runtool %t2%exeext | checker "TEST PASSED"
#include "testsuite.h"
#ifdef __cplusplus
namespace bbbb { 
struct  ww0  {
};
//SIG(-1 _ZN4bbbb3ww0E) C1{}
}
namespace bbbb { 
}
static void Test__ZN4bbbb3ww0E()
{
  {
    init_simple_test("_ZN4bbbb3ww0E");
    ::bbbb::ww0 lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb3ww0E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb3ww0E)");
  }
}
static Arrange_To_Call_Me v_ZN4bbbb3ww0E(Test__ZN4bbbb3ww0E, "_ZN4bbbb3ww0E", 1);

#else // __cplusplus

Class_Descriptor cd__ZN4bbbb3ww0E = {  "_ZN4bbbb3ww0E", // class name
  0,0,//no base classes
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx00  : ::bbbb::ww0 {
};
//SIG(-1 _ZN4bbbb4xx00E) C1{ BC2{}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx00E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx00E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb4xx00E, buf);
    ::bbbb::xx00 &lv = *(new (buf) ::bbbb::xx00());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb4xx00E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb4xx00E)");
    check_base_class_offset(lv, (::bbbb::ww0*), 0, "_ZN4bbbb4xx00E");
    test_class_info(&lv, &cd__ZN4bbbb4xx00E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx00E(Test__ZN4bbbb4xx00E, "_ZN4bbbb4xx00E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
static Base_Class bases__ZN4bbbb4xx00E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx00E = {  "_ZN4bbbb4xx00E", // class name
  bases__ZN4bbbb4xx00E, 1,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy000  : ::bbbb::xx00 {
};
//SIG(-1 _ZN4bbbb5yy000E) C1{ BC2{ BC3{}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy000E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy000E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb5yy000E, buf);
    ::bbbb::yy000 &lv = *(new (buf) ::bbbb::yy000());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb5yy000E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb5yy000E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*), 0, "_ZN4bbbb5yy000E");
    check_base_class_offset(lv, (::bbbb::xx00*), 0, "_ZN4bbbb5yy000E");
    test_class_info(&lv, &cd__ZN4bbbb5yy000E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy000E(Test__ZN4bbbb5yy000E, "_ZN4bbbb5yy000E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
static Base_Class bases__ZN4bbbb5yy000E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy000E = {  "_ZN4bbbb5yy000E", // class name
  bases__ZN4bbbb5yy000E, 2,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0000  : ::bbbb::yy000 {
};
//SIG(1 _ZN4bbbb6zz0000E) C1{ BC2{ BC3{ BC4{}}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0000E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0000E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb6zz0000E, buf);
    ::bbbb::zz0000 &lv = *(new (buf) ::bbbb::zz0000());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb6zz0000E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz0000E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz0000E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz0000E");
    check_base_class_offset(lv, (::bbbb::yy000*), 0, "_ZN4bbbb6zz0000E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0000E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0000E(Test__ZN4bbbb6zz0000E, "_ZN4bbbb6zz0000E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy000E;
static Base_Class bases__ZN4bbbb6zz0000E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy000E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0000E = {  "_ZN4bbbb6zz0000E", // class name
  bases__ZN4bbbb6zz0000E, 3,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1000  : ::bbbb::yy000 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1000E) C1{ BC2{ BC3{ BC4{}}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1000E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1000E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb6zz1000E, buf);
    ::bbbb::zz1000 &lv = *(new (buf) ::bbbb::zz1000());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb6zz1000E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz1000E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz1000E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz1000E");
    check_base_class_offset(lv, (::bbbb::yy000*), 0, "_ZN4bbbb6zz1000E");
    check_field_offset(lv, fd, 0, "_ZN4bbbb6zz1000E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1000E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1000E(Test__ZN4bbbb6zz1000E, "_ZN4bbbb6zz1000E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy000E;
static Base_Class bases__ZN4bbbb6zz1000E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy000E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1000E = {  "_ZN4bbbb6zz1000E", // class name
  bases__ZN4bbbb6zz1000E, 3,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2000  : ::bbbb::yy000 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2000E) C1{ BC2{ BC3{ BC4{}}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2000E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2000E;
  void *lvp;
  {
    short buf[2];
    init_test(&cd__ZN4bbbb6zz2000E, buf);
    ::bbbb::zz2000 &lv = *(new (buf) ::bbbb::zz2000());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz2000E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2000E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz2000E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz2000E");
    check_base_class_offset(lv, (::bbbb::yy000*), 0, "_ZN4bbbb6zz2000E");
    check_field_offset(lv, fd, 0, "_ZN4bbbb6zz2000E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2000E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2000E(Test__ZN4bbbb6zz2000E, "_ZN4bbbb6zz2000E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy000E;
static Base_Class bases__ZN4bbbb6zz2000E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy000E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2000E = {  "_ZN4bbbb6zz2000E", // class name
  bases__ZN4bbbb6zz2000E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3000  : ::bbbb::yy000 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3000E) C1{ BC2{ BC3{ BC4{}}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3000E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3000E;
  void *lvp;
  {
    int buf[2];
    init_test(&cd__ZN4bbbb6zz3000E, buf);
    ::bbbb::zz3000 &lv = *(new (buf) ::bbbb::zz3000());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz3000E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3000E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz3000E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz3000E");
    check_base_class_offset(lv, (::bbbb::yy000*), 0, "_ZN4bbbb6zz3000E");
    check_field_offset(lv, fd, 0, "_ZN4bbbb6zz3000E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3000E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3000E(Test__ZN4bbbb6zz3000E, "_ZN4bbbb6zz3000E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy000E;
static Base_Class bases__ZN4bbbb6zz3000E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy000E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3000E = {  "_ZN4bbbb6zz3000E", // class name
  bases__ZN4bbbb6zz3000E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4000  : ::bbbb::yy000 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4000E) C1{ BC2{ BC3{ BC4{}}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4000E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4000E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(2,3)];
    init_test(&cd__ZN4bbbb6zz4000E, buf);
    ::bbbb::zz4000 &lv = *(new (buf) ::bbbb::zz4000());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz4000E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4000E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz4000E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy000*), 0, "_ZN4bbbb6zz4000E");
    check_base_class_offset(lv, (::bbbb::yy000*), 0, "_ZN4bbbb6zz4000E");
    check_field_offset(lv, fd, 0, "_ZN4bbbb6zz4000E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4000E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4000E(Test__ZN4bbbb6zz4000E, "_ZN4bbbb6zz4000E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy000E;
static Base_Class bases__ZN4bbbb6zz4000E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy000E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4000E = {  "_ZN4bbbb6zz4000E", // class name
  bases__ZN4bbbb6zz4000E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy100  : ::bbbb::xx00 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy100E) C1{ BC2{ BC3{}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy100E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy100E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb5yy100E, buf);
    ::bbbb::yy100 &lv = *(new (buf) ::bbbb::yy100());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb5yy100E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb5yy100E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*), 0, "_ZN4bbbb5yy100E");
    check_base_class_offset(lv, (::bbbb::xx00*), 0, "_ZN4bbbb5yy100E");
    check_field_offset(lv, fc, 0, "_ZN4bbbb5yy100E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy100E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy100E(Test__ZN4bbbb5yy100E, "_ZN4bbbb5yy100E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
static Base_Class bases__ZN4bbbb5yy100E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy100E = {  "_ZN4bbbb5yy100E", // class name
  bases__ZN4bbbb5yy100E, 2,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0100  : ::bbbb::yy100 {
};
//SIG(1 _ZN4bbbb6zz0100E) C1{ BC2{ BC3{ BC4{}} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0100E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0100E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb6zz0100E, buf);
    ::bbbb::zz0100 &lv = *(new (buf) ::bbbb::zz0100());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb6zz0100E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz0100E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz0100E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz0100E");
    check_base_class_offset(lv, (::bbbb::yy100*), 0, "_ZN4bbbb6zz0100E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0100E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0100E(Test__ZN4bbbb6zz0100E, "_ZN4bbbb6zz0100E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy100E;
static Base_Class bases__ZN4bbbb6zz0100E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy100E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0100E = {  "_ZN4bbbb6zz0100E", // class name
  bases__ZN4bbbb6zz0100E, 3,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1100  : ::bbbb::yy100 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1100E) C1{ BC2{ BC3{ BC4{}} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1100E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1100E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb6zz1100E, buf);
    ::bbbb::zz1100 &lv = *(new (buf) ::bbbb::zz1100());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz1100E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz1100E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz1100E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz1100E");
    check_base_class_offset(lv, (::bbbb::yy100*), 0, "_ZN4bbbb6zz1100E");
    check_field_offset(lv, fd, 1, "_ZN4bbbb6zz1100E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1100E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1100E(Test__ZN4bbbb6zz1100E, "_ZN4bbbb6zz1100E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy100E;
static Base_Class bases__ZN4bbbb6zz1100E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy100E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1100E = {  "_ZN4bbbb6zz1100E", // class name
  bases__ZN4bbbb6zz1100E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2100  : ::bbbb::yy100 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2100E) C1{ BC2{ BC3{ BC4{}} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2100E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2100E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz2100E, buf);
    ::bbbb::zz2100 &lv = *(new (buf) ::bbbb::zz2100());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz2100E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2100E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz2100E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz2100E");
    check_base_class_offset(lv, (::bbbb::yy100*), 0, "_ZN4bbbb6zz2100E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz2100E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2100E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2100E(Test__ZN4bbbb6zz2100E, "_ZN4bbbb6zz2100E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy100E;
static Base_Class bases__ZN4bbbb6zz2100E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy100E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2100E = {  "_ZN4bbbb6zz2100E", // class name
  bases__ZN4bbbb6zz2100E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3100  : ::bbbb::yy100 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3100E) C1{ BC2{ BC3{ BC4{}} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3100E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3100E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3100E, buf);
    ::bbbb::zz3100 &lv = *(new (buf) ::bbbb::zz3100());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3100E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3100E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz3100E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz3100E");
    check_base_class_offset(lv, (::bbbb::yy100*), 0, "_ZN4bbbb6zz3100E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3100E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3100E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3100E(Test__ZN4bbbb6zz3100E, "_ZN4bbbb6zz3100E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy100E;
static Base_Class bases__ZN4bbbb6zz3100E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy100E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3100E = {  "_ZN4bbbb6zz3100E", // class name
  bases__ZN4bbbb6zz3100E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4100  : ::bbbb::yy100 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4100E) C1{ BC2{ BC3{ BC4{}} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4100E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4100E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4100E, buf);
    ::bbbb::zz4100 &lv = *(new (buf) ::bbbb::zz4100());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4100E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4100E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz4100E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy100*), 0, "_ZN4bbbb6zz4100E");
    check_base_class_offset(lv, (::bbbb::yy100*), 0, "_ZN4bbbb6zz4100E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4100E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4100E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4100E(Test__ZN4bbbb6zz4100E, "_ZN4bbbb6zz4100E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy100E;
static Base_Class bases__ZN4bbbb6zz4100E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy100E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4100E = {  "_ZN4bbbb6zz4100E", // class name
  bases__ZN4bbbb6zz4100E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy200  : ::bbbb::xx00 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy200E) C1{ BC2{ BC3{}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy200E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy200E;
  void *lvp;
  {
    short buf[2];
    init_test(&cd__ZN4bbbb5yy200E, buf);
    ::bbbb::yy200 &lv = *(new (buf) ::bbbb::yy200());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb5yy200E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy200E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*), 0, "_ZN4bbbb5yy200E");
    check_base_class_offset(lv, (::bbbb::xx00*), 0, "_ZN4bbbb5yy200E");
    check_field_offset(lv, fc, 0, "_ZN4bbbb5yy200E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy200E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy200E(Test__ZN4bbbb5yy200E, "_ZN4bbbb5yy200E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
static Base_Class bases__ZN4bbbb5yy200E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy200E = {  "_ZN4bbbb5yy200E", // class name
  bases__ZN4bbbb5yy200E, 2,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0200  : ::bbbb::yy200 {
};
//SIG(1 _ZN4bbbb6zz0200E) C1{ BC2{ BC3{ BC4{}} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0200E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0200E;
  void *lvp;
  {
    short buf[2];
    init_test(&cd__ZN4bbbb6zz0200E, buf);
    ::bbbb::zz0200 &lv = *(new (buf) ::bbbb::zz0200());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz0200E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0200E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz0200E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz0200E");
    check_base_class_offset(lv, (::bbbb::yy200*), 0, "_ZN4bbbb6zz0200E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0200E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0200E(Test__ZN4bbbb6zz0200E, "_ZN4bbbb6zz0200E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy200E;
static Base_Class bases__ZN4bbbb6zz0200E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy200E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0200E = {  "_ZN4bbbb6zz0200E", // class name
  bases__ZN4bbbb6zz0200E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1200  : ::bbbb::yy200 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1200E) C1{ BC2{ BC3{ BC4{}} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1200E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1200E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz1200E, buf);
    ::bbbb::zz1200 &lv = *(new (buf) ::bbbb::zz1200());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz1200E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1200E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz1200E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz1200E");
    check_base_class_offset(lv, (::bbbb::yy200*), 0, "_ZN4bbbb6zz1200E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz1200E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1200E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1200E(Test__ZN4bbbb6zz1200E, "_ZN4bbbb6zz1200E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy200E;
static Base_Class bases__ZN4bbbb6zz1200E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy200E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1200E = {  "_ZN4bbbb6zz1200E", // class name
  bases__ZN4bbbb6zz1200E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2200  : ::bbbb::yy200 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2200E) C1{ BC2{ BC3{ BC4{}} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2200E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2200E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz2200E, buf);
    ::bbbb::zz2200 &lv = *(new (buf) ::bbbb::zz2200());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz2200E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2200E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz2200E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz2200E");
    check_base_class_offset(lv, (::bbbb::yy200*), 0, "_ZN4bbbb6zz2200E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz2200E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2200E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2200E(Test__ZN4bbbb6zz2200E, "_ZN4bbbb6zz2200E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy200E;
static Base_Class bases__ZN4bbbb6zz2200E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy200E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2200E = {  "_ZN4bbbb6zz2200E", // class name
  bases__ZN4bbbb6zz2200E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3200  : ::bbbb::yy200 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3200E) C1{ BC2{ BC3{ BC4{}} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3200E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3200E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3200E, buf);
    ::bbbb::zz3200 &lv = *(new (buf) ::bbbb::zz3200());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3200E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3200E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz3200E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz3200E");
    check_base_class_offset(lv, (::bbbb::yy200*), 0, "_ZN4bbbb6zz3200E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3200E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3200E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3200E(Test__ZN4bbbb6zz3200E, "_ZN4bbbb6zz3200E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy200E;
static Base_Class bases__ZN4bbbb6zz3200E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy200E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3200E = {  "_ZN4bbbb6zz3200E", // class name
  bases__ZN4bbbb6zz3200E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4200  : ::bbbb::yy200 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4200E) C1{ BC2{ BC3{ BC4{}} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4200E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4200E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4200E, buf);
    ::bbbb::zz4200 &lv = *(new (buf) ::bbbb::zz4200());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4200E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4200E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz4200E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy200*), 0, "_ZN4bbbb6zz4200E");
    check_base_class_offset(lv, (::bbbb::yy200*), 0, "_ZN4bbbb6zz4200E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4200E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4200E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4200E(Test__ZN4bbbb6zz4200E, "_ZN4bbbb6zz4200E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy200E;
static Base_Class bases__ZN4bbbb6zz4200E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy200E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4200E = {  "_ZN4bbbb6zz4200E", // class name
  bases__ZN4bbbb6zz4200E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy300  : ::bbbb::xx00 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy300E) C1{ BC2{ BC3{}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy300E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy300E;
  void *lvp;
  {
    int buf[2];
    init_test(&cd__ZN4bbbb5yy300E, buf);
    ::bbbb::yy300 &lv = *(new (buf) ::bbbb::yy300());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy300E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy300E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*), 0, "_ZN4bbbb5yy300E");
    check_base_class_offset(lv, (::bbbb::xx00*), 0, "_ZN4bbbb5yy300E");
    check_field_offset(lv, fc, 0, "_ZN4bbbb5yy300E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy300E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy300E(Test__ZN4bbbb5yy300E, "_ZN4bbbb5yy300E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
static Base_Class bases__ZN4bbbb5yy300E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy300E = {  "_ZN4bbbb5yy300E", // class name
  bases__ZN4bbbb5yy300E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0300  : ::bbbb::yy300 {
};
//SIG(1 _ZN4bbbb6zz0300E) C1{ BC2{ BC3{ BC4{}} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0300E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0300E;
  void *lvp;
  {
    int buf[2];
    init_test(&cd__ZN4bbbb6zz0300E, buf);
    ::bbbb::zz0300 &lv = *(new (buf) ::bbbb::zz0300());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0300E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0300E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz0300E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz0300E");
    check_base_class_offset(lv, (::bbbb::yy300*), 0, "_ZN4bbbb6zz0300E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0300E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0300E(Test__ZN4bbbb6zz0300E, "_ZN4bbbb6zz0300E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy300E;
static Base_Class bases__ZN4bbbb6zz0300E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy300E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0300E = {  "_ZN4bbbb6zz0300E", // class name
  bases__ZN4bbbb6zz0300E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1300  : ::bbbb::yy300 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1300E) C1{ BC2{ BC3{ BC4{}} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1300E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1300E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1300E, buf);
    ::bbbb::zz1300 &lv = *(new (buf) ::bbbb::zz1300());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1300E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1300E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz1300E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz1300E");
    check_base_class_offset(lv, (::bbbb::yy300*), 0, "_ZN4bbbb6zz1300E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1300E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1300E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1300E(Test__ZN4bbbb6zz1300E, "_ZN4bbbb6zz1300E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy300E;
static Base_Class bases__ZN4bbbb6zz1300E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy300E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1300E = {  "_ZN4bbbb6zz1300E", // class name
  bases__ZN4bbbb6zz1300E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2300  : ::bbbb::yy300 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2300E) C1{ BC2{ BC3{ BC4{}} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2300E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2300E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2300E, buf);
    ::bbbb::zz2300 &lv = *(new (buf) ::bbbb::zz2300());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2300E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2300E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz2300E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz2300E");
    check_base_class_offset(lv, (::bbbb::yy300*), 0, "_ZN4bbbb6zz2300E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2300E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2300E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2300E(Test__ZN4bbbb6zz2300E, "_ZN4bbbb6zz2300E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy300E;
static Base_Class bases__ZN4bbbb6zz2300E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy300E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2300E = {  "_ZN4bbbb6zz2300E", // class name
  bases__ZN4bbbb6zz2300E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3300  : ::bbbb::yy300 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3300E) C1{ BC2{ BC3{ BC4{}} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3300E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3300E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3300E, buf);
    ::bbbb::zz3300 &lv = *(new (buf) ::bbbb::zz3300());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3300E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3300E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz3300E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz3300E");
    check_base_class_offset(lv, (::bbbb::yy300*), 0, "_ZN4bbbb6zz3300E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3300E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3300E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3300E(Test__ZN4bbbb6zz3300E, "_ZN4bbbb6zz3300E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy300E;
static Base_Class bases__ZN4bbbb6zz3300E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy300E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3300E = {  "_ZN4bbbb6zz3300E", // class name
  bases__ZN4bbbb6zz3300E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4300  : ::bbbb::yy300 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4300E) C1{ BC2{ BC3{ BC4{}} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4300E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4300E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4300E, buf);
    ::bbbb::zz4300 &lv = *(new (buf) ::bbbb::zz4300());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4300E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4300E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz4300E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy300*), 0, "_ZN4bbbb6zz4300E");
    check_base_class_offset(lv, (::bbbb::yy300*), 0, "_ZN4bbbb6zz4300E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4300E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4300E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4300E(Test__ZN4bbbb6zz4300E, "_ZN4bbbb6zz4300E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy300E;
static Base_Class bases__ZN4bbbb6zz4300E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy300E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4300E = {  "_ZN4bbbb6zz4300E", // class name
  bases__ZN4bbbb6zz4300E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy400  : ::bbbb::xx00 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy400E) C1{ BC2{ BC3{}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy400E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy400E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(2,3)];
    init_test(&cd__ZN4bbbb5yy400E, buf);
    ::bbbb::yy400 &lv = *(new (buf) ::bbbb::yy400());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy400E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy400E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*), 0, "_ZN4bbbb5yy400E");
    check_base_class_offset(lv, (::bbbb::xx00*), 0, "_ZN4bbbb5yy400E");
    check_field_offset(lv, fc, 0, "_ZN4bbbb5yy400E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy400E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy400E(Test__ZN4bbbb5yy400E, "_ZN4bbbb5yy400E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
static Base_Class bases__ZN4bbbb5yy400E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy400E = {  "_ZN4bbbb5yy400E", // class name
  bases__ZN4bbbb5yy400E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0400  : ::bbbb::yy400 {
};
//SIG(1 _ZN4bbbb6zz0400E) C1{ BC2{ BC3{ BC4{}} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0400E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0400E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(2,3)];
    init_test(&cd__ZN4bbbb6zz0400E, buf);
    ::bbbb::zz0400 &lv = *(new (buf) ::bbbb::zz0400());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0400E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0400E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz0400E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz0400E");
    check_base_class_offset(lv, (::bbbb::yy400*), 0, "_ZN4bbbb6zz0400E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0400E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0400E(Test__ZN4bbbb6zz0400E, "_ZN4bbbb6zz0400E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy400E;
static Base_Class bases__ZN4bbbb6zz0400E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy400E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0400E = {  "_ZN4bbbb6zz0400E", // class name
  bases__ZN4bbbb6zz0400E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1400  : ::bbbb::yy400 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1400E) C1{ BC2{ BC3{ BC4{}} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1400E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1400E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1400E, buf);
    ::bbbb::zz1400 &lv = *(new (buf) ::bbbb::zz1400());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1400E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1400E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz1400E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz1400E");
    check_base_class_offset(lv, (::bbbb::yy400*), 0, "_ZN4bbbb6zz1400E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1400E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1400E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1400E(Test__ZN4bbbb6zz1400E, "_ZN4bbbb6zz1400E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy400E;
static Base_Class bases__ZN4bbbb6zz1400E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy400E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1400E = {  "_ZN4bbbb6zz1400E", // class name
  bases__ZN4bbbb6zz1400E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2400  : ::bbbb::yy400 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2400E) C1{ BC2{ BC3{ BC4{}} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2400E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2400E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2400E, buf);
    ::bbbb::zz2400 &lv = *(new (buf) ::bbbb::zz2400());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2400E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2400E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz2400E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz2400E");
    check_base_class_offset(lv, (::bbbb::yy400*), 0, "_ZN4bbbb6zz2400E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2400E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2400E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2400E(Test__ZN4bbbb6zz2400E, "_ZN4bbbb6zz2400E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy400E;
static Base_Class bases__ZN4bbbb6zz2400E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy400E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2400E = {  "_ZN4bbbb6zz2400E", // class name
  bases__ZN4bbbb6zz2400E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3400  : ::bbbb::yy400 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3400E) C1{ BC2{ BC3{ BC4{}} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3400E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3400E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz3400E, buf);
    ::bbbb::zz3400 &lv = *(new (buf) ::bbbb::zz3400());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz3400E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3400E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz3400E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz3400E");
    check_base_class_offset(lv, (::bbbb::yy400*), 0, "_ZN4bbbb6zz3400E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3400E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3400E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3400E(Test__ZN4bbbb6zz3400E, "_ZN4bbbb6zz3400E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy400E;
static Base_Class bases__ZN4bbbb6zz3400E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy400E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3400E = {  "_ZN4bbbb6zz3400E", // class name
  bases__ZN4bbbb6zz3400E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4400  : ::bbbb::yy400 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4400E) C1{ BC2{ BC3{ BC4{}} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4400E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4400E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4400E, buf);
    ::bbbb::zz4400 &lv = *(new (buf) ::bbbb::zz4400());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4400E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4400E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz4400E");
    check_base_class_offset(lv, (::bbbb::xx00*)(::bbbb::yy400*), 0, "_ZN4bbbb6zz4400E");
    check_base_class_offset(lv, (::bbbb::yy400*), 0, "_ZN4bbbb6zz4400E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4400E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4400E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4400E(Test__ZN4bbbb6zz4400E, "_ZN4bbbb6zz4400E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx00E;
extern Class_Descriptor cd__ZN4bbbb5yy400E;
static Base_Class bases__ZN4bbbb6zz4400E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx00E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy400E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4400E = {  "_ZN4bbbb6zz4400E", // class name
  bases__ZN4bbbb6zz4400E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx10  : ::bbbb::ww0 {
  char fb;
};
//SIG(-1 _ZN4bbbb4xx10E) C1{ BC2{} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx10E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx10E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb4xx10E, buf);
    ::bbbb::xx10 &lv = *(new (buf) ::bbbb::xx10());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb4xx10E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb4xx10E)");
    check_base_class_offset(lv, (::bbbb::ww0*), 0, "_ZN4bbbb4xx10E");
    check_field_offset(lv, fb, 0, "_ZN4bbbb4xx10E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx10E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx10E(Test__ZN4bbbb4xx10E, "_ZN4bbbb4xx10E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
static Base_Class bases__ZN4bbbb4xx10E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx10E = {  "_ZN4bbbb4xx10E", // class name
  bases__ZN4bbbb4xx10E, 1,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy010  : ::bbbb::xx10 {
};
//SIG(-1 _ZN4bbbb5yy010E) C1{ BC2{ BC3{} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy010E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy010E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb5yy010E, buf);
    ::bbbb::yy010 &lv = *(new (buf) ::bbbb::yy010());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb5yy010E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb5yy010E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*), 0, "_ZN4bbbb5yy010E");
    check_base_class_offset(lv, (::bbbb::xx10*), 0, "_ZN4bbbb5yy010E");
    test_class_info(&lv, &cd__ZN4bbbb5yy010E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy010E(Test__ZN4bbbb5yy010E, "_ZN4bbbb5yy010E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
static Base_Class bases__ZN4bbbb5yy010E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy010E = {  "_ZN4bbbb5yy010E", // class name
  bases__ZN4bbbb5yy010E, 2,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0010  : ::bbbb::yy010 {
};
//SIG(1 _ZN4bbbb6zz0010E) C1{ BC2{ BC3{ BC4{} Fc}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0010E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0010E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb6zz0010E, buf);
    ::bbbb::zz0010 &lv = *(new (buf) ::bbbb::zz0010());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb6zz0010E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz0010E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz0010E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz0010E");
    check_base_class_offset(lv, (::bbbb::yy010*), 0, "_ZN4bbbb6zz0010E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0010E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0010E(Test__ZN4bbbb6zz0010E, "_ZN4bbbb6zz0010E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy010E;
static Base_Class bases__ZN4bbbb6zz0010E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy010E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0010E = {  "_ZN4bbbb6zz0010E", // class name
  bases__ZN4bbbb6zz0010E, 3,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1010  : ::bbbb::yy010 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1010E) C1{ BC2{ BC3{ BC4{} Fc}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1010E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1010E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb6zz1010E, buf);
    ::bbbb::zz1010 &lv = *(new (buf) ::bbbb::zz1010());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz1010E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz1010E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz1010E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz1010E");
    check_base_class_offset(lv, (::bbbb::yy010*), 0, "_ZN4bbbb6zz1010E");
    check_field_offset(lv, fd, 1, "_ZN4bbbb6zz1010E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1010E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1010E(Test__ZN4bbbb6zz1010E, "_ZN4bbbb6zz1010E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy010E;
static Base_Class bases__ZN4bbbb6zz1010E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy010E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1010E = {  "_ZN4bbbb6zz1010E", // class name
  bases__ZN4bbbb6zz1010E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2010  : ::bbbb::yy010 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2010E) C1{ BC2{ BC3{ BC4{} Fc}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2010E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2010E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz2010E, buf);
    ::bbbb::zz2010 &lv = *(new (buf) ::bbbb::zz2010());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz2010E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2010E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz2010E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz2010E");
    check_base_class_offset(lv, (::bbbb::yy010*), 0, "_ZN4bbbb6zz2010E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz2010E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2010E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2010E(Test__ZN4bbbb6zz2010E, "_ZN4bbbb6zz2010E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy010E;
static Base_Class bases__ZN4bbbb6zz2010E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy010E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2010E = {  "_ZN4bbbb6zz2010E", // class name
  bases__ZN4bbbb6zz2010E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3010  : ::bbbb::yy010 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3010E) C1{ BC2{ BC3{ BC4{} Fc}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3010E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3010E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3010E, buf);
    ::bbbb::zz3010 &lv = *(new (buf) ::bbbb::zz3010());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3010E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3010E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz3010E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz3010E");
    check_base_class_offset(lv, (::bbbb::yy010*), 0, "_ZN4bbbb6zz3010E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3010E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3010E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3010E(Test__ZN4bbbb6zz3010E, "_ZN4bbbb6zz3010E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy010E;
static Base_Class bases__ZN4bbbb6zz3010E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy010E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3010E = {  "_ZN4bbbb6zz3010E", // class name
  bases__ZN4bbbb6zz3010E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4010  : ::bbbb::yy010 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4010E) C1{ BC2{ BC3{ BC4{} Fc}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4010E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4010E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4010E, buf);
    ::bbbb::zz4010 &lv = *(new (buf) ::bbbb::zz4010());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4010E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4010E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz4010E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy010*), 0, "_ZN4bbbb6zz4010E");
    check_base_class_offset(lv, (::bbbb::yy010*), 0, "_ZN4bbbb6zz4010E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4010E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4010E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4010E(Test__ZN4bbbb6zz4010E, "_ZN4bbbb6zz4010E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy010E;
static Base_Class bases__ZN4bbbb6zz4010E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy010E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4010E = {  "_ZN4bbbb6zz4010E", // class name
  bases__ZN4bbbb6zz4010E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy110  : ::bbbb::xx10 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy110E) C1{ BC2{ BC3{} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy110E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy110E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb5yy110E, buf);
    ::bbbb::yy110 &lv = *(new (buf) ::bbbb::yy110());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb5yy110E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb5yy110E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*), 0, "_ZN4bbbb5yy110E");
    check_base_class_offset(lv, (::bbbb::xx10*), 0, "_ZN4bbbb5yy110E");
    check_field_offset(lv, fc, 1, "_ZN4bbbb5yy110E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy110E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy110E(Test__ZN4bbbb5yy110E, "_ZN4bbbb5yy110E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
static Base_Class bases__ZN4bbbb5yy110E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy110E = {  "_ZN4bbbb5yy110E", // class name
  bases__ZN4bbbb5yy110E, 2,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0110  : ::bbbb::yy110 {
};
//SIG(1 _ZN4bbbb6zz0110E) C1{ BC2{ BC3{ BC4{} Fc} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0110E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0110E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb6zz0110E, buf);
    ::bbbb::zz0110 &lv = *(new (buf) ::bbbb::zz0110());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz0110E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz0110E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz0110E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz0110E");
    check_base_class_offset(lv, (::bbbb::yy110*), 0, "_ZN4bbbb6zz0110E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0110E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0110E(Test__ZN4bbbb6zz0110E, "_ZN4bbbb6zz0110E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy110E;
static Base_Class bases__ZN4bbbb6zz0110E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy110E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0110E = {  "_ZN4bbbb6zz0110E", // class name
  bases__ZN4bbbb6zz0110E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1110  : ::bbbb::yy110 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1110E) C1{ BC2{ BC3{ BC4{} Fc} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1110E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1110E;
  void *lvp;
  {
    char buf[3];
    init_test(&cd__ZN4bbbb6zz1110E, buf);
    ::bbbb::zz1110 &lv = *(new (buf) ::bbbb::zz1110());
    lvp = (void*)&lv;
    check2(sizeof(lv), 3, "sizeof(_ZN4bbbb6zz1110E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz1110E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz1110E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz1110E");
    check_base_class_offset(lv, (::bbbb::yy110*), 0, "_ZN4bbbb6zz1110E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz1110E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1110E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1110E(Test__ZN4bbbb6zz1110E, "_ZN4bbbb6zz1110E", 3);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy110E;
static Base_Class bases__ZN4bbbb6zz1110E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy110E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1110E = {  "_ZN4bbbb6zz1110E", // class name
  bases__ZN4bbbb6zz1110E, 3,
  0, // no vftv
  0, //no vtt
  3, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2110  : ::bbbb::yy110 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2110E) C1{ BC2{ BC3{ BC4{} Fc} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2110E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2110E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz2110E, buf);
    ::bbbb::zz2110 &lv = *(new (buf) ::bbbb::zz2110());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz2110E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2110E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz2110E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz2110E");
    check_base_class_offset(lv, (::bbbb::yy110*), 0, "_ZN4bbbb6zz2110E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz2110E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2110E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2110E(Test__ZN4bbbb6zz2110E, "_ZN4bbbb6zz2110E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy110E;
static Base_Class bases__ZN4bbbb6zz2110E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy110E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2110E = {  "_ZN4bbbb6zz2110E", // class name
  bases__ZN4bbbb6zz2110E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3110  : ::bbbb::yy110 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3110E) C1{ BC2{ BC3{ BC4{} Fc} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3110E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3110E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3110E, buf);
    ::bbbb::zz3110 &lv = *(new (buf) ::bbbb::zz3110());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3110E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3110E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz3110E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz3110E");
    check_base_class_offset(lv, (::bbbb::yy110*), 0, "_ZN4bbbb6zz3110E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3110E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3110E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3110E(Test__ZN4bbbb6zz3110E, "_ZN4bbbb6zz3110E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy110E;
static Base_Class bases__ZN4bbbb6zz3110E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy110E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3110E = {  "_ZN4bbbb6zz3110E", // class name
  bases__ZN4bbbb6zz3110E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4110  : ::bbbb::yy110 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4110E) C1{ BC2{ BC3{ BC4{} Fc} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4110E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4110E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4110E, buf);
    ::bbbb::zz4110 &lv = *(new (buf) ::bbbb::zz4110());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4110E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4110E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz4110E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy110*), 0, "_ZN4bbbb6zz4110E");
    check_base_class_offset(lv, (::bbbb::yy110*), 0, "_ZN4bbbb6zz4110E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4110E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4110E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4110E(Test__ZN4bbbb6zz4110E, "_ZN4bbbb6zz4110E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy110E;
static Base_Class bases__ZN4bbbb6zz4110E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy110E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4110E = {  "_ZN4bbbb6zz4110E", // class name
  bases__ZN4bbbb6zz4110E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy210  : ::bbbb::xx10 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy210E) C1{ BC2{ BC3{} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy210E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy210E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy210E, buf);
    ::bbbb::yy210 &lv = *(new (buf) ::bbbb::yy210());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy210E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy210E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*), 0, "_ZN4bbbb5yy210E");
    check_base_class_offset(lv, (::bbbb::xx10*), 0, "_ZN4bbbb5yy210E");
    check_field_offset(lv, fc, 2, "_ZN4bbbb5yy210E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy210E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy210E(Test__ZN4bbbb5yy210E, "_ZN4bbbb5yy210E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
static Base_Class bases__ZN4bbbb5yy210E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy210E = {  "_ZN4bbbb5yy210E", // class name
  bases__ZN4bbbb5yy210E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0210  : ::bbbb::yy210 {
};
//SIG(1 _ZN4bbbb6zz0210E) C1{ BC2{ BC3{ BC4{} Fc} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0210E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0210E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0210E, buf);
    ::bbbb::zz0210 &lv = *(new (buf) ::bbbb::zz0210());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0210E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0210E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz0210E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz0210E");
    check_base_class_offset(lv, (::bbbb::yy210*), 0, "_ZN4bbbb6zz0210E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0210E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0210E(Test__ZN4bbbb6zz0210E, "_ZN4bbbb6zz0210E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy210E;
static Base_Class bases__ZN4bbbb6zz0210E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy210E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0210E = {  "_ZN4bbbb6zz0210E", // class name
  bases__ZN4bbbb6zz0210E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1210  : ::bbbb::yy210 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1210E) C1{ BC2{ BC3{ BC4{} Fc} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1210E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1210E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1210E, buf);
    ::bbbb::zz1210 &lv = *(new (buf) ::bbbb::zz1210());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1210E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1210E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz1210E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz1210E");
    check_base_class_offset(lv, (::bbbb::yy210*), 0, "_ZN4bbbb6zz1210E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1210E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1210E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1210E(Test__ZN4bbbb6zz1210E, "_ZN4bbbb6zz1210E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy210E;
static Base_Class bases__ZN4bbbb6zz1210E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy210E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1210E = {  "_ZN4bbbb6zz1210E", // class name
  bases__ZN4bbbb6zz1210E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2210  : ::bbbb::yy210 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2210E) C1{ BC2{ BC3{ BC4{} Fc} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2210E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2210E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2210E, buf);
    ::bbbb::zz2210 &lv = *(new (buf) ::bbbb::zz2210());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2210E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2210E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz2210E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz2210E");
    check_base_class_offset(lv, (::bbbb::yy210*), 0, "_ZN4bbbb6zz2210E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2210E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2210E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2210E(Test__ZN4bbbb6zz2210E, "_ZN4bbbb6zz2210E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy210E;
static Base_Class bases__ZN4bbbb6zz2210E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy210E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2210E = {  "_ZN4bbbb6zz2210E", // class name
  bases__ZN4bbbb6zz2210E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3210  : ::bbbb::yy210 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3210E) C1{ BC2{ BC3{ BC4{} Fc} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3210E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3210E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3210E, buf);
    ::bbbb::zz3210 &lv = *(new (buf) ::bbbb::zz3210());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3210E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3210E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz3210E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz3210E");
    check_base_class_offset(lv, (::bbbb::yy210*), 0, "_ZN4bbbb6zz3210E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3210E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3210E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3210E(Test__ZN4bbbb6zz3210E, "_ZN4bbbb6zz3210E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy210E;
static Base_Class bases__ZN4bbbb6zz3210E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy210E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3210E = {  "_ZN4bbbb6zz3210E", // class name
  bases__ZN4bbbb6zz3210E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4210  : ::bbbb::yy210 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4210E) C1{ BC2{ BC3{ BC4{} Fc} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4210E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4210E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4210E, buf);
    ::bbbb::zz4210 &lv = *(new (buf) ::bbbb::zz4210());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4210E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4210E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz4210E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy210*), 0, "_ZN4bbbb6zz4210E");
    check_base_class_offset(lv, (::bbbb::yy210*), 0, "_ZN4bbbb6zz4210E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4210E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4210E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4210E(Test__ZN4bbbb6zz4210E, "_ZN4bbbb6zz4210E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy210E;
static Base_Class bases__ZN4bbbb6zz4210E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy210E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4210E = {  "_ZN4bbbb6zz4210E", // class name
  bases__ZN4bbbb6zz4210E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy310  : ::bbbb::xx10 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy310E) C1{ BC2{ BC3{} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy310E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy310E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy310E, buf);
    ::bbbb::yy310 &lv = *(new (buf) ::bbbb::yy310());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy310E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy310E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*), 0, "_ZN4bbbb5yy310E");
    check_base_class_offset(lv, (::bbbb::xx10*), 0, "_ZN4bbbb5yy310E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy310E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy310E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy310E(Test__ZN4bbbb5yy310E, "_ZN4bbbb5yy310E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
static Base_Class bases__ZN4bbbb5yy310E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy310E = {  "_ZN4bbbb5yy310E", // class name
  bases__ZN4bbbb5yy310E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0310  : ::bbbb::yy310 {
};
//SIG(1 _ZN4bbbb6zz0310E) C1{ BC2{ BC3{ BC4{} Fc} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0310E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0310E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0310E, buf);
    ::bbbb::zz0310 &lv = *(new (buf) ::bbbb::zz0310());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0310E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0310E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz0310E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz0310E");
    check_base_class_offset(lv, (::bbbb::yy310*), 0, "_ZN4bbbb6zz0310E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0310E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0310E(Test__ZN4bbbb6zz0310E, "_ZN4bbbb6zz0310E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy310E;
static Base_Class bases__ZN4bbbb6zz0310E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy310E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0310E = {  "_ZN4bbbb6zz0310E", // class name
  bases__ZN4bbbb6zz0310E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1310  : ::bbbb::yy310 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1310E) C1{ BC2{ BC3{ BC4{} Fc} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1310E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1310E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1310E, buf);
    ::bbbb::zz1310 &lv = *(new (buf) ::bbbb::zz1310());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1310E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1310E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz1310E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz1310E");
    check_base_class_offset(lv, (::bbbb::yy310*), 0, "_ZN4bbbb6zz1310E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1310E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1310E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1310E(Test__ZN4bbbb6zz1310E, "_ZN4bbbb6zz1310E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy310E;
static Base_Class bases__ZN4bbbb6zz1310E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy310E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1310E = {  "_ZN4bbbb6zz1310E", // class name
  bases__ZN4bbbb6zz1310E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2310  : ::bbbb::yy310 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2310E) C1{ BC2{ BC3{ BC4{} Fc} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2310E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2310E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2310E, buf);
    ::bbbb::zz2310 &lv = *(new (buf) ::bbbb::zz2310());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2310E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2310E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz2310E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz2310E");
    check_base_class_offset(lv, (::bbbb::yy310*), 0, "_ZN4bbbb6zz2310E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2310E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2310E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2310E(Test__ZN4bbbb6zz2310E, "_ZN4bbbb6zz2310E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy310E;
static Base_Class bases__ZN4bbbb6zz2310E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy310E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2310E = {  "_ZN4bbbb6zz2310E", // class name
  bases__ZN4bbbb6zz2310E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3310  : ::bbbb::yy310 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3310E) C1{ BC2{ BC3{ BC4{} Fc} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3310E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3310E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3310E, buf);
    ::bbbb::zz3310 &lv = *(new (buf) ::bbbb::zz3310());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3310E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3310E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz3310E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz3310E");
    check_base_class_offset(lv, (::bbbb::yy310*), 0, "_ZN4bbbb6zz3310E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3310E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3310E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3310E(Test__ZN4bbbb6zz3310E, "_ZN4bbbb6zz3310E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy310E;
static Base_Class bases__ZN4bbbb6zz3310E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy310E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3310E = {  "_ZN4bbbb6zz3310E", // class name
  bases__ZN4bbbb6zz3310E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4310  : ::bbbb::yy310 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4310E) C1{ BC2{ BC3{ BC4{} Fc} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4310E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4310E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4310E, buf);
    ::bbbb::zz4310 &lv = *(new (buf) ::bbbb::zz4310());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4310E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4310E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz4310E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy310*), 0, "_ZN4bbbb6zz4310E");
    check_base_class_offset(lv, (::bbbb::yy310*), 0, "_ZN4bbbb6zz4310E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4310E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4310E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4310E(Test__ZN4bbbb6zz4310E, "_ZN4bbbb6zz4310E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy310E;
static Base_Class bases__ZN4bbbb6zz4310E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy310E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4310E = {  "_ZN4bbbb6zz4310E", // class name
  bases__ZN4bbbb6zz4310E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy410  : ::bbbb::xx10 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy410E) C1{ BC2{ BC3{} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy410E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy410E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy410E, buf);
    ::bbbb::yy410 &lv = *(new (buf) ::bbbb::yy410());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy410E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy410E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*), 0, "_ZN4bbbb5yy410E");
    check_base_class_offset(lv, (::bbbb::xx10*), 0, "_ZN4bbbb5yy410E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy410E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy410E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy410E(Test__ZN4bbbb5yy410E, "_ZN4bbbb5yy410E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
static Base_Class bases__ZN4bbbb5yy410E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy410E = {  "_ZN4bbbb5yy410E", // class name
  bases__ZN4bbbb5yy410E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0410  : ::bbbb::yy410 {
};
//SIG(1 _ZN4bbbb6zz0410E) C1{ BC2{ BC3{ BC4{} Fc} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0410E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0410E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0410E, buf);
    ::bbbb::zz0410 &lv = *(new (buf) ::bbbb::zz0410());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0410E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0410E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz0410E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz0410E");
    check_base_class_offset(lv, (::bbbb::yy410*), 0, "_ZN4bbbb6zz0410E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0410E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0410E(Test__ZN4bbbb6zz0410E, "_ZN4bbbb6zz0410E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy410E;
static Base_Class bases__ZN4bbbb6zz0410E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy410E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0410E = {  "_ZN4bbbb6zz0410E", // class name
  bases__ZN4bbbb6zz0410E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1410  : ::bbbb::yy410 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1410E) C1{ BC2{ BC3{ BC4{} Fc} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1410E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1410E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1410E, buf);
    ::bbbb::zz1410 &lv = *(new (buf) ::bbbb::zz1410());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1410E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1410E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz1410E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz1410E");
    check_base_class_offset(lv, (::bbbb::yy410*), 0, "_ZN4bbbb6zz1410E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1410E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1410E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1410E(Test__ZN4bbbb6zz1410E, "_ZN4bbbb6zz1410E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy410E;
static Base_Class bases__ZN4bbbb6zz1410E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy410E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1410E = {  "_ZN4bbbb6zz1410E", // class name
  bases__ZN4bbbb6zz1410E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2410  : ::bbbb::yy410 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2410E) C1{ BC2{ BC3{ BC4{} Fc} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2410E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2410E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2410E, buf);
    ::bbbb::zz2410 &lv = *(new (buf) ::bbbb::zz2410());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2410E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2410E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz2410E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz2410E");
    check_base_class_offset(lv, (::bbbb::yy410*), 0, "_ZN4bbbb6zz2410E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2410E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2410E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2410E(Test__ZN4bbbb6zz2410E, "_ZN4bbbb6zz2410E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy410E;
static Base_Class bases__ZN4bbbb6zz2410E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy410E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2410E = {  "_ZN4bbbb6zz2410E", // class name
  bases__ZN4bbbb6zz2410E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3410  : ::bbbb::yy410 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3410E) C1{ BC2{ BC3{ BC4{} Fc} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3410E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3410E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3410E, buf);
    ::bbbb::zz3410 &lv = *(new (buf) ::bbbb::zz3410());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3410E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3410E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz3410E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz3410E");
    check_base_class_offset(lv, (::bbbb::yy410*), 0, "_ZN4bbbb6zz3410E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3410E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3410E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3410E(Test__ZN4bbbb6zz3410E, "_ZN4bbbb6zz3410E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy410E;
static Base_Class bases__ZN4bbbb6zz3410E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy410E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3410E = {  "_ZN4bbbb6zz3410E", // class name
  bases__ZN4bbbb6zz3410E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4410  : ::bbbb::yy410 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4410E) C1{ BC2{ BC3{ BC4{} Fc} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4410E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4410E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4410E, buf);
    ::bbbb::zz4410 &lv = *(new (buf) ::bbbb::zz4410());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4410E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4410E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz4410E");
    check_base_class_offset(lv, (::bbbb::xx10*)(::bbbb::yy410*), 0, "_ZN4bbbb6zz4410E");
    check_base_class_offset(lv, (::bbbb::yy410*), 0, "_ZN4bbbb6zz4410E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4410E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4410E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4410E(Test__ZN4bbbb6zz4410E, "_ZN4bbbb6zz4410E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx10E;
extern Class_Descriptor cd__ZN4bbbb5yy410E;
static Base_Class bases__ZN4bbbb6zz4410E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx10E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy410E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4410E = {  "_ZN4bbbb6zz4410E", // class name
  bases__ZN4bbbb6zz4410E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx20  : ::bbbb::ww0 {
  short fb;
};
//SIG(-1 _ZN4bbbb4xx20E) C1{ BC2{} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx20E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx20E;
  void *lvp;
  {
    short buf[2];
    init_test(&cd__ZN4bbbb4xx20E, buf);
    ::bbbb::xx20 &lv = *(new (buf) ::bbbb::xx20());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb4xx20E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb4xx20E)");
    check_base_class_offset(lv, (::bbbb::ww0*), 0, "_ZN4bbbb4xx20E");
    check_field_offset(lv, fb, 0, "_ZN4bbbb4xx20E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx20E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx20E(Test__ZN4bbbb4xx20E, "_ZN4bbbb4xx20E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
static Base_Class bases__ZN4bbbb4xx20E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx20E = {  "_ZN4bbbb4xx20E", // class name
  bases__ZN4bbbb4xx20E, 1,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy020  : ::bbbb::xx20 {
};
//SIG(-1 _ZN4bbbb5yy020E) C1{ BC2{ BC3{} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy020E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy020E;
  void *lvp;
  {
    short buf[2];
    init_test(&cd__ZN4bbbb5yy020E, buf);
    ::bbbb::yy020 &lv = *(new (buf) ::bbbb::yy020());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb5yy020E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy020E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*), 0, "_ZN4bbbb5yy020E");
    check_base_class_offset(lv, (::bbbb::xx20*), 0, "_ZN4bbbb5yy020E");
    test_class_info(&lv, &cd__ZN4bbbb5yy020E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy020E(Test__ZN4bbbb5yy020E, "_ZN4bbbb5yy020E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
static Base_Class bases__ZN4bbbb5yy020E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy020E = {  "_ZN4bbbb5yy020E", // class name
  bases__ZN4bbbb5yy020E, 2,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0020  : ::bbbb::yy020 {
};
//SIG(1 _ZN4bbbb6zz0020E) C1{ BC2{ BC3{ BC4{} Fs}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0020E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0020E;
  void *lvp;
  {
    short buf[2];
    init_test(&cd__ZN4bbbb6zz0020E, buf);
    ::bbbb::zz0020 &lv = *(new (buf) ::bbbb::zz0020());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz0020E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0020E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz0020E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz0020E");
    check_base_class_offset(lv, (::bbbb::yy020*), 0, "_ZN4bbbb6zz0020E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0020E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0020E(Test__ZN4bbbb6zz0020E, "_ZN4bbbb6zz0020E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy020E;
static Base_Class bases__ZN4bbbb6zz0020E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy020E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0020E = {  "_ZN4bbbb6zz0020E", // class name
  bases__ZN4bbbb6zz0020E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1020  : ::bbbb::yy020 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1020E) C1{ BC2{ BC3{ BC4{} Fs}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1020E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1020E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz1020E, buf);
    ::bbbb::zz1020 &lv = *(new (buf) ::bbbb::zz1020());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz1020E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1020E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz1020E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz1020E");
    check_base_class_offset(lv, (::bbbb::yy020*), 0, "_ZN4bbbb6zz1020E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz1020E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1020E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1020E(Test__ZN4bbbb6zz1020E, "_ZN4bbbb6zz1020E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy020E;
static Base_Class bases__ZN4bbbb6zz1020E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy020E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1020E = {  "_ZN4bbbb6zz1020E", // class name
  bases__ZN4bbbb6zz1020E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2020  : ::bbbb::yy020 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2020E) C1{ BC2{ BC3{ BC4{} Fs}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2020E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2020E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz2020E, buf);
    ::bbbb::zz2020 &lv = *(new (buf) ::bbbb::zz2020());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz2020E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2020E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz2020E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz2020E");
    check_base_class_offset(lv, (::bbbb::yy020*), 0, "_ZN4bbbb6zz2020E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz2020E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2020E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2020E(Test__ZN4bbbb6zz2020E, "_ZN4bbbb6zz2020E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy020E;
static Base_Class bases__ZN4bbbb6zz2020E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy020E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2020E = {  "_ZN4bbbb6zz2020E", // class name
  bases__ZN4bbbb6zz2020E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3020  : ::bbbb::yy020 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3020E) C1{ BC2{ BC3{ BC4{} Fs}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3020E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3020E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3020E, buf);
    ::bbbb::zz3020 &lv = *(new (buf) ::bbbb::zz3020());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3020E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3020E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz3020E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz3020E");
    check_base_class_offset(lv, (::bbbb::yy020*), 0, "_ZN4bbbb6zz3020E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3020E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3020E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3020E(Test__ZN4bbbb6zz3020E, "_ZN4bbbb6zz3020E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy020E;
static Base_Class bases__ZN4bbbb6zz3020E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy020E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3020E = {  "_ZN4bbbb6zz3020E", // class name
  bases__ZN4bbbb6zz3020E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4020  : ::bbbb::yy020 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4020E) C1{ BC2{ BC3{ BC4{} Fs}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4020E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4020E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4020E, buf);
    ::bbbb::zz4020 &lv = *(new (buf) ::bbbb::zz4020());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4020E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4020E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz4020E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy020*), 0, "_ZN4bbbb6zz4020E");
    check_base_class_offset(lv, (::bbbb::yy020*), 0, "_ZN4bbbb6zz4020E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4020E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4020E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4020E(Test__ZN4bbbb6zz4020E, "_ZN4bbbb6zz4020E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy020E;
static Base_Class bases__ZN4bbbb6zz4020E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy020E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4020E = {  "_ZN4bbbb6zz4020E", // class name
  bases__ZN4bbbb6zz4020E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy120  : ::bbbb::xx20 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy120E) C1{ BC2{ BC3{} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy120E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy120E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy120E, buf);
    ::bbbb::yy120 &lv = *(new (buf) ::bbbb::yy120());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy120E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy120E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*), 0, "_ZN4bbbb5yy120E");
    check_base_class_offset(lv, (::bbbb::xx20*), 0, "_ZN4bbbb5yy120E");
    check_field_offset(lv, fc, 2, "_ZN4bbbb5yy120E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy120E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy120E(Test__ZN4bbbb5yy120E, "_ZN4bbbb5yy120E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
static Base_Class bases__ZN4bbbb5yy120E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy120E = {  "_ZN4bbbb5yy120E", // class name
  bases__ZN4bbbb5yy120E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0120  : ::bbbb::yy120 {
};
//SIG(1 _ZN4bbbb6zz0120E) C1{ BC2{ BC3{ BC4{} Fs} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0120E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0120E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0120E, buf);
    ::bbbb::zz0120 &lv = *(new (buf) ::bbbb::zz0120());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0120E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0120E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz0120E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz0120E");
    check_base_class_offset(lv, (::bbbb::yy120*), 0, "_ZN4bbbb6zz0120E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0120E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0120E(Test__ZN4bbbb6zz0120E, "_ZN4bbbb6zz0120E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy120E;
static Base_Class bases__ZN4bbbb6zz0120E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy120E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0120E = {  "_ZN4bbbb6zz0120E", // class name
  bases__ZN4bbbb6zz0120E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1120  : ::bbbb::yy120 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1120E) C1{ BC2{ BC3{ BC4{} Fs} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1120E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1120E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz1120E, buf);
    ::bbbb::zz1120 &lv = *(new (buf) ::bbbb::zz1120());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz1120E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1120E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz1120E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz1120E");
    check_base_class_offset(lv, (::bbbb::yy120*), 0, "_ZN4bbbb6zz1120E");
    check_field_offset(lv, fd, 3, "_ZN4bbbb6zz1120E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1120E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1120E(Test__ZN4bbbb6zz1120E, "_ZN4bbbb6zz1120E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy120E;
static Base_Class bases__ZN4bbbb6zz1120E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy120E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1120E = {  "_ZN4bbbb6zz1120E", // class name
  bases__ZN4bbbb6zz1120E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2120  : ::bbbb::yy120 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2120E) C1{ BC2{ BC3{ BC4{} Fs} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2120E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2120E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2120E, buf);
    ::bbbb::zz2120 &lv = *(new (buf) ::bbbb::zz2120());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2120E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2120E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz2120E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz2120E");
    check_base_class_offset(lv, (::bbbb::yy120*), 0, "_ZN4bbbb6zz2120E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2120E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2120E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2120E(Test__ZN4bbbb6zz2120E, "_ZN4bbbb6zz2120E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy120E;
static Base_Class bases__ZN4bbbb6zz2120E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy120E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2120E = {  "_ZN4bbbb6zz2120E", // class name
  bases__ZN4bbbb6zz2120E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3120  : ::bbbb::yy120 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3120E) C1{ BC2{ BC3{ BC4{} Fs} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3120E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3120E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3120E, buf);
    ::bbbb::zz3120 &lv = *(new (buf) ::bbbb::zz3120());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3120E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3120E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz3120E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz3120E");
    check_base_class_offset(lv, (::bbbb::yy120*), 0, "_ZN4bbbb6zz3120E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3120E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3120E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3120E(Test__ZN4bbbb6zz3120E, "_ZN4bbbb6zz3120E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy120E;
static Base_Class bases__ZN4bbbb6zz3120E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy120E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3120E = {  "_ZN4bbbb6zz3120E", // class name
  bases__ZN4bbbb6zz3120E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4120  : ::bbbb::yy120 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4120E) C1{ BC2{ BC3{ BC4{} Fs} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4120E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4120E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4120E, buf);
    ::bbbb::zz4120 &lv = *(new (buf) ::bbbb::zz4120());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4120E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4120E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz4120E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy120*), 0, "_ZN4bbbb6zz4120E");
    check_base_class_offset(lv, (::bbbb::yy120*), 0, "_ZN4bbbb6zz4120E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4120E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4120E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4120E(Test__ZN4bbbb6zz4120E, "_ZN4bbbb6zz4120E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy120E;
static Base_Class bases__ZN4bbbb6zz4120E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy120E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4120E = {  "_ZN4bbbb6zz4120E", // class name
  bases__ZN4bbbb6zz4120E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy220  : ::bbbb::xx20 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy220E) C1{ BC2{ BC3{} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy220E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy220E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy220E, buf);
    ::bbbb::yy220 &lv = *(new (buf) ::bbbb::yy220());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy220E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy220E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*), 0, "_ZN4bbbb5yy220E");
    check_base_class_offset(lv, (::bbbb::xx20*), 0, "_ZN4bbbb5yy220E");
    check_field_offset(lv, fc, 2, "_ZN4bbbb5yy220E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy220E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy220E(Test__ZN4bbbb5yy220E, "_ZN4bbbb5yy220E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
static Base_Class bases__ZN4bbbb5yy220E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy220E = {  "_ZN4bbbb5yy220E", // class name
  bases__ZN4bbbb5yy220E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0220  : ::bbbb::yy220 {
};
//SIG(1 _ZN4bbbb6zz0220E) C1{ BC2{ BC3{ BC4{} Fs} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0220E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0220E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0220E, buf);
    ::bbbb::zz0220 &lv = *(new (buf) ::bbbb::zz0220());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0220E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0220E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz0220E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz0220E");
    check_base_class_offset(lv, (::bbbb::yy220*), 0, "_ZN4bbbb6zz0220E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0220E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0220E(Test__ZN4bbbb6zz0220E, "_ZN4bbbb6zz0220E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy220E;
static Base_Class bases__ZN4bbbb6zz0220E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy220E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0220E = {  "_ZN4bbbb6zz0220E", // class name
  bases__ZN4bbbb6zz0220E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1220  : ::bbbb::yy220 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1220E) C1{ BC2{ BC3{ BC4{} Fs} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1220E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1220E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1220E, buf);
    ::bbbb::zz1220 &lv = *(new (buf) ::bbbb::zz1220());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1220E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1220E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz1220E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz1220E");
    check_base_class_offset(lv, (::bbbb::yy220*), 0, "_ZN4bbbb6zz1220E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1220E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1220E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1220E(Test__ZN4bbbb6zz1220E, "_ZN4bbbb6zz1220E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy220E;
static Base_Class bases__ZN4bbbb6zz1220E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy220E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1220E = {  "_ZN4bbbb6zz1220E", // class name
  bases__ZN4bbbb6zz1220E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2220  : ::bbbb::yy220 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2220E) C1{ BC2{ BC3{ BC4{} Fs} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2220E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2220E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2220E, buf);
    ::bbbb::zz2220 &lv = *(new (buf) ::bbbb::zz2220());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2220E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2220E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz2220E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz2220E");
    check_base_class_offset(lv, (::bbbb::yy220*), 0, "_ZN4bbbb6zz2220E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2220E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2220E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2220E(Test__ZN4bbbb6zz2220E, "_ZN4bbbb6zz2220E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy220E;
static Base_Class bases__ZN4bbbb6zz2220E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy220E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2220E = {  "_ZN4bbbb6zz2220E", // class name
  bases__ZN4bbbb6zz2220E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3220  : ::bbbb::yy220 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3220E) C1{ BC2{ BC3{ BC4{} Fs} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3220E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3220E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3220E, buf);
    ::bbbb::zz3220 &lv = *(new (buf) ::bbbb::zz3220());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3220E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3220E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz3220E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz3220E");
    check_base_class_offset(lv, (::bbbb::yy220*), 0, "_ZN4bbbb6zz3220E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3220E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3220E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3220E(Test__ZN4bbbb6zz3220E, "_ZN4bbbb6zz3220E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy220E;
static Base_Class bases__ZN4bbbb6zz3220E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy220E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3220E = {  "_ZN4bbbb6zz3220E", // class name
  bases__ZN4bbbb6zz3220E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4220  : ::bbbb::yy220 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4220E) C1{ BC2{ BC3{ BC4{} Fs} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4220E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4220E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4220E, buf);
    ::bbbb::zz4220 &lv = *(new (buf) ::bbbb::zz4220());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4220E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4220E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz4220E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy220*), 0, "_ZN4bbbb6zz4220E");
    check_base_class_offset(lv, (::bbbb::yy220*), 0, "_ZN4bbbb6zz4220E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4220E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4220E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4220E(Test__ZN4bbbb6zz4220E, "_ZN4bbbb6zz4220E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy220E;
static Base_Class bases__ZN4bbbb6zz4220E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy220E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4220E = {  "_ZN4bbbb6zz4220E", // class name
  bases__ZN4bbbb6zz4220E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy320  : ::bbbb::xx20 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy320E) C1{ BC2{ BC3{} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy320E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy320E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy320E, buf);
    ::bbbb::yy320 &lv = *(new (buf) ::bbbb::yy320());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy320E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy320E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*), 0, "_ZN4bbbb5yy320E");
    check_base_class_offset(lv, (::bbbb::xx20*), 0, "_ZN4bbbb5yy320E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy320E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy320E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy320E(Test__ZN4bbbb5yy320E, "_ZN4bbbb5yy320E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
static Base_Class bases__ZN4bbbb5yy320E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy320E = {  "_ZN4bbbb5yy320E", // class name
  bases__ZN4bbbb5yy320E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0320  : ::bbbb::yy320 {
};
//SIG(1 _ZN4bbbb6zz0320E) C1{ BC2{ BC3{ BC4{} Fs} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0320E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0320E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0320E, buf);
    ::bbbb::zz0320 &lv = *(new (buf) ::bbbb::zz0320());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0320E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0320E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz0320E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz0320E");
    check_base_class_offset(lv, (::bbbb::yy320*), 0, "_ZN4bbbb6zz0320E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0320E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0320E(Test__ZN4bbbb6zz0320E, "_ZN4bbbb6zz0320E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy320E;
static Base_Class bases__ZN4bbbb6zz0320E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy320E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0320E = {  "_ZN4bbbb6zz0320E", // class name
  bases__ZN4bbbb6zz0320E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1320  : ::bbbb::yy320 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1320E) C1{ BC2{ BC3{ BC4{} Fs} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1320E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1320E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1320E, buf);
    ::bbbb::zz1320 &lv = *(new (buf) ::bbbb::zz1320());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1320E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1320E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz1320E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz1320E");
    check_base_class_offset(lv, (::bbbb::yy320*), 0, "_ZN4bbbb6zz1320E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1320E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1320E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1320E(Test__ZN4bbbb6zz1320E, "_ZN4bbbb6zz1320E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy320E;
static Base_Class bases__ZN4bbbb6zz1320E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy320E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1320E = {  "_ZN4bbbb6zz1320E", // class name
  bases__ZN4bbbb6zz1320E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2320  : ::bbbb::yy320 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2320E) C1{ BC2{ BC3{ BC4{} Fs} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2320E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2320E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2320E, buf);
    ::bbbb::zz2320 &lv = *(new (buf) ::bbbb::zz2320());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2320E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2320E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz2320E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz2320E");
    check_base_class_offset(lv, (::bbbb::yy320*), 0, "_ZN4bbbb6zz2320E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2320E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2320E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2320E(Test__ZN4bbbb6zz2320E, "_ZN4bbbb6zz2320E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy320E;
static Base_Class bases__ZN4bbbb6zz2320E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy320E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2320E = {  "_ZN4bbbb6zz2320E", // class name
  bases__ZN4bbbb6zz2320E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3320  : ::bbbb::yy320 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3320E) C1{ BC2{ BC3{ BC4{} Fs} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3320E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3320E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3320E, buf);
    ::bbbb::zz3320 &lv = *(new (buf) ::bbbb::zz3320());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3320E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3320E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz3320E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz3320E");
    check_base_class_offset(lv, (::bbbb::yy320*), 0, "_ZN4bbbb6zz3320E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3320E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3320E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3320E(Test__ZN4bbbb6zz3320E, "_ZN4bbbb6zz3320E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy320E;
static Base_Class bases__ZN4bbbb6zz3320E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy320E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3320E = {  "_ZN4bbbb6zz3320E", // class name
  bases__ZN4bbbb6zz3320E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4320  : ::bbbb::yy320 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4320E) C1{ BC2{ BC3{ BC4{} Fs} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4320E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4320E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4320E, buf);
    ::bbbb::zz4320 &lv = *(new (buf) ::bbbb::zz4320());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4320E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4320E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz4320E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy320*), 0, "_ZN4bbbb6zz4320E");
    check_base_class_offset(lv, (::bbbb::yy320*), 0, "_ZN4bbbb6zz4320E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4320E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4320E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4320E(Test__ZN4bbbb6zz4320E, "_ZN4bbbb6zz4320E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy320E;
static Base_Class bases__ZN4bbbb6zz4320E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy320E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4320E = {  "_ZN4bbbb6zz4320E", // class name
  bases__ZN4bbbb6zz4320E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy420  : ::bbbb::xx20 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy420E) C1{ BC2{ BC3{} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy420E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy420E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy420E, buf);
    ::bbbb::yy420 &lv = *(new (buf) ::bbbb::yy420());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy420E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy420E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*), 0, "_ZN4bbbb5yy420E");
    check_base_class_offset(lv, (::bbbb::xx20*), 0, "_ZN4bbbb5yy420E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy420E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy420E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy420E(Test__ZN4bbbb5yy420E, "_ZN4bbbb5yy420E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
static Base_Class bases__ZN4bbbb5yy420E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy420E = {  "_ZN4bbbb5yy420E", // class name
  bases__ZN4bbbb5yy420E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0420  : ::bbbb::yy420 {
};
//SIG(1 _ZN4bbbb6zz0420E) C1{ BC2{ BC3{ BC4{} Fs} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0420E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0420E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0420E, buf);
    ::bbbb::zz0420 &lv = *(new (buf) ::bbbb::zz0420());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0420E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0420E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz0420E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz0420E");
    check_base_class_offset(lv, (::bbbb::yy420*), 0, "_ZN4bbbb6zz0420E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0420E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0420E(Test__ZN4bbbb6zz0420E, "_ZN4bbbb6zz0420E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy420E;
static Base_Class bases__ZN4bbbb6zz0420E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy420E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0420E = {  "_ZN4bbbb6zz0420E", // class name
  bases__ZN4bbbb6zz0420E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1420  : ::bbbb::yy420 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1420E) C1{ BC2{ BC3{ BC4{} Fs} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1420E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1420E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1420E, buf);
    ::bbbb::zz1420 &lv = *(new (buf) ::bbbb::zz1420());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1420E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1420E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz1420E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz1420E");
    check_base_class_offset(lv, (::bbbb::yy420*), 0, "_ZN4bbbb6zz1420E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1420E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1420E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1420E(Test__ZN4bbbb6zz1420E, "_ZN4bbbb6zz1420E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy420E;
static Base_Class bases__ZN4bbbb6zz1420E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy420E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1420E = {  "_ZN4bbbb6zz1420E", // class name
  bases__ZN4bbbb6zz1420E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2420  : ::bbbb::yy420 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2420E) C1{ BC2{ BC3{ BC4{} Fs} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2420E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2420E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2420E, buf);
    ::bbbb::zz2420 &lv = *(new (buf) ::bbbb::zz2420());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2420E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2420E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz2420E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz2420E");
    check_base_class_offset(lv, (::bbbb::yy420*), 0, "_ZN4bbbb6zz2420E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2420E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2420E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2420E(Test__ZN4bbbb6zz2420E, "_ZN4bbbb6zz2420E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy420E;
static Base_Class bases__ZN4bbbb6zz2420E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy420E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2420E = {  "_ZN4bbbb6zz2420E", // class name
  bases__ZN4bbbb6zz2420E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3420  : ::bbbb::yy420 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3420E) C1{ BC2{ BC3{ BC4{} Fs} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3420E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3420E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3420E, buf);
    ::bbbb::zz3420 &lv = *(new (buf) ::bbbb::zz3420());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3420E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3420E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz3420E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz3420E");
    check_base_class_offset(lv, (::bbbb::yy420*), 0, "_ZN4bbbb6zz3420E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3420E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3420E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3420E(Test__ZN4bbbb6zz3420E, "_ZN4bbbb6zz3420E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy420E;
static Base_Class bases__ZN4bbbb6zz3420E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy420E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3420E = {  "_ZN4bbbb6zz3420E", // class name
  bases__ZN4bbbb6zz3420E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4420  : ::bbbb::yy420 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4420E) C1{ BC2{ BC3{ BC4{} Fs} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4420E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4420E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4420E, buf);
    ::bbbb::zz4420 &lv = *(new (buf) ::bbbb::zz4420());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4420E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4420E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz4420E");
    check_base_class_offset(lv, (::bbbb::xx20*)(::bbbb::yy420*), 0, "_ZN4bbbb6zz4420E");
    check_base_class_offset(lv, (::bbbb::yy420*), 0, "_ZN4bbbb6zz4420E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4420E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4420E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4420E(Test__ZN4bbbb6zz4420E, "_ZN4bbbb6zz4420E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx20E;
extern Class_Descriptor cd__ZN4bbbb5yy420E;
static Base_Class bases__ZN4bbbb6zz4420E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx20E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy420E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4420E = {  "_ZN4bbbb6zz4420E", // class name
  bases__ZN4bbbb6zz4420E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx30  : ::bbbb::ww0 {
  int fb;
};
//SIG(-1 _ZN4bbbb4xx30E) C1{ BC2{} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx30E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx30E;
  void *lvp;
  {
    int buf[2];
    init_test(&cd__ZN4bbbb4xx30E, buf);
    ::bbbb::xx30 &lv = *(new (buf) ::bbbb::xx30());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb4xx30E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb4xx30E)");
    check_base_class_offset(lv, (::bbbb::ww0*), 0, "_ZN4bbbb4xx30E");
    check_field_offset(lv, fb, 0, "_ZN4bbbb4xx30E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx30E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx30E(Test__ZN4bbbb4xx30E, "_ZN4bbbb4xx30E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
static Base_Class bases__ZN4bbbb4xx30E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx30E = {  "_ZN4bbbb4xx30E", // class name
  bases__ZN4bbbb4xx30E, 1,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy030  : ::bbbb::xx30 {
};
//SIG(-1 _ZN4bbbb5yy030E) C1{ BC2{ BC3{} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy030E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy030E;
  void *lvp;
  {
    int buf[2];
    init_test(&cd__ZN4bbbb5yy030E, buf);
    ::bbbb::yy030 &lv = *(new (buf) ::bbbb::yy030());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy030E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy030E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*), 0, "_ZN4bbbb5yy030E");
    check_base_class_offset(lv, (::bbbb::xx30*), 0, "_ZN4bbbb5yy030E");
    test_class_info(&lv, &cd__ZN4bbbb5yy030E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy030E(Test__ZN4bbbb5yy030E, "_ZN4bbbb5yy030E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
static Base_Class bases__ZN4bbbb5yy030E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy030E = {  "_ZN4bbbb5yy030E", // class name
  bases__ZN4bbbb5yy030E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0030  : ::bbbb::yy030 {
};
//SIG(1 _ZN4bbbb6zz0030E) C1{ BC2{ BC3{ BC4{} Fi}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0030E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0030E;
  void *lvp;
  {
    int buf[2];
    init_test(&cd__ZN4bbbb6zz0030E, buf);
    ::bbbb::zz0030 &lv = *(new (buf) ::bbbb::zz0030());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0030E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0030E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz0030E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz0030E");
    check_base_class_offset(lv, (::bbbb::yy030*), 0, "_ZN4bbbb6zz0030E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0030E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0030E(Test__ZN4bbbb6zz0030E, "_ZN4bbbb6zz0030E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy030E;
static Base_Class bases__ZN4bbbb6zz0030E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy030E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0030E = {  "_ZN4bbbb6zz0030E", // class name
  bases__ZN4bbbb6zz0030E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1030  : ::bbbb::yy030 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1030E) C1{ BC2{ BC3{ BC4{} Fi}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1030E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1030E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1030E, buf);
    ::bbbb::zz1030 &lv = *(new (buf) ::bbbb::zz1030());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1030E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1030E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz1030E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz1030E");
    check_base_class_offset(lv, (::bbbb::yy030*), 0, "_ZN4bbbb6zz1030E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1030E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1030E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1030E(Test__ZN4bbbb6zz1030E, "_ZN4bbbb6zz1030E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy030E;
static Base_Class bases__ZN4bbbb6zz1030E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy030E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1030E = {  "_ZN4bbbb6zz1030E", // class name
  bases__ZN4bbbb6zz1030E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2030  : ::bbbb::yy030 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2030E) C1{ BC2{ BC3{ BC4{} Fi}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2030E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2030E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2030E, buf);
    ::bbbb::zz2030 &lv = *(new (buf) ::bbbb::zz2030());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2030E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2030E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz2030E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz2030E");
    check_base_class_offset(lv, (::bbbb::yy030*), 0, "_ZN4bbbb6zz2030E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2030E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2030E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2030E(Test__ZN4bbbb6zz2030E, "_ZN4bbbb6zz2030E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy030E;
static Base_Class bases__ZN4bbbb6zz2030E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy030E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2030E = {  "_ZN4bbbb6zz2030E", // class name
  bases__ZN4bbbb6zz2030E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3030  : ::bbbb::yy030 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3030E) C1{ BC2{ BC3{ BC4{} Fi}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3030E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3030E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3030E, buf);
    ::bbbb::zz3030 &lv = *(new (buf) ::bbbb::zz3030());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3030E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3030E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz3030E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz3030E");
    check_base_class_offset(lv, (::bbbb::yy030*), 0, "_ZN4bbbb6zz3030E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3030E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3030E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3030E(Test__ZN4bbbb6zz3030E, "_ZN4bbbb6zz3030E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy030E;
static Base_Class bases__ZN4bbbb6zz3030E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy030E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3030E = {  "_ZN4bbbb6zz3030E", // class name
  bases__ZN4bbbb6zz3030E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4030  : ::bbbb::yy030 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4030E) C1{ BC2{ BC3{ BC4{} Fi}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4030E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4030E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4030E, buf);
    ::bbbb::zz4030 &lv = *(new (buf) ::bbbb::zz4030());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4030E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4030E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz4030E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy030*), 0, "_ZN4bbbb6zz4030E");
    check_base_class_offset(lv, (::bbbb::yy030*), 0, "_ZN4bbbb6zz4030E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4030E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4030E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4030E(Test__ZN4bbbb6zz4030E, "_ZN4bbbb6zz4030E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy030E;
static Base_Class bases__ZN4bbbb6zz4030E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy030E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4030E = {  "_ZN4bbbb6zz4030E", // class name
  bases__ZN4bbbb6zz4030E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy130  : ::bbbb::xx30 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy130E) C1{ BC2{ BC3{} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy130E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy130E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy130E, buf);
    ::bbbb::yy130 &lv = *(new (buf) ::bbbb::yy130());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy130E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy130E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*), 0, "_ZN4bbbb5yy130E");
    check_base_class_offset(lv, (::bbbb::xx30*), 0, "_ZN4bbbb5yy130E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy130E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy130E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy130E(Test__ZN4bbbb5yy130E, "_ZN4bbbb5yy130E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
static Base_Class bases__ZN4bbbb5yy130E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy130E = {  "_ZN4bbbb5yy130E", // class name
  bases__ZN4bbbb5yy130E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0130  : ::bbbb::yy130 {
};
//SIG(1 _ZN4bbbb6zz0130E) C1{ BC2{ BC3{ BC4{} Fi} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0130E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0130E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0130E, buf);
    ::bbbb::zz0130 &lv = *(new (buf) ::bbbb::zz0130());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0130E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0130E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz0130E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz0130E");
    check_base_class_offset(lv, (::bbbb::yy130*), 0, "_ZN4bbbb6zz0130E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0130E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0130E(Test__ZN4bbbb6zz0130E, "_ZN4bbbb6zz0130E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy130E;
static Base_Class bases__ZN4bbbb6zz0130E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy130E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0130E = {  "_ZN4bbbb6zz0130E", // class name
  bases__ZN4bbbb6zz0130E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1130  : ::bbbb::yy130 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1130E) C1{ BC2{ BC3{ BC4{} Fi} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1130E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1130E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1130E, buf);
    ::bbbb::zz1130 &lv = *(new (buf) ::bbbb::zz1130());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1130E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1130E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz1130E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz1130E");
    check_base_class_offset(lv, (::bbbb::yy130*), 0, "_ZN4bbbb6zz1130E");
    check_field_offset(lv, fd, 5, "_ZN4bbbb6zz1130E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1130E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1130E(Test__ZN4bbbb6zz1130E, "_ZN4bbbb6zz1130E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy130E;
static Base_Class bases__ZN4bbbb6zz1130E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy130E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1130E = {  "_ZN4bbbb6zz1130E", // class name
  bases__ZN4bbbb6zz1130E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2130  : ::bbbb::yy130 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2130E) C1{ BC2{ BC3{ BC4{} Fi} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2130E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2130E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2130E, buf);
    ::bbbb::zz2130 &lv = *(new (buf) ::bbbb::zz2130());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2130E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2130E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz2130E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz2130E");
    check_base_class_offset(lv, (::bbbb::yy130*), 0, "_ZN4bbbb6zz2130E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2130E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2130E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2130E(Test__ZN4bbbb6zz2130E, "_ZN4bbbb6zz2130E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy130E;
static Base_Class bases__ZN4bbbb6zz2130E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy130E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2130E = {  "_ZN4bbbb6zz2130E", // class name
  bases__ZN4bbbb6zz2130E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3130  : ::bbbb::yy130 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3130E) C1{ BC2{ BC3{ BC4{} Fi} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3130E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3130E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3130E, buf);
    ::bbbb::zz3130 &lv = *(new (buf) ::bbbb::zz3130());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3130E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3130E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz3130E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz3130E");
    check_base_class_offset(lv, (::bbbb::yy130*), 0, "_ZN4bbbb6zz3130E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3130E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3130E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3130E(Test__ZN4bbbb6zz3130E, "_ZN4bbbb6zz3130E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy130E;
static Base_Class bases__ZN4bbbb6zz3130E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy130E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3130E = {  "_ZN4bbbb6zz3130E", // class name
  bases__ZN4bbbb6zz3130E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4130  : ::bbbb::yy130 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4130E) C1{ BC2{ BC3{ BC4{} Fi} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4130E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4130E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4130E, buf);
    ::bbbb::zz4130 &lv = *(new (buf) ::bbbb::zz4130());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4130E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4130E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz4130E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy130*), 0, "_ZN4bbbb6zz4130E");
    check_base_class_offset(lv, (::bbbb::yy130*), 0, "_ZN4bbbb6zz4130E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4130E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4130E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4130E(Test__ZN4bbbb6zz4130E, "_ZN4bbbb6zz4130E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy130E;
static Base_Class bases__ZN4bbbb6zz4130E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy130E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4130E = {  "_ZN4bbbb6zz4130E", // class name
  bases__ZN4bbbb6zz4130E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy230  : ::bbbb::xx30 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy230E) C1{ BC2{ BC3{} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy230E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy230E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy230E, buf);
    ::bbbb::yy230 &lv = *(new (buf) ::bbbb::yy230());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy230E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy230E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*), 0, "_ZN4bbbb5yy230E");
    check_base_class_offset(lv, (::bbbb::xx30*), 0, "_ZN4bbbb5yy230E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy230E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy230E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy230E(Test__ZN4bbbb5yy230E, "_ZN4bbbb5yy230E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
static Base_Class bases__ZN4bbbb5yy230E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy230E = {  "_ZN4bbbb5yy230E", // class name
  bases__ZN4bbbb5yy230E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0230  : ::bbbb::yy230 {
};
//SIG(1 _ZN4bbbb6zz0230E) C1{ BC2{ BC3{ BC4{} Fi} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0230E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0230E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0230E, buf);
    ::bbbb::zz0230 &lv = *(new (buf) ::bbbb::zz0230());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0230E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0230E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz0230E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz0230E");
    check_base_class_offset(lv, (::bbbb::yy230*), 0, "_ZN4bbbb6zz0230E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0230E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0230E(Test__ZN4bbbb6zz0230E, "_ZN4bbbb6zz0230E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy230E;
static Base_Class bases__ZN4bbbb6zz0230E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy230E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0230E = {  "_ZN4bbbb6zz0230E", // class name
  bases__ZN4bbbb6zz0230E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1230  : ::bbbb::yy230 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1230E) C1{ BC2{ BC3{ BC4{} Fi} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1230E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1230E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1230E, buf);
    ::bbbb::zz1230 &lv = *(new (buf) ::bbbb::zz1230());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1230E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1230E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz1230E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz1230E");
    check_base_class_offset(lv, (::bbbb::yy230*), 0, "_ZN4bbbb6zz1230E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz1230E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1230E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1230E(Test__ZN4bbbb6zz1230E, "_ZN4bbbb6zz1230E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy230E;
static Base_Class bases__ZN4bbbb6zz1230E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy230E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1230E = {  "_ZN4bbbb6zz1230E", // class name
  bases__ZN4bbbb6zz1230E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2230  : ::bbbb::yy230 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2230E) C1{ BC2{ BC3{ BC4{} Fi} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2230E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2230E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2230E, buf);
    ::bbbb::zz2230 &lv = *(new (buf) ::bbbb::zz2230());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2230E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2230E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz2230E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz2230E");
    check_base_class_offset(lv, (::bbbb::yy230*), 0, "_ZN4bbbb6zz2230E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2230E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2230E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2230E(Test__ZN4bbbb6zz2230E, "_ZN4bbbb6zz2230E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy230E;
static Base_Class bases__ZN4bbbb6zz2230E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy230E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2230E = {  "_ZN4bbbb6zz2230E", // class name
  bases__ZN4bbbb6zz2230E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3230  : ::bbbb::yy230 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3230E) C1{ BC2{ BC3{ BC4{} Fi} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3230E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3230E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3230E, buf);
    ::bbbb::zz3230 &lv = *(new (buf) ::bbbb::zz3230());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3230E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3230E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz3230E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz3230E");
    check_base_class_offset(lv, (::bbbb::yy230*), 0, "_ZN4bbbb6zz3230E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3230E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3230E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3230E(Test__ZN4bbbb6zz3230E, "_ZN4bbbb6zz3230E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy230E;
static Base_Class bases__ZN4bbbb6zz3230E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy230E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3230E = {  "_ZN4bbbb6zz3230E", // class name
  bases__ZN4bbbb6zz3230E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4230  : ::bbbb::yy230 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4230E) C1{ BC2{ BC3{ BC4{} Fi} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4230E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4230E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4230E, buf);
    ::bbbb::zz4230 &lv = *(new (buf) ::bbbb::zz4230());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4230E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4230E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz4230E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy230*), 0, "_ZN4bbbb6zz4230E");
    check_base_class_offset(lv, (::bbbb::yy230*), 0, "_ZN4bbbb6zz4230E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4230E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4230E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4230E(Test__ZN4bbbb6zz4230E, "_ZN4bbbb6zz4230E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy230E;
static Base_Class bases__ZN4bbbb6zz4230E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy230E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4230E = {  "_ZN4bbbb6zz4230E", // class name
  bases__ZN4bbbb6zz4230E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy330  : ::bbbb::xx30 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy330E) C1{ BC2{ BC3{} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy330E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy330E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy330E, buf);
    ::bbbb::yy330 &lv = *(new (buf) ::bbbb::yy330());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy330E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy330E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*), 0, "_ZN4bbbb5yy330E");
    check_base_class_offset(lv, (::bbbb::xx30*), 0, "_ZN4bbbb5yy330E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy330E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy330E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy330E(Test__ZN4bbbb5yy330E, "_ZN4bbbb5yy330E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
static Base_Class bases__ZN4bbbb5yy330E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy330E = {  "_ZN4bbbb5yy330E", // class name
  bases__ZN4bbbb5yy330E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0330  : ::bbbb::yy330 {
};
//SIG(1 _ZN4bbbb6zz0330E) C1{ BC2{ BC3{ BC4{} Fi} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0330E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0330E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0330E, buf);
    ::bbbb::zz0330 &lv = *(new (buf) ::bbbb::zz0330());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0330E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0330E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz0330E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz0330E");
    check_base_class_offset(lv, (::bbbb::yy330*), 0, "_ZN4bbbb6zz0330E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0330E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0330E(Test__ZN4bbbb6zz0330E, "_ZN4bbbb6zz0330E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy330E;
static Base_Class bases__ZN4bbbb6zz0330E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy330E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0330E = {  "_ZN4bbbb6zz0330E", // class name
  bases__ZN4bbbb6zz0330E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1330  : ::bbbb::yy330 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1330E) C1{ BC2{ BC3{ BC4{} Fi} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1330E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1330E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1330E, buf);
    ::bbbb::zz1330 &lv = *(new (buf) ::bbbb::zz1330());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1330E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1330E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz1330E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz1330E");
    check_base_class_offset(lv, (::bbbb::yy330*), 0, "_ZN4bbbb6zz1330E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1330E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1330E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1330E(Test__ZN4bbbb6zz1330E, "_ZN4bbbb6zz1330E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy330E;
static Base_Class bases__ZN4bbbb6zz1330E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy330E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1330E = {  "_ZN4bbbb6zz1330E", // class name
  bases__ZN4bbbb6zz1330E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2330  : ::bbbb::yy330 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2330E) C1{ BC2{ BC3{ BC4{} Fi} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2330E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2330E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2330E, buf);
    ::bbbb::zz2330 &lv = *(new (buf) ::bbbb::zz2330());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2330E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2330E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz2330E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz2330E");
    check_base_class_offset(lv, (::bbbb::yy330*), 0, "_ZN4bbbb6zz2330E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2330E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2330E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2330E(Test__ZN4bbbb6zz2330E, "_ZN4bbbb6zz2330E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy330E;
static Base_Class bases__ZN4bbbb6zz2330E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy330E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2330E = {  "_ZN4bbbb6zz2330E", // class name
  bases__ZN4bbbb6zz2330E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3330  : ::bbbb::yy330 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3330E) C1{ BC2{ BC3{ BC4{} Fi} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3330E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3330E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3330E, buf);
    ::bbbb::zz3330 &lv = *(new (buf) ::bbbb::zz3330());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3330E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3330E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz3330E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz3330E");
    check_base_class_offset(lv, (::bbbb::yy330*), 0, "_ZN4bbbb6zz3330E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3330E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3330E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3330E(Test__ZN4bbbb6zz3330E, "_ZN4bbbb6zz3330E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy330E;
static Base_Class bases__ZN4bbbb6zz3330E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy330E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3330E = {  "_ZN4bbbb6zz3330E", // class name
  bases__ZN4bbbb6zz3330E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4330  : ::bbbb::yy330 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4330E) C1{ BC2{ BC3{ BC4{} Fi} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4330E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4330E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4330E, buf);
    ::bbbb::zz4330 &lv = *(new (buf) ::bbbb::zz4330());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4330E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4330E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz4330E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy330*), 0, "_ZN4bbbb6zz4330E");
    check_base_class_offset(lv, (::bbbb::yy330*), 0, "_ZN4bbbb6zz4330E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4330E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4330E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4330E(Test__ZN4bbbb6zz4330E, "_ZN4bbbb6zz4330E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy330E;
static Base_Class bases__ZN4bbbb6zz4330E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy330E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4330E = {  "_ZN4bbbb6zz4330E", // class name
  bases__ZN4bbbb6zz4330E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy430  : ::bbbb::xx30 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy430E) C1{ BC2{ BC3{} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy430E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy430E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy430E, buf);
    ::bbbb::yy430 &lv = *(new (buf) ::bbbb::yy430());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy430E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy430E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*), 0, "_ZN4bbbb5yy430E");
    check_base_class_offset(lv, (::bbbb::xx30*), 0, "_ZN4bbbb5yy430E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy430E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy430E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy430E(Test__ZN4bbbb5yy430E, "_ZN4bbbb5yy430E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
static Base_Class bases__ZN4bbbb5yy430E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy430E = {  "_ZN4bbbb5yy430E", // class name
  bases__ZN4bbbb5yy430E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0430  : ::bbbb::yy430 {
};
//SIG(1 _ZN4bbbb6zz0430E) C1{ BC2{ BC3{ BC4{} Fi} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0430E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0430E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0430E, buf);
    ::bbbb::zz0430 &lv = *(new (buf) ::bbbb::zz0430());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0430E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0430E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz0430E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz0430E");
    check_base_class_offset(lv, (::bbbb::yy430*), 0, "_ZN4bbbb6zz0430E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0430E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0430E(Test__ZN4bbbb6zz0430E, "_ZN4bbbb6zz0430E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy430E;
static Base_Class bases__ZN4bbbb6zz0430E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy430E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0430E = {  "_ZN4bbbb6zz0430E", // class name
  bases__ZN4bbbb6zz0430E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1430  : ::bbbb::yy430 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1430E) C1{ BC2{ BC3{ BC4{} Fi} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1430E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1430E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1430E, buf);
    ::bbbb::zz1430 &lv = *(new (buf) ::bbbb::zz1430());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1430E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1430E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz1430E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz1430E");
    check_base_class_offset(lv, (::bbbb::yy430*), 0, "_ZN4bbbb6zz1430E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1430E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1430E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1430E(Test__ZN4bbbb6zz1430E, "_ZN4bbbb6zz1430E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy430E;
static Base_Class bases__ZN4bbbb6zz1430E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy430E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1430E = {  "_ZN4bbbb6zz1430E", // class name
  bases__ZN4bbbb6zz1430E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2430  : ::bbbb::yy430 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2430E) C1{ BC2{ BC3{ BC4{} Fi} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2430E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2430E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2430E, buf);
    ::bbbb::zz2430 &lv = *(new (buf) ::bbbb::zz2430());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2430E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2430E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz2430E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz2430E");
    check_base_class_offset(lv, (::bbbb::yy430*), 0, "_ZN4bbbb6zz2430E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2430E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2430E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2430E(Test__ZN4bbbb6zz2430E, "_ZN4bbbb6zz2430E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy430E;
static Base_Class bases__ZN4bbbb6zz2430E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy430E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2430E = {  "_ZN4bbbb6zz2430E", // class name
  bases__ZN4bbbb6zz2430E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3430  : ::bbbb::yy430 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3430E) C1{ BC2{ BC3{ BC4{} Fi} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3430E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3430E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3430E, buf);
    ::bbbb::zz3430 &lv = *(new (buf) ::bbbb::zz3430());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3430E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3430E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz3430E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz3430E");
    check_base_class_offset(lv, (::bbbb::yy430*), 0, "_ZN4bbbb6zz3430E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3430E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3430E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3430E(Test__ZN4bbbb6zz3430E, "_ZN4bbbb6zz3430E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy430E;
static Base_Class bases__ZN4bbbb6zz3430E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy430E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3430E = {  "_ZN4bbbb6zz3430E", // class name
  bases__ZN4bbbb6zz3430E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4430  : ::bbbb::yy430 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4430E) C1{ BC2{ BC3{ BC4{} Fi} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4430E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4430E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4430E, buf);
    ::bbbb::zz4430 &lv = *(new (buf) ::bbbb::zz4430());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4430E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4430E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz4430E");
    check_base_class_offset(lv, (::bbbb::xx30*)(::bbbb::yy430*), 0, "_ZN4bbbb6zz4430E");
    check_base_class_offset(lv, (::bbbb::yy430*), 0, "_ZN4bbbb6zz4430E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4430E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4430E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4430E(Test__ZN4bbbb6zz4430E, "_ZN4bbbb6zz4430E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx30E;
extern Class_Descriptor cd__ZN4bbbb5yy430E;
static Base_Class bases__ZN4bbbb6zz4430E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx30E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy430E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4430E = {  "_ZN4bbbb6zz4430E", // class name
  bases__ZN4bbbb6zz4430E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx40  : ::bbbb::ww0 {
  double fb;
};
//SIG(-1 _ZN4bbbb4xx40E) C1{ BC2{} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx40E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx40E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(2,3)];
    init_test(&cd__ZN4bbbb4xx40E, buf);
    ::bbbb::xx40 &lv = *(new (buf) ::bbbb::xx40());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb4xx40E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb4xx40E)");
    check_base_class_offset(lv, (::bbbb::ww0*), 0, "_ZN4bbbb4xx40E");
    check_field_offset(lv, fb, 0, "_ZN4bbbb4xx40E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx40E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx40E(Test__ZN4bbbb4xx40E, "_ZN4bbbb4xx40E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
static Base_Class bases__ZN4bbbb4xx40E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx40E = {  "_ZN4bbbb4xx40E", // class name
  bases__ZN4bbbb4xx40E, 1,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy040  : ::bbbb::xx40 {
};
//SIG(-1 _ZN4bbbb5yy040E) C1{ BC2{ BC3{} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy040E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy040E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(2,3)];
    init_test(&cd__ZN4bbbb5yy040E, buf);
    ::bbbb::yy040 &lv = *(new (buf) ::bbbb::yy040());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy040E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy040E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*), 0, "_ZN4bbbb5yy040E");
    check_base_class_offset(lv, (::bbbb::xx40*), 0, "_ZN4bbbb5yy040E");
    test_class_info(&lv, &cd__ZN4bbbb5yy040E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy040E(Test__ZN4bbbb5yy040E, "_ZN4bbbb5yy040E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
static Base_Class bases__ZN4bbbb5yy040E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy040E = {  "_ZN4bbbb5yy040E", // class name
  bases__ZN4bbbb5yy040E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0040  : ::bbbb::yy040 {
};
//SIG(1 _ZN4bbbb6zz0040E) C1{ BC2{ BC3{ BC4{} FL}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0040E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0040E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(2,3)];
    init_test(&cd__ZN4bbbb6zz0040E, buf);
    ::bbbb::zz0040 &lv = *(new (buf) ::bbbb::zz0040());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0040E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0040E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz0040E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz0040E");
    check_base_class_offset(lv, (::bbbb::yy040*), 0, "_ZN4bbbb6zz0040E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0040E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0040E(Test__ZN4bbbb6zz0040E, "_ZN4bbbb6zz0040E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy040E;
static Base_Class bases__ZN4bbbb6zz0040E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy040E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0040E = {  "_ZN4bbbb6zz0040E", // class name
  bases__ZN4bbbb6zz0040E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1040  : ::bbbb::yy040 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1040E) C1{ BC2{ BC3{ BC4{} FL}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1040E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1040E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1040E, buf);
    ::bbbb::zz1040 &lv = *(new (buf) ::bbbb::zz1040());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1040E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1040E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz1040E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz1040E");
    check_base_class_offset(lv, (::bbbb::yy040*), 0, "_ZN4bbbb6zz1040E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1040E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1040E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1040E(Test__ZN4bbbb6zz1040E, "_ZN4bbbb6zz1040E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy040E;
static Base_Class bases__ZN4bbbb6zz1040E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy040E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1040E = {  "_ZN4bbbb6zz1040E", // class name
  bases__ZN4bbbb6zz1040E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2040  : ::bbbb::yy040 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2040E) C1{ BC2{ BC3{ BC4{} FL}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2040E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2040E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2040E, buf);
    ::bbbb::zz2040 &lv = *(new (buf) ::bbbb::zz2040());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2040E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2040E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz2040E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz2040E");
    check_base_class_offset(lv, (::bbbb::yy040*), 0, "_ZN4bbbb6zz2040E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2040E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2040E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2040E(Test__ZN4bbbb6zz2040E, "_ZN4bbbb6zz2040E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy040E;
static Base_Class bases__ZN4bbbb6zz2040E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy040E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2040E = {  "_ZN4bbbb6zz2040E", // class name
  bases__ZN4bbbb6zz2040E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3040  : ::bbbb::yy040 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3040E) C1{ BC2{ BC3{ BC4{} FL}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3040E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3040E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz3040E, buf);
    ::bbbb::zz3040 &lv = *(new (buf) ::bbbb::zz3040());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz3040E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3040E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz3040E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz3040E");
    check_base_class_offset(lv, (::bbbb::yy040*), 0, "_ZN4bbbb6zz3040E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3040E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3040E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3040E(Test__ZN4bbbb6zz3040E, "_ZN4bbbb6zz3040E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy040E;
static Base_Class bases__ZN4bbbb6zz3040E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy040E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3040E = {  "_ZN4bbbb6zz3040E", // class name
  bases__ZN4bbbb6zz3040E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4040  : ::bbbb::yy040 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4040E) C1{ BC2{ BC3{ BC4{} FL}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4040E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4040E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4040E, buf);
    ::bbbb::zz4040 &lv = *(new (buf) ::bbbb::zz4040());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4040E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4040E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz4040E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy040*), 0, "_ZN4bbbb6zz4040E");
    check_base_class_offset(lv, (::bbbb::yy040*), 0, "_ZN4bbbb6zz4040E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4040E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4040E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4040E(Test__ZN4bbbb6zz4040E, "_ZN4bbbb6zz4040E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy040E;
static Base_Class bases__ZN4bbbb6zz4040E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy040E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4040E = {  "_ZN4bbbb6zz4040E", // class name
  bases__ZN4bbbb6zz4040E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy140  : ::bbbb::xx40 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy140E) C1{ BC2{ BC3{} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy140E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy140E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy140E, buf);
    ::bbbb::yy140 &lv = *(new (buf) ::bbbb::yy140());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy140E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy140E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*), 0, "_ZN4bbbb5yy140E");
    check_base_class_offset(lv, (::bbbb::xx40*), 0, "_ZN4bbbb5yy140E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy140E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy140E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy140E(Test__ZN4bbbb5yy140E, "_ZN4bbbb5yy140E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
static Base_Class bases__ZN4bbbb5yy140E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy140E = {  "_ZN4bbbb5yy140E", // class name
  bases__ZN4bbbb5yy140E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0140  : ::bbbb::yy140 {
};
//SIG(1 _ZN4bbbb6zz0140E) C1{ BC2{ BC3{ BC4{} FL} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0140E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0140E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0140E, buf);
    ::bbbb::zz0140 &lv = *(new (buf) ::bbbb::zz0140());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0140E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0140E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz0140E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz0140E");
    check_base_class_offset(lv, (::bbbb::yy140*), 0, "_ZN4bbbb6zz0140E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0140E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0140E(Test__ZN4bbbb6zz0140E, "_ZN4bbbb6zz0140E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy140E;
static Base_Class bases__ZN4bbbb6zz0140E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy140E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0140E = {  "_ZN4bbbb6zz0140E", // class name
  bases__ZN4bbbb6zz0140E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1140  : ::bbbb::yy140 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1140E) C1{ BC2{ BC3{ BC4{} FL} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1140E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1140E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1140E, buf);
    ::bbbb::zz1140 &lv = *(new (buf) ::bbbb::zz1140());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1140E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1140E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz1140E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz1140E");
    check_base_class_offset(lv, (::bbbb::yy140*), 0, "_ZN4bbbb6zz1140E");
    check_field_offset(lv, fd, 9, "_ZN4bbbb6zz1140E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1140E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1140E(Test__ZN4bbbb6zz1140E, "_ZN4bbbb6zz1140E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy140E;
static Base_Class bases__ZN4bbbb6zz1140E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy140E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1140E = {  "_ZN4bbbb6zz1140E", // class name
  bases__ZN4bbbb6zz1140E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2140  : ::bbbb::yy140 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2140E) C1{ BC2{ BC3{ BC4{} FL} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2140E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2140E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2140E, buf);
    ::bbbb::zz2140 &lv = *(new (buf) ::bbbb::zz2140());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2140E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2140E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz2140E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz2140E");
    check_base_class_offset(lv, (::bbbb::yy140*), 0, "_ZN4bbbb6zz2140E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2140E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2140E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2140E(Test__ZN4bbbb6zz2140E, "_ZN4bbbb6zz2140E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy140E;
static Base_Class bases__ZN4bbbb6zz2140E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy140E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2140E = {  "_ZN4bbbb6zz2140E", // class name
  bases__ZN4bbbb6zz2140E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3140  : ::bbbb::yy140 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3140E) C1{ BC2{ BC3{ BC4{} FL} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3140E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3140E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3140E, buf);
    ::bbbb::zz3140 &lv = *(new (buf) ::bbbb::zz3140());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3140E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3140E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz3140E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz3140E");
    check_base_class_offset(lv, (::bbbb::yy140*), 0, "_ZN4bbbb6zz3140E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3140E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3140E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3140E(Test__ZN4bbbb6zz3140E, "_ZN4bbbb6zz3140E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy140E;
static Base_Class bases__ZN4bbbb6zz3140E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy140E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3140E = {  "_ZN4bbbb6zz3140E", // class name
  bases__ZN4bbbb6zz3140E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4140  : ::bbbb::yy140 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4140E) C1{ BC2{ BC3{ BC4{} FL} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4140E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4140E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4140E, buf);
    ::bbbb::zz4140 &lv = *(new (buf) ::bbbb::zz4140());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4140E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4140E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz4140E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy140*), 0, "_ZN4bbbb6zz4140E");
    check_base_class_offset(lv, (::bbbb::yy140*), 0, "_ZN4bbbb6zz4140E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4140E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4140E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4140E(Test__ZN4bbbb6zz4140E, "_ZN4bbbb6zz4140E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy140E;
static Base_Class bases__ZN4bbbb6zz4140E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy140E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4140E = {  "_ZN4bbbb6zz4140E", // class name
  bases__ZN4bbbb6zz4140E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy240  : ::bbbb::xx40 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy240E) C1{ BC2{ BC3{} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy240E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy240E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy240E, buf);
    ::bbbb::yy240 &lv = *(new (buf) ::bbbb::yy240());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy240E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy240E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*), 0, "_ZN4bbbb5yy240E");
    check_base_class_offset(lv, (::bbbb::xx40*), 0, "_ZN4bbbb5yy240E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy240E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy240E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy240E(Test__ZN4bbbb5yy240E, "_ZN4bbbb5yy240E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
static Base_Class bases__ZN4bbbb5yy240E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy240E = {  "_ZN4bbbb5yy240E", // class name
  bases__ZN4bbbb5yy240E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0240  : ::bbbb::yy240 {
};
//SIG(1 _ZN4bbbb6zz0240E) C1{ BC2{ BC3{ BC4{} FL} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0240E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0240E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0240E, buf);
    ::bbbb::zz0240 &lv = *(new (buf) ::bbbb::zz0240());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0240E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0240E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz0240E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz0240E");
    check_base_class_offset(lv, (::bbbb::yy240*), 0, "_ZN4bbbb6zz0240E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0240E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0240E(Test__ZN4bbbb6zz0240E, "_ZN4bbbb6zz0240E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy240E;
static Base_Class bases__ZN4bbbb6zz0240E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy240E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0240E = {  "_ZN4bbbb6zz0240E", // class name
  bases__ZN4bbbb6zz0240E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1240  : ::bbbb::yy240 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1240E) C1{ BC2{ BC3{ BC4{} FL} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1240E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1240E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1240E, buf);
    ::bbbb::zz1240 &lv = *(new (buf) ::bbbb::zz1240());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1240E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1240E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz1240E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz1240E");
    check_base_class_offset(lv, (::bbbb::yy240*), 0, "_ZN4bbbb6zz1240E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz1240E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1240E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1240E(Test__ZN4bbbb6zz1240E, "_ZN4bbbb6zz1240E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy240E;
static Base_Class bases__ZN4bbbb6zz1240E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy240E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1240E = {  "_ZN4bbbb6zz1240E", // class name
  bases__ZN4bbbb6zz1240E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2240  : ::bbbb::yy240 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2240E) C1{ BC2{ BC3{ BC4{} FL} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2240E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2240E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2240E, buf);
    ::bbbb::zz2240 &lv = *(new (buf) ::bbbb::zz2240());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2240E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2240E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz2240E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz2240E");
    check_base_class_offset(lv, (::bbbb::yy240*), 0, "_ZN4bbbb6zz2240E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2240E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2240E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2240E(Test__ZN4bbbb6zz2240E, "_ZN4bbbb6zz2240E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy240E;
static Base_Class bases__ZN4bbbb6zz2240E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy240E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2240E = {  "_ZN4bbbb6zz2240E", // class name
  bases__ZN4bbbb6zz2240E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3240  : ::bbbb::yy240 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3240E) C1{ BC2{ BC3{ BC4{} FL} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3240E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3240E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3240E, buf);
    ::bbbb::zz3240 &lv = *(new (buf) ::bbbb::zz3240());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3240E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3240E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz3240E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz3240E");
    check_base_class_offset(lv, (::bbbb::yy240*), 0, "_ZN4bbbb6zz3240E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3240E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3240E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3240E(Test__ZN4bbbb6zz3240E, "_ZN4bbbb6zz3240E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy240E;
static Base_Class bases__ZN4bbbb6zz3240E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy240E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3240E = {  "_ZN4bbbb6zz3240E", // class name
  bases__ZN4bbbb6zz3240E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4240  : ::bbbb::yy240 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4240E) C1{ BC2{ BC3{ BC4{} FL} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4240E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4240E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4240E, buf);
    ::bbbb::zz4240 &lv = *(new (buf) ::bbbb::zz4240());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4240E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4240E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz4240E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy240*), 0, "_ZN4bbbb6zz4240E");
    check_base_class_offset(lv, (::bbbb::yy240*), 0, "_ZN4bbbb6zz4240E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4240E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4240E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4240E(Test__ZN4bbbb6zz4240E, "_ZN4bbbb6zz4240E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy240E;
static Base_Class bases__ZN4bbbb6zz4240E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy240E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4240E = {  "_ZN4bbbb6zz4240E", // class name
  bases__ZN4bbbb6zz4240E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy340  : ::bbbb::xx40 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy340E) C1{ BC2{ BC3{} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy340E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy340E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy340E, buf);
    ::bbbb::yy340 &lv = *(new (buf) ::bbbb::yy340());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy340E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy340E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*), 0, "_ZN4bbbb5yy340E");
    check_base_class_offset(lv, (::bbbb::xx40*), 0, "_ZN4bbbb5yy340E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy340E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy340E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy340E(Test__ZN4bbbb5yy340E, "_ZN4bbbb5yy340E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
static Base_Class bases__ZN4bbbb5yy340E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy340E = {  "_ZN4bbbb5yy340E", // class name
  bases__ZN4bbbb5yy340E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0340  : ::bbbb::yy340 {
};
//SIG(1 _ZN4bbbb6zz0340E) C1{ BC2{ BC3{ BC4{} FL} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0340E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0340E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0340E, buf);
    ::bbbb::zz0340 &lv = *(new (buf) ::bbbb::zz0340());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0340E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0340E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz0340E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz0340E");
    check_base_class_offset(lv, (::bbbb::yy340*), 0, "_ZN4bbbb6zz0340E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0340E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0340E(Test__ZN4bbbb6zz0340E, "_ZN4bbbb6zz0340E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy340E;
static Base_Class bases__ZN4bbbb6zz0340E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy340E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0340E = {  "_ZN4bbbb6zz0340E", // class name
  bases__ZN4bbbb6zz0340E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1340  : ::bbbb::yy340 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1340E) C1{ BC2{ BC3{ BC4{} FL} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1340E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1340E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz1340E, buf);
    ::bbbb::zz1340 &lv = *(new (buf) ::bbbb::zz1340());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1340E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1340E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz1340E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz1340E");
    check_base_class_offset(lv, (::bbbb::yy340*), 0, "_ZN4bbbb6zz1340E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1340E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1340E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1340E(Test__ZN4bbbb6zz1340E, "_ZN4bbbb6zz1340E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy340E;
static Base_Class bases__ZN4bbbb6zz1340E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy340E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1340E = {  "_ZN4bbbb6zz1340E", // class name
  bases__ZN4bbbb6zz1340E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2340  : ::bbbb::yy340 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2340E) C1{ BC2{ BC3{ BC4{} FL} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2340E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2340E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz2340E, buf);
    ::bbbb::zz2340 &lv = *(new (buf) ::bbbb::zz2340());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2340E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2340E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz2340E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz2340E");
    check_base_class_offset(lv, (::bbbb::yy340*), 0, "_ZN4bbbb6zz2340E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2340E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2340E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2340E(Test__ZN4bbbb6zz2340E, "_ZN4bbbb6zz2340E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy340E;
static Base_Class bases__ZN4bbbb6zz2340E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy340E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2340E = {  "_ZN4bbbb6zz2340E", // class name
  bases__ZN4bbbb6zz2340E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3340  : ::bbbb::yy340 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3340E) C1{ BC2{ BC3{ BC4{} FL} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3340E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3340E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3340E, buf);
    ::bbbb::zz3340 &lv = *(new (buf) ::bbbb::zz3340());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3340E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3340E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz3340E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz3340E");
    check_base_class_offset(lv, (::bbbb::yy340*), 0, "_ZN4bbbb6zz3340E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3340E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3340E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3340E(Test__ZN4bbbb6zz3340E, "_ZN4bbbb6zz3340E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy340E;
static Base_Class bases__ZN4bbbb6zz3340E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy340E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3340E = {  "_ZN4bbbb6zz3340E", // class name
  bases__ZN4bbbb6zz3340E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4340  : ::bbbb::yy340 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4340E) C1{ BC2{ BC3{ BC4{} FL} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4340E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4340E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4340E, buf);
    ::bbbb::zz4340 &lv = *(new (buf) ::bbbb::zz4340());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4340E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4340E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz4340E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy340*), 0, "_ZN4bbbb6zz4340E");
    check_base_class_offset(lv, (::bbbb::yy340*), 0, "_ZN4bbbb6zz4340E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4340E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4340E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4340E(Test__ZN4bbbb6zz4340E, "_ZN4bbbb6zz4340E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy340E;
static Base_Class bases__ZN4bbbb6zz4340E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy340E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4340E = {  "_ZN4bbbb6zz4340E", // class name
  bases__ZN4bbbb6zz4340E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy440  : ::bbbb::xx40 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy440E) C1{ BC2{ BC3{} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy440E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy440E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy440E, buf);
    ::bbbb::yy440 &lv = *(new (buf) ::bbbb::yy440());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy440E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy440E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*), 0, "_ZN4bbbb5yy440E");
    check_base_class_offset(lv, (::bbbb::xx40*), 0, "_ZN4bbbb5yy440E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy440E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy440E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy440E(Test__ZN4bbbb5yy440E, "_ZN4bbbb5yy440E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
static Base_Class bases__ZN4bbbb5yy440E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy440E = {  "_ZN4bbbb5yy440E", // class name
  bases__ZN4bbbb5yy440E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0440  : ::bbbb::yy440 {
};
//SIG(1 _ZN4bbbb6zz0440E) C1{ BC2{ BC3{ BC4{} FL} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0440E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0440E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0440E, buf);
    ::bbbb::zz0440 &lv = *(new (buf) ::bbbb::zz0440());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0440E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0440E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz0440E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz0440E");
    check_base_class_offset(lv, (::bbbb::yy440*), 0, "_ZN4bbbb6zz0440E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0440E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0440E(Test__ZN4bbbb6zz0440E, "_ZN4bbbb6zz0440E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy440E;
static Base_Class bases__ZN4bbbb6zz0440E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy440E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0440E = {  "_ZN4bbbb6zz0440E", // class name
  bases__ZN4bbbb6zz0440E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1440  : ::bbbb::yy440 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1440E) C1{ BC2{ BC3{ BC4{} FL} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1440E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1440E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1440E, buf);
    ::bbbb::zz1440 &lv = *(new (buf) ::bbbb::zz1440());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1440E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1440E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz1440E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz1440E");
    check_base_class_offset(lv, (::bbbb::yy440*), 0, "_ZN4bbbb6zz1440E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1440E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1440E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1440E(Test__ZN4bbbb6zz1440E, "_ZN4bbbb6zz1440E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy440E;
static Base_Class bases__ZN4bbbb6zz1440E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy440E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1440E = {  "_ZN4bbbb6zz1440E", // class name
  bases__ZN4bbbb6zz1440E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2440  : ::bbbb::yy440 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2440E) C1{ BC2{ BC3{ BC4{} FL} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2440E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2440E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2440E, buf);
    ::bbbb::zz2440 &lv = *(new (buf) ::bbbb::zz2440());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2440E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2440E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz2440E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz2440E");
    check_base_class_offset(lv, (::bbbb::yy440*), 0, "_ZN4bbbb6zz2440E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2440E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2440E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2440E(Test__ZN4bbbb6zz2440E, "_ZN4bbbb6zz2440E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy440E;
static Base_Class bases__ZN4bbbb6zz2440E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy440E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2440E = {  "_ZN4bbbb6zz2440E", // class name
  bases__ZN4bbbb6zz2440E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3440  : ::bbbb::yy440 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3440E) C1{ BC2{ BC3{ BC4{} FL} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3440E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3440E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3440E, buf);
    ::bbbb::zz3440 &lv = *(new (buf) ::bbbb::zz3440());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3440E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3440E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz3440E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz3440E");
    check_base_class_offset(lv, (::bbbb::yy440*), 0, "_ZN4bbbb6zz3440E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3440E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3440E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3440E(Test__ZN4bbbb6zz3440E, "_ZN4bbbb6zz3440E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy440E;
static Base_Class bases__ZN4bbbb6zz3440E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy440E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3440E = {  "_ZN4bbbb6zz3440E", // class name
  bases__ZN4bbbb6zz3440E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4440  : ::bbbb::yy440 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4440E) C1{ BC2{ BC3{ BC4{} FL} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4440E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4440E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4440E, buf);
    ::bbbb::zz4440 &lv = *(new (buf) ::bbbb::zz4440());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4440E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4440E)");
    check_base_class_offset(lv, (::bbbb::ww0*)(::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz4440E");
    check_base_class_offset(lv, (::bbbb::xx40*)(::bbbb::yy440*), 0, "_ZN4bbbb6zz4440E");
    check_base_class_offset(lv, (::bbbb::yy440*), 0, "_ZN4bbbb6zz4440E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4440E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4440E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4440E(Test__ZN4bbbb6zz4440E, "_ZN4bbbb6zz4440E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww0E;
extern Class_Descriptor cd__ZN4bbbb4xx40E;
extern Class_Descriptor cd__ZN4bbbb5yy440E;
static Base_Class bases__ZN4bbbb6zz4440E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww0E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx40E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy440E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4440E = {  "_ZN4bbbb6zz4440E", // class name
  bases__ZN4bbbb6zz4440E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  ww1  {
  char fa;
};
//SIG(-1 _ZN4bbbb3ww1E) C1{ Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb3ww1E()
{
  {
    init_simple_test("_ZN4bbbb3ww1E");
    ::bbbb::ww1 lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb3ww1E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb3ww1E)");
    check_field_offset(lv, fa, 0, "_ZN4bbbb3ww1E.fa");
  }
}
static Arrange_To_Call_Me v_ZN4bbbb3ww1E(Test__ZN4bbbb3ww1E, "_ZN4bbbb3ww1E", 1);

#else // __cplusplus

Class_Descriptor cd__ZN4bbbb3ww1E = {  "_ZN4bbbb3ww1E", // class name
  0,0,//no base classes
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx01  : ::bbbb::ww1 {
};
//SIG(-1 _ZN4bbbb4xx01E) C1{ BC2{ Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx01E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx01E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb4xx01E, buf);
    ::bbbb::xx01 &lv = *(new (buf) ::bbbb::xx01());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb4xx01E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb4xx01E)");
    check_base_class_offset(lv, (::bbbb::ww1*), 0, "_ZN4bbbb4xx01E");
    test_class_info(&lv, &cd__ZN4bbbb4xx01E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx01E(Test__ZN4bbbb4xx01E, "_ZN4bbbb4xx01E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
static Base_Class bases__ZN4bbbb4xx01E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx01E = {  "_ZN4bbbb4xx01E", // class name
  bases__ZN4bbbb4xx01E, 1,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy001  : ::bbbb::xx01 {
};
//SIG(-1 _ZN4bbbb5yy001E) C1{ BC2{ BC3{ Fc}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy001E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy001E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb5yy001E, buf);
    ::bbbb::yy001 &lv = *(new (buf) ::bbbb::yy001());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb5yy001E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb5yy001E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*), 0, "_ZN4bbbb5yy001E");
    check_base_class_offset(lv, (::bbbb::xx01*), 0, "_ZN4bbbb5yy001E");
    test_class_info(&lv, &cd__ZN4bbbb5yy001E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy001E(Test__ZN4bbbb5yy001E, "_ZN4bbbb5yy001E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
static Base_Class bases__ZN4bbbb5yy001E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy001E = {  "_ZN4bbbb5yy001E", // class name
  bases__ZN4bbbb5yy001E, 2,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0001  : ::bbbb::yy001 {
};
//SIG(1 _ZN4bbbb6zz0001E) C1{ BC2{ BC3{ BC4{ Fc}}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0001E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0001E;
  void *lvp;
  {
    char buf[1];
    init_test(&cd__ZN4bbbb6zz0001E, buf);
    ::bbbb::zz0001 &lv = *(new (buf) ::bbbb::zz0001());
    lvp = (void*)&lv;
    check2(sizeof(lv), 1, "sizeof(_ZN4bbbb6zz0001E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz0001E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz0001E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz0001E");
    check_base_class_offset(lv, (::bbbb::yy001*), 0, "_ZN4bbbb6zz0001E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0001E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0001E(Test__ZN4bbbb6zz0001E, "_ZN4bbbb6zz0001E", 1);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy001E;
static Base_Class bases__ZN4bbbb6zz0001E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy001E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0001E = {  "_ZN4bbbb6zz0001E", // class name
  bases__ZN4bbbb6zz0001E, 3,
  0, // no vftv
  0, //no vtt
  1, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1001  : ::bbbb::yy001 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1001E) C1{ BC2{ BC3{ BC4{ Fc}}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1001E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1001E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb6zz1001E, buf);
    ::bbbb::zz1001 &lv = *(new (buf) ::bbbb::zz1001());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz1001E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz1001E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz1001E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz1001E");
    check_base_class_offset(lv, (::bbbb::yy001*), 0, "_ZN4bbbb6zz1001E");
    check_field_offset(lv, fd, 1, "_ZN4bbbb6zz1001E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1001E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1001E(Test__ZN4bbbb6zz1001E, "_ZN4bbbb6zz1001E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy001E;
static Base_Class bases__ZN4bbbb6zz1001E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy001E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1001E = {  "_ZN4bbbb6zz1001E", // class name
  bases__ZN4bbbb6zz1001E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2001  : ::bbbb::yy001 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2001E) C1{ BC2{ BC3{ BC4{ Fc}}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2001E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2001E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz2001E, buf);
    ::bbbb::zz2001 &lv = *(new (buf) ::bbbb::zz2001());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz2001E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2001E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz2001E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz2001E");
    check_base_class_offset(lv, (::bbbb::yy001*), 0, "_ZN4bbbb6zz2001E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz2001E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2001E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2001E(Test__ZN4bbbb6zz2001E, "_ZN4bbbb6zz2001E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy001E;
static Base_Class bases__ZN4bbbb6zz2001E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy001E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2001E = {  "_ZN4bbbb6zz2001E", // class name
  bases__ZN4bbbb6zz2001E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3001  : ::bbbb::yy001 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3001E) C1{ BC2{ BC3{ BC4{ Fc}}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3001E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3001E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3001E, buf);
    ::bbbb::zz3001 &lv = *(new (buf) ::bbbb::zz3001());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3001E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3001E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz3001E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz3001E");
    check_base_class_offset(lv, (::bbbb::yy001*), 0, "_ZN4bbbb6zz3001E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3001E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3001E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3001E(Test__ZN4bbbb6zz3001E, "_ZN4bbbb6zz3001E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy001E;
static Base_Class bases__ZN4bbbb6zz3001E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy001E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3001E = {  "_ZN4bbbb6zz3001E", // class name
  bases__ZN4bbbb6zz3001E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4001  : ::bbbb::yy001 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4001E) C1{ BC2{ BC3{ BC4{ Fc}}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4001E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4001E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4001E, buf);
    ::bbbb::zz4001 &lv = *(new (buf) ::bbbb::zz4001());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4001E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4001E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz4001E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy001*), 0, "_ZN4bbbb6zz4001E");
    check_base_class_offset(lv, (::bbbb::yy001*), 0, "_ZN4bbbb6zz4001E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4001E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4001E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4001E(Test__ZN4bbbb6zz4001E, "_ZN4bbbb6zz4001E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy001E;
static Base_Class bases__ZN4bbbb6zz4001E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy001E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4001E = {  "_ZN4bbbb6zz4001E", // class name
  bases__ZN4bbbb6zz4001E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy101  : ::bbbb::xx01 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy101E) C1{ BC2{ BC3{ Fc}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy101E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy101E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb5yy101E, buf);
    ::bbbb::yy101 &lv = *(new (buf) ::bbbb::yy101());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb5yy101E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb5yy101E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*), 0, "_ZN4bbbb5yy101E");
    check_base_class_offset(lv, (::bbbb::xx01*), 0, "_ZN4bbbb5yy101E");
    check_field_offset(lv, fc, 1, "_ZN4bbbb5yy101E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy101E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy101E(Test__ZN4bbbb5yy101E, "_ZN4bbbb5yy101E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
static Base_Class bases__ZN4bbbb5yy101E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy101E = {  "_ZN4bbbb5yy101E", // class name
  bases__ZN4bbbb5yy101E, 2,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0101  : ::bbbb::yy101 {
};
//SIG(1 _ZN4bbbb6zz0101E) C1{ BC2{ BC3{ BC4{ Fc}} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0101E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0101E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb6zz0101E, buf);
    ::bbbb::zz0101 &lv = *(new (buf) ::bbbb::zz0101());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz0101E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz0101E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz0101E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz0101E");
    check_base_class_offset(lv, (::bbbb::yy101*), 0, "_ZN4bbbb6zz0101E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0101E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0101E(Test__ZN4bbbb6zz0101E, "_ZN4bbbb6zz0101E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy101E;
static Base_Class bases__ZN4bbbb6zz0101E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy101E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0101E = {  "_ZN4bbbb6zz0101E", // class name
  bases__ZN4bbbb6zz0101E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1101  : ::bbbb::yy101 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1101E) C1{ BC2{ BC3{ BC4{ Fc}} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1101E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1101E;
  void *lvp;
  {
    char buf[3];
    init_test(&cd__ZN4bbbb6zz1101E, buf);
    ::bbbb::zz1101 &lv = *(new (buf) ::bbbb::zz1101());
    lvp = (void*)&lv;
    check2(sizeof(lv), 3, "sizeof(_ZN4bbbb6zz1101E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz1101E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz1101E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz1101E");
    check_base_class_offset(lv, (::bbbb::yy101*), 0, "_ZN4bbbb6zz1101E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz1101E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1101E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1101E(Test__ZN4bbbb6zz1101E, "_ZN4bbbb6zz1101E", 3);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy101E;
static Base_Class bases__ZN4bbbb6zz1101E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy101E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1101E = {  "_ZN4bbbb6zz1101E", // class name
  bases__ZN4bbbb6zz1101E, 3,
  0, // no vftv
  0, //no vtt
  3, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2101  : ::bbbb::yy101 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2101E) C1{ BC2{ BC3{ BC4{ Fc}} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2101E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2101E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz2101E, buf);
    ::bbbb::zz2101 &lv = *(new (buf) ::bbbb::zz2101());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz2101E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2101E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz2101E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz2101E");
    check_base_class_offset(lv, (::bbbb::yy101*), 0, "_ZN4bbbb6zz2101E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz2101E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2101E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2101E(Test__ZN4bbbb6zz2101E, "_ZN4bbbb6zz2101E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy101E;
static Base_Class bases__ZN4bbbb6zz2101E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy101E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2101E = {  "_ZN4bbbb6zz2101E", // class name
  bases__ZN4bbbb6zz2101E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3101  : ::bbbb::yy101 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3101E) C1{ BC2{ BC3{ BC4{ Fc}} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3101E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3101E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3101E, buf);
    ::bbbb::zz3101 &lv = *(new (buf) ::bbbb::zz3101());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3101E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3101E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz3101E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz3101E");
    check_base_class_offset(lv, (::bbbb::yy101*), 0, "_ZN4bbbb6zz3101E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3101E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3101E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3101E(Test__ZN4bbbb6zz3101E, "_ZN4bbbb6zz3101E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy101E;
static Base_Class bases__ZN4bbbb6zz3101E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy101E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3101E = {  "_ZN4bbbb6zz3101E", // class name
  bases__ZN4bbbb6zz3101E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4101  : ::bbbb::yy101 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4101E) C1{ BC2{ BC3{ BC4{ Fc}} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4101E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4101E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4101E, buf);
    ::bbbb::zz4101 &lv = *(new (buf) ::bbbb::zz4101());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4101E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4101E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz4101E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy101*), 0, "_ZN4bbbb6zz4101E");
    check_base_class_offset(lv, (::bbbb::yy101*), 0, "_ZN4bbbb6zz4101E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4101E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4101E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4101E(Test__ZN4bbbb6zz4101E, "_ZN4bbbb6zz4101E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy101E;
static Base_Class bases__ZN4bbbb6zz4101E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy101E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4101E = {  "_ZN4bbbb6zz4101E", // class name
  bases__ZN4bbbb6zz4101E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy201  : ::bbbb::xx01 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy201E) C1{ BC2{ BC3{ Fc}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy201E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy201E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy201E, buf);
    ::bbbb::yy201 &lv = *(new (buf) ::bbbb::yy201());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy201E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy201E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*), 0, "_ZN4bbbb5yy201E");
    check_base_class_offset(lv, (::bbbb::xx01*), 0, "_ZN4bbbb5yy201E");
    check_field_offset(lv, fc, 2, "_ZN4bbbb5yy201E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy201E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy201E(Test__ZN4bbbb5yy201E, "_ZN4bbbb5yy201E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
static Base_Class bases__ZN4bbbb5yy201E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy201E = {  "_ZN4bbbb5yy201E", // class name
  bases__ZN4bbbb5yy201E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0201  : ::bbbb::yy201 {
};
//SIG(1 _ZN4bbbb6zz0201E) C1{ BC2{ BC3{ BC4{ Fc}} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0201E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0201E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0201E, buf);
    ::bbbb::zz0201 &lv = *(new (buf) ::bbbb::zz0201());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0201E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0201E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz0201E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz0201E");
    check_base_class_offset(lv, (::bbbb::yy201*), 0, "_ZN4bbbb6zz0201E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0201E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0201E(Test__ZN4bbbb6zz0201E, "_ZN4bbbb6zz0201E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy201E;
static Base_Class bases__ZN4bbbb6zz0201E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy201E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0201E = {  "_ZN4bbbb6zz0201E", // class name
  bases__ZN4bbbb6zz0201E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1201  : ::bbbb::yy201 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1201E) C1{ BC2{ BC3{ BC4{ Fc}} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1201E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1201E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1201E, buf);
    ::bbbb::zz1201 &lv = *(new (buf) ::bbbb::zz1201());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1201E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1201E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz1201E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz1201E");
    check_base_class_offset(lv, (::bbbb::yy201*), 0, "_ZN4bbbb6zz1201E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1201E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1201E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1201E(Test__ZN4bbbb6zz1201E, "_ZN4bbbb6zz1201E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy201E;
static Base_Class bases__ZN4bbbb6zz1201E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy201E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1201E = {  "_ZN4bbbb6zz1201E", // class name
  bases__ZN4bbbb6zz1201E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2201  : ::bbbb::yy201 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2201E) C1{ BC2{ BC3{ BC4{ Fc}} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2201E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2201E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2201E, buf);
    ::bbbb::zz2201 &lv = *(new (buf) ::bbbb::zz2201());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2201E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2201E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz2201E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz2201E");
    check_base_class_offset(lv, (::bbbb::yy201*), 0, "_ZN4bbbb6zz2201E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2201E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2201E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2201E(Test__ZN4bbbb6zz2201E, "_ZN4bbbb6zz2201E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy201E;
static Base_Class bases__ZN4bbbb6zz2201E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy201E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2201E = {  "_ZN4bbbb6zz2201E", // class name
  bases__ZN4bbbb6zz2201E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3201  : ::bbbb::yy201 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3201E) C1{ BC2{ BC3{ BC4{ Fc}} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3201E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3201E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3201E, buf);
    ::bbbb::zz3201 &lv = *(new (buf) ::bbbb::zz3201());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3201E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3201E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz3201E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz3201E");
    check_base_class_offset(lv, (::bbbb::yy201*), 0, "_ZN4bbbb6zz3201E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3201E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3201E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3201E(Test__ZN4bbbb6zz3201E, "_ZN4bbbb6zz3201E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy201E;
static Base_Class bases__ZN4bbbb6zz3201E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy201E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3201E = {  "_ZN4bbbb6zz3201E", // class name
  bases__ZN4bbbb6zz3201E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4201  : ::bbbb::yy201 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4201E) C1{ BC2{ BC3{ BC4{ Fc}} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4201E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4201E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4201E, buf);
    ::bbbb::zz4201 &lv = *(new (buf) ::bbbb::zz4201());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4201E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4201E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz4201E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy201*), 0, "_ZN4bbbb6zz4201E");
    check_base_class_offset(lv, (::bbbb::yy201*), 0, "_ZN4bbbb6zz4201E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4201E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4201E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4201E(Test__ZN4bbbb6zz4201E, "_ZN4bbbb6zz4201E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy201E;
static Base_Class bases__ZN4bbbb6zz4201E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy201E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4201E = {  "_ZN4bbbb6zz4201E", // class name
  bases__ZN4bbbb6zz4201E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy301  : ::bbbb::xx01 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy301E) C1{ BC2{ BC3{ Fc}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy301E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy301E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy301E, buf);
    ::bbbb::yy301 &lv = *(new (buf) ::bbbb::yy301());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy301E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy301E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*), 0, "_ZN4bbbb5yy301E");
    check_base_class_offset(lv, (::bbbb::xx01*), 0, "_ZN4bbbb5yy301E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy301E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy301E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy301E(Test__ZN4bbbb5yy301E, "_ZN4bbbb5yy301E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
static Base_Class bases__ZN4bbbb5yy301E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy301E = {  "_ZN4bbbb5yy301E", // class name
  bases__ZN4bbbb5yy301E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0301  : ::bbbb::yy301 {
};
//SIG(1 _ZN4bbbb6zz0301E) C1{ BC2{ BC3{ BC4{ Fc}} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0301E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0301E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0301E, buf);
    ::bbbb::zz0301 &lv = *(new (buf) ::bbbb::zz0301());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0301E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0301E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz0301E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz0301E");
    check_base_class_offset(lv, (::bbbb::yy301*), 0, "_ZN4bbbb6zz0301E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0301E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0301E(Test__ZN4bbbb6zz0301E, "_ZN4bbbb6zz0301E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy301E;
static Base_Class bases__ZN4bbbb6zz0301E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy301E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0301E = {  "_ZN4bbbb6zz0301E", // class name
  bases__ZN4bbbb6zz0301E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1301  : ::bbbb::yy301 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1301E) C1{ BC2{ BC3{ BC4{ Fc}} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1301E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1301E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1301E, buf);
    ::bbbb::zz1301 &lv = *(new (buf) ::bbbb::zz1301());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1301E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1301E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz1301E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz1301E");
    check_base_class_offset(lv, (::bbbb::yy301*), 0, "_ZN4bbbb6zz1301E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1301E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1301E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1301E(Test__ZN4bbbb6zz1301E, "_ZN4bbbb6zz1301E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy301E;
static Base_Class bases__ZN4bbbb6zz1301E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy301E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1301E = {  "_ZN4bbbb6zz1301E", // class name
  bases__ZN4bbbb6zz1301E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2301  : ::bbbb::yy301 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2301E) C1{ BC2{ BC3{ BC4{ Fc}} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2301E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2301E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2301E, buf);
    ::bbbb::zz2301 &lv = *(new (buf) ::bbbb::zz2301());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2301E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2301E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz2301E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz2301E");
    check_base_class_offset(lv, (::bbbb::yy301*), 0, "_ZN4bbbb6zz2301E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2301E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2301E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2301E(Test__ZN4bbbb6zz2301E, "_ZN4bbbb6zz2301E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy301E;
static Base_Class bases__ZN4bbbb6zz2301E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy301E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2301E = {  "_ZN4bbbb6zz2301E", // class name
  bases__ZN4bbbb6zz2301E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3301  : ::bbbb::yy301 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3301E) C1{ BC2{ BC3{ BC4{ Fc}} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3301E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3301E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3301E, buf);
    ::bbbb::zz3301 &lv = *(new (buf) ::bbbb::zz3301());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3301E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3301E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz3301E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz3301E");
    check_base_class_offset(lv, (::bbbb::yy301*), 0, "_ZN4bbbb6zz3301E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3301E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3301E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3301E(Test__ZN4bbbb6zz3301E, "_ZN4bbbb6zz3301E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy301E;
static Base_Class bases__ZN4bbbb6zz3301E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy301E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3301E = {  "_ZN4bbbb6zz3301E", // class name
  bases__ZN4bbbb6zz3301E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4301  : ::bbbb::yy301 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4301E) C1{ BC2{ BC3{ BC4{ Fc}} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4301E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4301E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4301E, buf);
    ::bbbb::zz4301 &lv = *(new (buf) ::bbbb::zz4301());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4301E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4301E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz4301E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy301*), 0, "_ZN4bbbb6zz4301E");
    check_base_class_offset(lv, (::bbbb::yy301*), 0, "_ZN4bbbb6zz4301E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4301E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4301E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4301E(Test__ZN4bbbb6zz4301E, "_ZN4bbbb6zz4301E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy301E;
static Base_Class bases__ZN4bbbb6zz4301E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy301E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4301E = {  "_ZN4bbbb6zz4301E", // class name
  bases__ZN4bbbb6zz4301E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy401  : ::bbbb::xx01 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy401E) C1{ BC2{ BC3{ Fc}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy401E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy401E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy401E, buf);
    ::bbbb::yy401 &lv = *(new (buf) ::bbbb::yy401());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy401E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy401E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*), 0, "_ZN4bbbb5yy401E");
    check_base_class_offset(lv, (::bbbb::xx01*), 0, "_ZN4bbbb5yy401E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy401E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy401E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy401E(Test__ZN4bbbb5yy401E, "_ZN4bbbb5yy401E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
static Base_Class bases__ZN4bbbb5yy401E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy401E = {  "_ZN4bbbb5yy401E", // class name
  bases__ZN4bbbb5yy401E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0401  : ::bbbb::yy401 {
};
//SIG(1 _ZN4bbbb6zz0401E) C1{ BC2{ BC3{ BC4{ Fc}} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0401E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0401E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0401E, buf);
    ::bbbb::zz0401 &lv = *(new (buf) ::bbbb::zz0401());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0401E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0401E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz0401E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz0401E");
    check_base_class_offset(lv, (::bbbb::yy401*), 0, "_ZN4bbbb6zz0401E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0401E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0401E(Test__ZN4bbbb6zz0401E, "_ZN4bbbb6zz0401E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy401E;
static Base_Class bases__ZN4bbbb6zz0401E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy401E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0401E = {  "_ZN4bbbb6zz0401E", // class name
  bases__ZN4bbbb6zz0401E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1401  : ::bbbb::yy401 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1401E) C1{ BC2{ BC3{ BC4{ Fc}} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1401E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1401E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1401E, buf);
    ::bbbb::zz1401 &lv = *(new (buf) ::bbbb::zz1401());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1401E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1401E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz1401E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz1401E");
    check_base_class_offset(lv, (::bbbb::yy401*), 0, "_ZN4bbbb6zz1401E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1401E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1401E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1401E(Test__ZN4bbbb6zz1401E, "_ZN4bbbb6zz1401E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy401E;
static Base_Class bases__ZN4bbbb6zz1401E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy401E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1401E = {  "_ZN4bbbb6zz1401E", // class name
  bases__ZN4bbbb6zz1401E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2401  : ::bbbb::yy401 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2401E) C1{ BC2{ BC3{ BC4{ Fc}} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2401E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2401E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2401E, buf);
    ::bbbb::zz2401 &lv = *(new (buf) ::bbbb::zz2401());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2401E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2401E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz2401E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz2401E");
    check_base_class_offset(lv, (::bbbb::yy401*), 0, "_ZN4bbbb6zz2401E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2401E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2401E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2401E(Test__ZN4bbbb6zz2401E, "_ZN4bbbb6zz2401E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy401E;
static Base_Class bases__ZN4bbbb6zz2401E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy401E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2401E = {  "_ZN4bbbb6zz2401E", // class name
  bases__ZN4bbbb6zz2401E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3401  : ::bbbb::yy401 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3401E) C1{ BC2{ BC3{ BC4{ Fc}} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3401E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3401E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3401E, buf);
    ::bbbb::zz3401 &lv = *(new (buf) ::bbbb::zz3401());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3401E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3401E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz3401E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz3401E");
    check_base_class_offset(lv, (::bbbb::yy401*), 0, "_ZN4bbbb6zz3401E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3401E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3401E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3401E(Test__ZN4bbbb6zz3401E, "_ZN4bbbb6zz3401E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy401E;
static Base_Class bases__ZN4bbbb6zz3401E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy401E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3401E = {  "_ZN4bbbb6zz3401E", // class name
  bases__ZN4bbbb6zz3401E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4401  : ::bbbb::yy401 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4401E) C1{ BC2{ BC3{ BC4{ Fc}} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4401E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4401E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4401E, buf);
    ::bbbb::zz4401 &lv = *(new (buf) ::bbbb::zz4401());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4401E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4401E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz4401E");
    check_base_class_offset(lv, (::bbbb::xx01*)(::bbbb::yy401*), 0, "_ZN4bbbb6zz4401E");
    check_base_class_offset(lv, (::bbbb::yy401*), 0, "_ZN4bbbb6zz4401E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4401E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4401E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4401E(Test__ZN4bbbb6zz4401E, "_ZN4bbbb6zz4401E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx01E;
extern Class_Descriptor cd__ZN4bbbb5yy401E;
static Base_Class bases__ZN4bbbb6zz4401E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx01E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy401E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4401E = {  "_ZN4bbbb6zz4401E", // class name
  bases__ZN4bbbb6zz4401E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx11  : ::bbbb::ww1 {
  char fb;
};
//SIG(-1 _ZN4bbbb4xx11E) C1{ BC2{ Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx11E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx11E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb4xx11E, buf);
    ::bbbb::xx11 &lv = *(new (buf) ::bbbb::xx11());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb4xx11E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb4xx11E)");
    check_base_class_offset(lv, (::bbbb::ww1*), 0, "_ZN4bbbb4xx11E");
    check_field_offset(lv, fb, 1, "_ZN4bbbb4xx11E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx11E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx11E(Test__ZN4bbbb4xx11E, "_ZN4bbbb4xx11E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
static Base_Class bases__ZN4bbbb4xx11E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx11E = {  "_ZN4bbbb4xx11E", // class name
  bases__ZN4bbbb4xx11E, 1,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy011  : ::bbbb::xx11 {
};
//SIG(-1 _ZN4bbbb5yy011E) C1{ BC2{ BC3{ Fc} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy011E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy011E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb5yy011E, buf);
    ::bbbb::yy011 &lv = *(new (buf) ::bbbb::yy011());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb5yy011E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb5yy011E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*), 0, "_ZN4bbbb5yy011E");
    check_base_class_offset(lv, (::bbbb::xx11*), 0, "_ZN4bbbb5yy011E");
    test_class_info(&lv, &cd__ZN4bbbb5yy011E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy011E(Test__ZN4bbbb5yy011E, "_ZN4bbbb5yy011E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
static Base_Class bases__ZN4bbbb5yy011E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy011E = {  "_ZN4bbbb5yy011E", // class name
  bases__ZN4bbbb5yy011E, 2,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0011  : ::bbbb::yy011 {
};
//SIG(1 _ZN4bbbb6zz0011E) C1{ BC2{ BC3{ BC4{ Fc} Fc}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0011E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0011E;
  void *lvp;
  {
    char buf[2];
    init_test(&cd__ZN4bbbb6zz0011E, buf);
    ::bbbb::zz0011 &lv = *(new (buf) ::bbbb::zz0011());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz0011E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz0011E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz0011E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz0011E");
    check_base_class_offset(lv, (::bbbb::yy011*), 0, "_ZN4bbbb6zz0011E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0011E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0011E(Test__ZN4bbbb6zz0011E, "_ZN4bbbb6zz0011E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy011E;
static Base_Class bases__ZN4bbbb6zz0011E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy011E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0011E = {  "_ZN4bbbb6zz0011E", // class name
  bases__ZN4bbbb6zz0011E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1011  : ::bbbb::yy011 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1011E) C1{ BC2{ BC3{ BC4{ Fc} Fc}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1011E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1011E;
  void *lvp;
  {
    char buf[3];
    init_test(&cd__ZN4bbbb6zz1011E, buf);
    ::bbbb::zz1011 &lv = *(new (buf) ::bbbb::zz1011());
    lvp = (void*)&lv;
    check2(sizeof(lv), 3, "sizeof(_ZN4bbbb6zz1011E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz1011E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz1011E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz1011E");
    check_base_class_offset(lv, (::bbbb::yy011*), 0, "_ZN4bbbb6zz1011E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz1011E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1011E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1011E(Test__ZN4bbbb6zz1011E, "_ZN4bbbb6zz1011E", 3);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy011E;
static Base_Class bases__ZN4bbbb6zz1011E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy011E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1011E = {  "_ZN4bbbb6zz1011E", // class name
  bases__ZN4bbbb6zz1011E, 3,
  0, // no vftv
  0, //no vtt
  3, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2011  : ::bbbb::yy011 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2011E) C1{ BC2{ BC3{ BC4{ Fc} Fc}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2011E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2011E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz2011E, buf);
    ::bbbb::zz2011 &lv = *(new (buf) ::bbbb::zz2011());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz2011E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2011E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz2011E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz2011E");
    check_base_class_offset(lv, (::bbbb::yy011*), 0, "_ZN4bbbb6zz2011E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz2011E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2011E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2011E(Test__ZN4bbbb6zz2011E, "_ZN4bbbb6zz2011E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy011E;
static Base_Class bases__ZN4bbbb6zz2011E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy011E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2011E = {  "_ZN4bbbb6zz2011E", // class name
  bases__ZN4bbbb6zz2011E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3011  : ::bbbb::yy011 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3011E) C1{ BC2{ BC3{ BC4{ Fc} Fc}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3011E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3011E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3011E, buf);
    ::bbbb::zz3011 &lv = *(new (buf) ::bbbb::zz3011());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3011E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3011E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz3011E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz3011E");
    check_base_class_offset(lv, (::bbbb::yy011*), 0, "_ZN4bbbb6zz3011E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3011E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3011E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3011E(Test__ZN4bbbb6zz3011E, "_ZN4bbbb6zz3011E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy011E;
static Base_Class bases__ZN4bbbb6zz3011E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy011E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3011E = {  "_ZN4bbbb6zz3011E", // class name
  bases__ZN4bbbb6zz3011E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4011  : ::bbbb::yy011 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4011E) C1{ BC2{ BC3{ BC4{ Fc} Fc}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4011E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4011E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4011E, buf);
    ::bbbb::zz4011 &lv = *(new (buf) ::bbbb::zz4011());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4011E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4011E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz4011E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy011*), 0, "_ZN4bbbb6zz4011E");
    check_base_class_offset(lv, (::bbbb::yy011*), 0, "_ZN4bbbb6zz4011E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4011E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4011E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4011E(Test__ZN4bbbb6zz4011E, "_ZN4bbbb6zz4011E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy011E;
static Base_Class bases__ZN4bbbb6zz4011E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy011E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4011E = {  "_ZN4bbbb6zz4011E", // class name
  bases__ZN4bbbb6zz4011E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy111  : ::bbbb::xx11 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy111E) C1{ BC2{ BC3{ Fc} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy111E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy111E;
  void *lvp;
  {
    char buf[3];
    init_test(&cd__ZN4bbbb5yy111E, buf);
    ::bbbb::yy111 &lv = *(new (buf) ::bbbb::yy111());
    lvp = (void*)&lv;
    check2(sizeof(lv), 3, "sizeof(_ZN4bbbb5yy111E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb5yy111E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*), 0, "_ZN4bbbb5yy111E");
    check_base_class_offset(lv, (::bbbb::xx11*), 0, "_ZN4bbbb5yy111E");
    check_field_offset(lv, fc, 2, "_ZN4bbbb5yy111E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy111E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy111E(Test__ZN4bbbb5yy111E, "_ZN4bbbb5yy111E", 3);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
static Base_Class bases__ZN4bbbb5yy111E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy111E = {  "_ZN4bbbb5yy111E", // class name
  bases__ZN4bbbb5yy111E, 2,
  0, // no vftv
  0, //no vtt
  3, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0111  : ::bbbb::yy111 {
};
//SIG(1 _ZN4bbbb6zz0111E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0111E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0111E;
  void *lvp;
  {
    char buf[3];
    init_test(&cd__ZN4bbbb6zz0111E, buf);
    ::bbbb::zz0111 &lv = *(new (buf) ::bbbb::zz0111());
    lvp = (void*)&lv;
    check2(sizeof(lv), 3, "sizeof(_ZN4bbbb6zz0111E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz0111E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz0111E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz0111E");
    check_base_class_offset(lv, (::bbbb::yy111*), 0, "_ZN4bbbb6zz0111E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0111E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0111E(Test__ZN4bbbb6zz0111E, "_ZN4bbbb6zz0111E", 3);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy111E;
static Base_Class bases__ZN4bbbb6zz0111E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy111E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0111E = {  "_ZN4bbbb6zz0111E", // class name
  bases__ZN4bbbb6zz0111E, 3,
  0, // no vftv
  0, //no vtt
  3, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1111  : ::bbbb::yy111 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1111E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1111E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1111E;
  void *lvp;
  {
    char buf[4];
    init_test(&cd__ZN4bbbb6zz1111E, buf);
    ::bbbb::zz1111 &lv = *(new (buf) ::bbbb::zz1111());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz1111E)");
    check2(__alignof__(lv), 1, "__alignof__(_ZN4bbbb6zz1111E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz1111E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz1111E");
    check_base_class_offset(lv, (::bbbb::yy111*), 0, "_ZN4bbbb6zz1111E");
    check_field_offset(lv, fd, 3, "_ZN4bbbb6zz1111E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1111E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1111E(Test__ZN4bbbb6zz1111E, "_ZN4bbbb6zz1111E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy111E;
static Base_Class bases__ZN4bbbb6zz1111E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy111E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1111E = {  "_ZN4bbbb6zz1111E", // class name
  bases__ZN4bbbb6zz1111E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2111  : ::bbbb::yy111 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2111E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2111E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2111E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2111E, buf);
    ::bbbb::zz2111 &lv = *(new (buf) ::bbbb::zz2111());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2111E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2111E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz2111E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz2111E");
    check_base_class_offset(lv, (::bbbb::yy111*), 0, "_ZN4bbbb6zz2111E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2111E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2111E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2111E(Test__ZN4bbbb6zz2111E, "_ZN4bbbb6zz2111E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy111E;
static Base_Class bases__ZN4bbbb6zz2111E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy111E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2111E = {  "_ZN4bbbb6zz2111E", // class name
  bases__ZN4bbbb6zz2111E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3111  : ::bbbb::yy111 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3111E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3111E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3111E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3111E, buf);
    ::bbbb::zz3111 &lv = *(new (buf) ::bbbb::zz3111());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3111E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3111E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz3111E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz3111E");
    check_base_class_offset(lv, (::bbbb::yy111*), 0, "_ZN4bbbb6zz3111E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3111E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3111E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3111E(Test__ZN4bbbb6zz3111E, "_ZN4bbbb6zz3111E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy111E;
static Base_Class bases__ZN4bbbb6zz3111E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy111E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3111E = {  "_ZN4bbbb6zz3111E", // class name
  bases__ZN4bbbb6zz3111E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4111  : ::bbbb::yy111 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4111E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4111E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4111E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4111E, buf);
    ::bbbb::zz4111 &lv = *(new (buf) ::bbbb::zz4111());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4111E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4111E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz4111E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy111*), 0, "_ZN4bbbb6zz4111E");
    check_base_class_offset(lv, (::bbbb::yy111*), 0, "_ZN4bbbb6zz4111E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4111E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4111E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4111E(Test__ZN4bbbb6zz4111E, "_ZN4bbbb6zz4111E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy111E;
static Base_Class bases__ZN4bbbb6zz4111E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy111E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4111E = {  "_ZN4bbbb6zz4111E", // class name
  bases__ZN4bbbb6zz4111E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy211  : ::bbbb::xx11 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy211E) C1{ BC2{ BC3{ Fc} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy211E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy211E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy211E, buf);
    ::bbbb::yy211 &lv = *(new (buf) ::bbbb::yy211());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy211E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy211E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*), 0, "_ZN4bbbb5yy211E");
    check_base_class_offset(lv, (::bbbb::xx11*), 0, "_ZN4bbbb5yy211E");
    check_field_offset(lv, fc, 2, "_ZN4bbbb5yy211E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy211E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy211E(Test__ZN4bbbb5yy211E, "_ZN4bbbb5yy211E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
static Base_Class bases__ZN4bbbb5yy211E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy211E = {  "_ZN4bbbb5yy211E", // class name
  bases__ZN4bbbb5yy211E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0211  : ::bbbb::yy211 {
};
//SIG(1 _ZN4bbbb6zz0211E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0211E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0211E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0211E, buf);
    ::bbbb::zz0211 &lv = *(new (buf) ::bbbb::zz0211());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0211E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0211E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz0211E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz0211E");
    check_base_class_offset(lv, (::bbbb::yy211*), 0, "_ZN4bbbb6zz0211E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0211E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0211E(Test__ZN4bbbb6zz0211E, "_ZN4bbbb6zz0211E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy211E;
static Base_Class bases__ZN4bbbb6zz0211E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy211E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0211E = {  "_ZN4bbbb6zz0211E", // class name
  bases__ZN4bbbb6zz0211E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1211  : ::bbbb::yy211 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1211E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1211E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1211E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1211E, buf);
    ::bbbb::zz1211 &lv = *(new (buf) ::bbbb::zz1211());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1211E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1211E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz1211E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz1211E");
    check_base_class_offset(lv, (::bbbb::yy211*), 0, "_ZN4bbbb6zz1211E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1211E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1211E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1211E(Test__ZN4bbbb6zz1211E, "_ZN4bbbb6zz1211E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy211E;
static Base_Class bases__ZN4bbbb6zz1211E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy211E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1211E = {  "_ZN4bbbb6zz1211E", // class name
  bases__ZN4bbbb6zz1211E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2211  : ::bbbb::yy211 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2211E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2211E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2211E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2211E, buf);
    ::bbbb::zz2211 &lv = *(new (buf) ::bbbb::zz2211());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2211E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2211E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz2211E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz2211E");
    check_base_class_offset(lv, (::bbbb::yy211*), 0, "_ZN4bbbb6zz2211E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2211E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2211E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2211E(Test__ZN4bbbb6zz2211E, "_ZN4bbbb6zz2211E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy211E;
static Base_Class bases__ZN4bbbb6zz2211E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy211E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2211E = {  "_ZN4bbbb6zz2211E", // class name
  bases__ZN4bbbb6zz2211E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3211  : ::bbbb::yy211 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3211E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3211E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3211E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3211E, buf);
    ::bbbb::zz3211 &lv = *(new (buf) ::bbbb::zz3211());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3211E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3211E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz3211E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz3211E");
    check_base_class_offset(lv, (::bbbb::yy211*), 0, "_ZN4bbbb6zz3211E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3211E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3211E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3211E(Test__ZN4bbbb6zz3211E, "_ZN4bbbb6zz3211E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy211E;
static Base_Class bases__ZN4bbbb6zz3211E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy211E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3211E = {  "_ZN4bbbb6zz3211E", // class name
  bases__ZN4bbbb6zz3211E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4211  : ::bbbb::yy211 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4211E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4211E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4211E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4211E, buf);
    ::bbbb::zz4211 &lv = *(new (buf) ::bbbb::zz4211());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4211E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4211E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz4211E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy211*), 0, "_ZN4bbbb6zz4211E");
    check_base_class_offset(lv, (::bbbb::yy211*), 0, "_ZN4bbbb6zz4211E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4211E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4211E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4211E(Test__ZN4bbbb6zz4211E, "_ZN4bbbb6zz4211E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy211E;
static Base_Class bases__ZN4bbbb6zz4211E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy211E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4211E = {  "_ZN4bbbb6zz4211E", // class name
  bases__ZN4bbbb6zz4211E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy311  : ::bbbb::xx11 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy311E) C1{ BC2{ BC3{ Fc} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy311E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy311E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy311E, buf);
    ::bbbb::yy311 &lv = *(new (buf) ::bbbb::yy311());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy311E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy311E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*), 0, "_ZN4bbbb5yy311E");
    check_base_class_offset(lv, (::bbbb::xx11*), 0, "_ZN4bbbb5yy311E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy311E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy311E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy311E(Test__ZN4bbbb5yy311E, "_ZN4bbbb5yy311E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
static Base_Class bases__ZN4bbbb5yy311E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy311E = {  "_ZN4bbbb5yy311E", // class name
  bases__ZN4bbbb5yy311E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0311  : ::bbbb::yy311 {
};
//SIG(1 _ZN4bbbb6zz0311E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0311E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0311E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0311E, buf);
    ::bbbb::zz0311 &lv = *(new (buf) ::bbbb::zz0311());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0311E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0311E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz0311E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz0311E");
    check_base_class_offset(lv, (::bbbb::yy311*), 0, "_ZN4bbbb6zz0311E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0311E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0311E(Test__ZN4bbbb6zz0311E, "_ZN4bbbb6zz0311E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy311E;
static Base_Class bases__ZN4bbbb6zz0311E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy311E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0311E = {  "_ZN4bbbb6zz0311E", // class name
  bases__ZN4bbbb6zz0311E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1311  : ::bbbb::yy311 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1311E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1311E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1311E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1311E, buf);
    ::bbbb::zz1311 &lv = *(new (buf) ::bbbb::zz1311());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1311E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1311E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz1311E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz1311E");
    check_base_class_offset(lv, (::bbbb::yy311*), 0, "_ZN4bbbb6zz1311E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1311E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1311E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1311E(Test__ZN4bbbb6zz1311E, "_ZN4bbbb6zz1311E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy311E;
static Base_Class bases__ZN4bbbb6zz1311E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy311E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1311E = {  "_ZN4bbbb6zz1311E", // class name
  bases__ZN4bbbb6zz1311E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2311  : ::bbbb::yy311 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2311E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2311E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2311E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2311E, buf);
    ::bbbb::zz2311 &lv = *(new (buf) ::bbbb::zz2311());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2311E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2311E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz2311E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz2311E");
    check_base_class_offset(lv, (::bbbb::yy311*), 0, "_ZN4bbbb6zz2311E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2311E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2311E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2311E(Test__ZN4bbbb6zz2311E, "_ZN4bbbb6zz2311E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy311E;
static Base_Class bases__ZN4bbbb6zz2311E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy311E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2311E = {  "_ZN4bbbb6zz2311E", // class name
  bases__ZN4bbbb6zz2311E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3311  : ::bbbb::yy311 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3311E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3311E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3311E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3311E, buf);
    ::bbbb::zz3311 &lv = *(new (buf) ::bbbb::zz3311());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3311E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3311E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz3311E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz3311E");
    check_base_class_offset(lv, (::bbbb::yy311*), 0, "_ZN4bbbb6zz3311E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3311E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3311E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3311E(Test__ZN4bbbb6zz3311E, "_ZN4bbbb6zz3311E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy311E;
static Base_Class bases__ZN4bbbb6zz3311E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy311E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3311E = {  "_ZN4bbbb6zz3311E", // class name
  bases__ZN4bbbb6zz3311E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4311  : ::bbbb::yy311 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4311E) C1{ BC2{ BC3{ BC4{ Fc} Fc} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4311E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4311E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4311E, buf);
    ::bbbb::zz4311 &lv = *(new (buf) ::bbbb::zz4311());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4311E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4311E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz4311E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy311*), 0, "_ZN4bbbb6zz4311E");
    check_base_class_offset(lv, (::bbbb::yy311*), 0, "_ZN4bbbb6zz4311E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4311E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4311E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4311E(Test__ZN4bbbb6zz4311E, "_ZN4bbbb6zz4311E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy311E;
static Base_Class bases__ZN4bbbb6zz4311E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy311E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4311E = {  "_ZN4bbbb6zz4311E", // class name
  bases__ZN4bbbb6zz4311E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy411  : ::bbbb::xx11 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy411E) C1{ BC2{ BC3{ Fc} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy411E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy411E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy411E, buf);
    ::bbbb::yy411 &lv = *(new (buf) ::bbbb::yy411());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy411E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy411E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*), 0, "_ZN4bbbb5yy411E");
    check_base_class_offset(lv, (::bbbb::xx11*), 0, "_ZN4bbbb5yy411E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy411E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy411E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy411E(Test__ZN4bbbb5yy411E, "_ZN4bbbb5yy411E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
static Base_Class bases__ZN4bbbb5yy411E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy411E = {  "_ZN4bbbb5yy411E", // class name
  bases__ZN4bbbb5yy411E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0411  : ::bbbb::yy411 {
};
//SIG(1 _ZN4bbbb6zz0411E) C1{ BC2{ BC3{ BC4{ Fc} Fc} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0411E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0411E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0411E, buf);
    ::bbbb::zz0411 &lv = *(new (buf) ::bbbb::zz0411());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0411E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0411E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz0411E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz0411E");
    check_base_class_offset(lv, (::bbbb::yy411*), 0, "_ZN4bbbb6zz0411E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0411E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0411E(Test__ZN4bbbb6zz0411E, "_ZN4bbbb6zz0411E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy411E;
static Base_Class bases__ZN4bbbb6zz0411E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy411E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0411E = {  "_ZN4bbbb6zz0411E", // class name
  bases__ZN4bbbb6zz0411E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1411  : ::bbbb::yy411 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1411E) C1{ BC2{ BC3{ BC4{ Fc} Fc} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1411E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1411E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1411E, buf);
    ::bbbb::zz1411 &lv = *(new (buf) ::bbbb::zz1411());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1411E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1411E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz1411E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz1411E");
    check_base_class_offset(lv, (::bbbb::yy411*), 0, "_ZN4bbbb6zz1411E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1411E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1411E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1411E(Test__ZN4bbbb6zz1411E, "_ZN4bbbb6zz1411E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy411E;
static Base_Class bases__ZN4bbbb6zz1411E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy411E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1411E = {  "_ZN4bbbb6zz1411E", // class name
  bases__ZN4bbbb6zz1411E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2411  : ::bbbb::yy411 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2411E) C1{ BC2{ BC3{ BC4{ Fc} Fc} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2411E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2411E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2411E, buf);
    ::bbbb::zz2411 &lv = *(new (buf) ::bbbb::zz2411());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2411E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2411E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz2411E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz2411E");
    check_base_class_offset(lv, (::bbbb::yy411*), 0, "_ZN4bbbb6zz2411E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2411E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2411E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2411E(Test__ZN4bbbb6zz2411E, "_ZN4bbbb6zz2411E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy411E;
static Base_Class bases__ZN4bbbb6zz2411E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy411E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2411E = {  "_ZN4bbbb6zz2411E", // class name
  bases__ZN4bbbb6zz2411E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3411  : ::bbbb::yy411 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3411E) C1{ BC2{ BC3{ BC4{ Fc} Fc} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3411E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3411E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3411E, buf);
    ::bbbb::zz3411 &lv = *(new (buf) ::bbbb::zz3411());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3411E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3411E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz3411E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz3411E");
    check_base_class_offset(lv, (::bbbb::yy411*), 0, "_ZN4bbbb6zz3411E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3411E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3411E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3411E(Test__ZN4bbbb6zz3411E, "_ZN4bbbb6zz3411E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy411E;
static Base_Class bases__ZN4bbbb6zz3411E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy411E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3411E = {  "_ZN4bbbb6zz3411E", // class name
  bases__ZN4bbbb6zz3411E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4411  : ::bbbb::yy411 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4411E) C1{ BC2{ BC3{ BC4{ Fc} Fc} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4411E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4411E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4411E, buf);
    ::bbbb::zz4411 &lv = *(new (buf) ::bbbb::zz4411());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4411E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4411E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz4411E");
    check_base_class_offset(lv, (::bbbb::xx11*)(::bbbb::yy411*), 0, "_ZN4bbbb6zz4411E");
    check_base_class_offset(lv, (::bbbb::yy411*), 0, "_ZN4bbbb6zz4411E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4411E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4411E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4411E(Test__ZN4bbbb6zz4411E, "_ZN4bbbb6zz4411E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx11E;
extern Class_Descriptor cd__ZN4bbbb5yy411E;
static Base_Class bases__ZN4bbbb6zz4411E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx11E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy411E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4411E = {  "_ZN4bbbb6zz4411E", // class name
  bases__ZN4bbbb6zz4411E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx21  : ::bbbb::ww1 {
  short fb;
};
//SIG(-1 _ZN4bbbb4xx21E) C1{ BC2{ Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx21E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx21E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb4xx21E, buf);
    ::bbbb::xx21 &lv = *(new (buf) ::bbbb::xx21());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb4xx21E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb4xx21E)");
    check_base_class_offset(lv, (::bbbb::ww1*), 0, "_ZN4bbbb4xx21E");
    check_field_offset(lv, fb, 2, "_ZN4bbbb4xx21E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx21E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx21E(Test__ZN4bbbb4xx21E, "_ZN4bbbb4xx21E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
static Base_Class bases__ZN4bbbb4xx21E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx21E = {  "_ZN4bbbb4xx21E", // class name
  bases__ZN4bbbb4xx21E, 1,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy021  : ::bbbb::xx21 {
};
//SIG(-1 _ZN4bbbb5yy021E) C1{ BC2{ BC3{ Fc} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy021E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy021E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy021E, buf);
    ::bbbb::yy021 &lv = *(new (buf) ::bbbb::yy021());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy021E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy021E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*), 0, "_ZN4bbbb5yy021E");
    check_base_class_offset(lv, (::bbbb::xx21*), 0, "_ZN4bbbb5yy021E");
    test_class_info(&lv, &cd__ZN4bbbb5yy021E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy021E(Test__ZN4bbbb5yy021E, "_ZN4bbbb5yy021E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
static Base_Class bases__ZN4bbbb5yy021E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy021E = {  "_ZN4bbbb5yy021E", // class name
  bases__ZN4bbbb5yy021E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0021  : ::bbbb::yy021 {
};
//SIG(1 _ZN4bbbb6zz0021E) C1{ BC2{ BC3{ BC4{ Fc} Fs}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0021E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0021E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0021E, buf);
    ::bbbb::zz0021 &lv = *(new (buf) ::bbbb::zz0021());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0021E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0021E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz0021E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz0021E");
    check_base_class_offset(lv, (::bbbb::yy021*), 0, "_ZN4bbbb6zz0021E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0021E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0021E(Test__ZN4bbbb6zz0021E, "_ZN4bbbb6zz0021E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy021E;
static Base_Class bases__ZN4bbbb6zz0021E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy021E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0021E = {  "_ZN4bbbb6zz0021E", // class name
  bases__ZN4bbbb6zz0021E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1021  : ::bbbb::yy021 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1021E) C1{ BC2{ BC3{ BC4{ Fc} Fs}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1021E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1021E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1021E, buf);
    ::bbbb::zz1021 &lv = *(new (buf) ::bbbb::zz1021());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1021E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1021E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz1021E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz1021E");
    check_base_class_offset(lv, (::bbbb::yy021*), 0, "_ZN4bbbb6zz1021E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1021E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1021E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1021E(Test__ZN4bbbb6zz1021E, "_ZN4bbbb6zz1021E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy021E;
static Base_Class bases__ZN4bbbb6zz1021E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy021E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1021E = {  "_ZN4bbbb6zz1021E", // class name
  bases__ZN4bbbb6zz1021E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2021  : ::bbbb::yy021 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2021E) C1{ BC2{ BC3{ BC4{ Fc} Fs}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2021E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2021E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2021E, buf);
    ::bbbb::zz2021 &lv = *(new (buf) ::bbbb::zz2021());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2021E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2021E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz2021E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz2021E");
    check_base_class_offset(lv, (::bbbb::yy021*), 0, "_ZN4bbbb6zz2021E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2021E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2021E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2021E(Test__ZN4bbbb6zz2021E, "_ZN4bbbb6zz2021E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy021E;
static Base_Class bases__ZN4bbbb6zz2021E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy021E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2021E = {  "_ZN4bbbb6zz2021E", // class name
  bases__ZN4bbbb6zz2021E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3021  : ::bbbb::yy021 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3021E) C1{ BC2{ BC3{ BC4{ Fc} Fs}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3021E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3021E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3021E, buf);
    ::bbbb::zz3021 &lv = *(new (buf) ::bbbb::zz3021());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3021E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3021E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz3021E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz3021E");
    check_base_class_offset(lv, (::bbbb::yy021*), 0, "_ZN4bbbb6zz3021E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3021E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3021E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3021E(Test__ZN4bbbb6zz3021E, "_ZN4bbbb6zz3021E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy021E;
static Base_Class bases__ZN4bbbb6zz3021E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy021E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3021E = {  "_ZN4bbbb6zz3021E", // class name
  bases__ZN4bbbb6zz3021E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4021  : ::bbbb::yy021 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4021E) C1{ BC2{ BC3{ BC4{ Fc} Fs}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4021E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4021E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4021E, buf);
    ::bbbb::zz4021 &lv = *(new (buf) ::bbbb::zz4021());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4021E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4021E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz4021E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy021*), 0, "_ZN4bbbb6zz4021E");
    check_base_class_offset(lv, (::bbbb::yy021*), 0, "_ZN4bbbb6zz4021E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4021E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4021E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4021E(Test__ZN4bbbb6zz4021E, "_ZN4bbbb6zz4021E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy021E;
static Base_Class bases__ZN4bbbb6zz4021E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy021E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4021E = {  "_ZN4bbbb6zz4021E", // class name
  bases__ZN4bbbb6zz4021E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy121  : ::bbbb::xx21 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy121E) C1{ BC2{ BC3{ Fc} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy121E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy121E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb5yy121E, buf);
    ::bbbb::yy121 &lv = *(new (buf) ::bbbb::yy121());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb5yy121E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy121E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*), 0, "_ZN4bbbb5yy121E");
    check_base_class_offset(lv, (::bbbb::xx21*), 0, "_ZN4bbbb5yy121E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy121E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy121E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy121E(Test__ZN4bbbb5yy121E, "_ZN4bbbb5yy121E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
static Base_Class bases__ZN4bbbb5yy121E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy121E = {  "_ZN4bbbb5yy121E", // class name
  bases__ZN4bbbb5yy121E, 2,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0121  : ::bbbb::yy121 {
};
//SIG(1 _ZN4bbbb6zz0121E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0121E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0121E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz0121E, buf);
    ::bbbb::zz0121 &lv = *(new (buf) ::bbbb::zz0121());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz0121E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0121E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz0121E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz0121E");
    check_base_class_offset(lv, (::bbbb::yy121*), 0, "_ZN4bbbb6zz0121E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0121E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0121E(Test__ZN4bbbb6zz0121E, "_ZN4bbbb6zz0121E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy121E;
static Base_Class bases__ZN4bbbb6zz0121E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy121E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0121E = {  "_ZN4bbbb6zz0121E", // class name
  bases__ZN4bbbb6zz0121E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1121  : ::bbbb::yy121 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1121E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1121E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1121E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1121E, buf);
    ::bbbb::zz1121 &lv = *(new (buf) ::bbbb::zz1121());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1121E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1121E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz1121E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz1121E");
    check_base_class_offset(lv, (::bbbb::yy121*), 0, "_ZN4bbbb6zz1121E");
    check_field_offset(lv, fd, 5, "_ZN4bbbb6zz1121E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1121E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1121E(Test__ZN4bbbb6zz1121E, "_ZN4bbbb6zz1121E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy121E;
static Base_Class bases__ZN4bbbb6zz1121E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy121E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1121E = {  "_ZN4bbbb6zz1121E", // class name
  bases__ZN4bbbb6zz1121E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2121  : ::bbbb::yy121 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2121E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2121E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2121E;
  void *lvp;
  {
    short buf[5];
    init_test(&cd__ZN4bbbb6zz2121E, buf);
    ::bbbb::zz2121 &lv = *(new (buf) ::bbbb::zz2121());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2121E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2121E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz2121E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz2121E");
    check_base_class_offset(lv, (::bbbb::yy121*), 0, "_ZN4bbbb6zz2121E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2121E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2121E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2121E(Test__ZN4bbbb6zz2121E, "_ZN4bbbb6zz2121E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy121E;
static Base_Class bases__ZN4bbbb6zz2121E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy121E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2121E = {  "_ZN4bbbb6zz2121E", // class name
  bases__ZN4bbbb6zz2121E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3121  : ::bbbb::yy121 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3121E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3121E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3121E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3121E, buf);
    ::bbbb::zz3121 &lv = *(new (buf) ::bbbb::zz3121());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3121E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3121E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz3121E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz3121E");
    check_base_class_offset(lv, (::bbbb::yy121*), 0, "_ZN4bbbb6zz3121E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3121E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3121E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3121E(Test__ZN4bbbb6zz3121E, "_ZN4bbbb6zz3121E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy121E;
static Base_Class bases__ZN4bbbb6zz3121E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy121E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3121E = {  "_ZN4bbbb6zz3121E", // class name
  bases__ZN4bbbb6zz3121E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4121  : ::bbbb::yy121 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4121E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4121E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4121E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4121E, buf);
    ::bbbb::zz4121 &lv = *(new (buf) ::bbbb::zz4121());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4121E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4121E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz4121E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy121*), 0, "_ZN4bbbb6zz4121E");
    check_base_class_offset(lv, (::bbbb::yy121*), 0, "_ZN4bbbb6zz4121E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4121E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4121E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4121E(Test__ZN4bbbb6zz4121E, "_ZN4bbbb6zz4121E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy121E;
static Base_Class bases__ZN4bbbb6zz4121E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy121E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4121E = {  "_ZN4bbbb6zz4121E", // class name
  bases__ZN4bbbb6zz4121E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy221  : ::bbbb::xx21 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy221E) C1{ BC2{ BC3{ Fc} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy221E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy221E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb5yy221E, buf);
    ::bbbb::yy221 &lv = *(new (buf) ::bbbb::yy221());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb5yy221E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy221E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*), 0, "_ZN4bbbb5yy221E");
    check_base_class_offset(lv, (::bbbb::xx21*), 0, "_ZN4bbbb5yy221E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy221E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy221E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy221E(Test__ZN4bbbb5yy221E, "_ZN4bbbb5yy221E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
static Base_Class bases__ZN4bbbb5yy221E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy221E = {  "_ZN4bbbb5yy221E", // class name
  bases__ZN4bbbb5yy221E, 2,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0221  : ::bbbb::yy221 {
};
//SIG(1 _ZN4bbbb6zz0221E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0221E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0221E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz0221E, buf);
    ::bbbb::zz0221 &lv = *(new (buf) ::bbbb::zz0221());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz0221E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0221E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz0221E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz0221E");
    check_base_class_offset(lv, (::bbbb::yy221*), 0, "_ZN4bbbb6zz0221E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0221E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0221E(Test__ZN4bbbb6zz0221E, "_ZN4bbbb6zz0221E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy221E;
static Base_Class bases__ZN4bbbb6zz0221E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy221E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0221E = {  "_ZN4bbbb6zz0221E", // class name
  bases__ZN4bbbb6zz0221E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1221  : ::bbbb::yy221 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1221E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1221E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1221E;
  void *lvp;
  {
    short buf[5];
    init_test(&cd__ZN4bbbb6zz1221E, buf);
    ::bbbb::zz1221 &lv = *(new (buf) ::bbbb::zz1221());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1221E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1221E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz1221E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz1221E");
    check_base_class_offset(lv, (::bbbb::yy221*), 0, "_ZN4bbbb6zz1221E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz1221E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1221E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1221E(Test__ZN4bbbb6zz1221E, "_ZN4bbbb6zz1221E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy221E;
static Base_Class bases__ZN4bbbb6zz1221E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy221E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1221E = {  "_ZN4bbbb6zz1221E", // class name
  bases__ZN4bbbb6zz1221E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2221  : ::bbbb::yy221 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2221E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2221E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2221E;
  void *lvp;
  {
    short buf[5];
    init_test(&cd__ZN4bbbb6zz2221E, buf);
    ::bbbb::zz2221 &lv = *(new (buf) ::bbbb::zz2221());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2221E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2221E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz2221E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz2221E");
    check_base_class_offset(lv, (::bbbb::yy221*), 0, "_ZN4bbbb6zz2221E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2221E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2221E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2221E(Test__ZN4bbbb6zz2221E, "_ZN4bbbb6zz2221E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy221E;
static Base_Class bases__ZN4bbbb6zz2221E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy221E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2221E = {  "_ZN4bbbb6zz2221E", // class name
  bases__ZN4bbbb6zz2221E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3221  : ::bbbb::yy221 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3221E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3221E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3221E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3221E, buf);
    ::bbbb::zz3221 &lv = *(new (buf) ::bbbb::zz3221());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3221E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3221E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz3221E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz3221E");
    check_base_class_offset(lv, (::bbbb::yy221*), 0, "_ZN4bbbb6zz3221E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3221E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3221E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3221E(Test__ZN4bbbb6zz3221E, "_ZN4bbbb6zz3221E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy221E;
static Base_Class bases__ZN4bbbb6zz3221E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy221E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3221E = {  "_ZN4bbbb6zz3221E", // class name
  bases__ZN4bbbb6zz3221E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4221  : ::bbbb::yy221 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4221E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4221E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4221E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4221E, buf);
    ::bbbb::zz4221 &lv = *(new (buf) ::bbbb::zz4221());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4221E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4221E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz4221E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy221*), 0, "_ZN4bbbb6zz4221E");
    check_base_class_offset(lv, (::bbbb::yy221*), 0, "_ZN4bbbb6zz4221E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4221E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4221E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4221E(Test__ZN4bbbb6zz4221E, "_ZN4bbbb6zz4221E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy221E;
static Base_Class bases__ZN4bbbb6zz4221E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy221E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4221E = {  "_ZN4bbbb6zz4221E", // class name
  bases__ZN4bbbb6zz4221E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy321  : ::bbbb::xx21 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy321E) C1{ BC2{ BC3{ Fc} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy321E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy321E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy321E, buf);
    ::bbbb::yy321 &lv = *(new (buf) ::bbbb::yy321());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy321E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy321E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*), 0, "_ZN4bbbb5yy321E");
    check_base_class_offset(lv, (::bbbb::xx21*), 0, "_ZN4bbbb5yy321E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy321E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy321E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy321E(Test__ZN4bbbb5yy321E, "_ZN4bbbb5yy321E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
static Base_Class bases__ZN4bbbb5yy321E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy321E = {  "_ZN4bbbb5yy321E", // class name
  bases__ZN4bbbb5yy321E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0321  : ::bbbb::yy321 {
};
//SIG(1 _ZN4bbbb6zz0321E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0321E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0321E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0321E, buf);
    ::bbbb::zz0321 &lv = *(new (buf) ::bbbb::zz0321());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0321E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0321E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz0321E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz0321E");
    check_base_class_offset(lv, (::bbbb::yy321*), 0, "_ZN4bbbb6zz0321E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0321E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0321E(Test__ZN4bbbb6zz0321E, "_ZN4bbbb6zz0321E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy321E;
static Base_Class bases__ZN4bbbb6zz0321E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy321E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0321E = {  "_ZN4bbbb6zz0321E", // class name
  bases__ZN4bbbb6zz0321E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1321  : ::bbbb::yy321 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1321E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1321E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1321E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1321E, buf);
    ::bbbb::zz1321 &lv = *(new (buf) ::bbbb::zz1321());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1321E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1321E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz1321E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz1321E");
    check_base_class_offset(lv, (::bbbb::yy321*), 0, "_ZN4bbbb6zz1321E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1321E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1321E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1321E(Test__ZN4bbbb6zz1321E, "_ZN4bbbb6zz1321E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy321E;
static Base_Class bases__ZN4bbbb6zz1321E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy321E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1321E = {  "_ZN4bbbb6zz1321E", // class name
  bases__ZN4bbbb6zz1321E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2321  : ::bbbb::yy321 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2321E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2321E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2321E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2321E, buf);
    ::bbbb::zz2321 &lv = *(new (buf) ::bbbb::zz2321());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2321E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2321E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz2321E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz2321E");
    check_base_class_offset(lv, (::bbbb::yy321*), 0, "_ZN4bbbb6zz2321E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2321E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2321E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2321E(Test__ZN4bbbb6zz2321E, "_ZN4bbbb6zz2321E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy321E;
static Base_Class bases__ZN4bbbb6zz2321E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy321E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2321E = {  "_ZN4bbbb6zz2321E", // class name
  bases__ZN4bbbb6zz2321E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3321  : ::bbbb::yy321 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3321E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3321E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3321E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3321E, buf);
    ::bbbb::zz3321 &lv = *(new (buf) ::bbbb::zz3321());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3321E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3321E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz3321E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz3321E");
    check_base_class_offset(lv, (::bbbb::yy321*), 0, "_ZN4bbbb6zz3321E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3321E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3321E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3321E(Test__ZN4bbbb6zz3321E, "_ZN4bbbb6zz3321E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy321E;
static Base_Class bases__ZN4bbbb6zz3321E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy321E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3321E = {  "_ZN4bbbb6zz3321E", // class name
  bases__ZN4bbbb6zz3321E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4321  : ::bbbb::yy321 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4321E) C1{ BC2{ BC3{ BC4{ Fc} Fs} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4321E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4321E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4321E, buf);
    ::bbbb::zz4321 &lv = *(new (buf) ::bbbb::zz4321());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4321E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4321E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz4321E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy321*), 0, "_ZN4bbbb6zz4321E");
    check_base_class_offset(lv, (::bbbb::yy321*), 0, "_ZN4bbbb6zz4321E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4321E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4321E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4321E(Test__ZN4bbbb6zz4321E, "_ZN4bbbb6zz4321E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy321E;
static Base_Class bases__ZN4bbbb6zz4321E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy321E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4321E = {  "_ZN4bbbb6zz4321E", // class name
  bases__ZN4bbbb6zz4321E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy421  : ::bbbb::xx21 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy421E) C1{ BC2{ BC3{ Fc} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy421E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy421E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy421E, buf);
    ::bbbb::yy421 &lv = *(new (buf) ::bbbb::yy421());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy421E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy421E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*), 0, "_ZN4bbbb5yy421E");
    check_base_class_offset(lv, (::bbbb::xx21*), 0, "_ZN4bbbb5yy421E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy421E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy421E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy421E(Test__ZN4bbbb5yy421E, "_ZN4bbbb5yy421E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
static Base_Class bases__ZN4bbbb5yy421E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy421E = {  "_ZN4bbbb5yy421E", // class name
  bases__ZN4bbbb5yy421E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0421  : ::bbbb::yy421 {
};
//SIG(1 _ZN4bbbb6zz0421E) C1{ BC2{ BC3{ BC4{ Fc} Fs} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0421E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0421E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0421E, buf);
    ::bbbb::zz0421 &lv = *(new (buf) ::bbbb::zz0421());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0421E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0421E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz0421E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz0421E");
    check_base_class_offset(lv, (::bbbb::yy421*), 0, "_ZN4bbbb6zz0421E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0421E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0421E(Test__ZN4bbbb6zz0421E, "_ZN4bbbb6zz0421E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy421E;
static Base_Class bases__ZN4bbbb6zz0421E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy421E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0421E = {  "_ZN4bbbb6zz0421E", // class name
  bases__ZN4bbbb6zz0421E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1421  : ::bbbb::yy421 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1421E) C1{ BC2{ BC3{ BC4{ Fc} Fs} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1421E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1421E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1421E, buf);
    ::bbbb::zz1421 &lv = *(new (buf) ::bbbb::zz1421());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1421E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1421E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz1421E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz1421E");
    check_base_class_offset(lv, (::bbbb::yy421*), 0, "_ZN4bbbb6zz1421E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1421E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1421E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1421E(Test__ZN4bbbb6zz1421E, "_ZN4bbbb6zz1421E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy421E;
static Base_Class bases__ZN4bbbb6zz1421E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy421E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1421E = {  "_ZN4bbbb6zz1421E", // class name
  bases__ZN4bbbb6zz1421E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2421  : ::bbbb::yy421 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2421E) C1{ BC2{ BC3{ BC4{ Fc} Fs} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2421E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2421E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2421E, buf);
    ::bbbb::zz2421 &lv = *(new (buf) ::bbbb::zz2421());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2421E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2421E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz2421E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz2421E");
    check_base_class_offset(lv, (::bbbb::yy421*), 0, "_ZN4bbbb6zz2421E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2421E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2421E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2421E(Test__ZN4bbbb6zz2421E, "_ZN4bbbb6zz2421E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy421E;
static Base_Class bases__ZN4bbbb6zz2421E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy421E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2421E = {  "_ZN4bbbb6zz2421E", // class name
  bases__ZN4bbbb6zz2421E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3421  : ::bbbb::yy421 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3421E) C1{ BC2{ BC3{ BC4{ Fc} Fs} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3421E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3421E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3421E, buf);
    ::bbbb::zz3421 &lv = *(new (buf) ::bbbb::zz3421());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3421E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3421E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz3421E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz3421E");
    check_base_class_offset(lv, (::bbbb::yy421*), 0, "_ZN4bbbb6zz3421E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3421E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3421E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3421E(Test__ZN4bbbb6zz3421E, "_ZN4bbbb6zz3421E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy421E;
static Base_Class bases__ZN4bbbb6zz3421E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy421E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3421E = {  "_ZN4bbbb6zz3421E", // class name
  bases__ZN4bbbb6zz3421E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4421  : ::bbbb::yy421 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4421E) C1{ BC2{ BC3{ BC4{ Fc} Fs} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4421E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4421E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4421E, buf);
    ::bbbb::zz4421 &lv = *(new (buf) ::bbbb::zz4421());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4421E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4421E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz4421E");
    check_base_class_offset(lv, (::bbbb::xx21*)(::bbbb::yy421*), 0, "_ZN4bbbb6zz4421E");
    check_base_class_offset(lv, (::bbbb::yy421*), 0, "_ZN4bbbb6zz4421E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4421E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4421E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4421E(Test__ZN4bbbb6zz4421E, "_ZN4bbbb6zz4421E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx21E;
extern Class_Descriptor cd__ZN4bbbb5yy421E;
static Base_Class bases__ZN4bbbb6zz4421E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx21E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy421E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4421E = {  "_ZN4bbbb6zz4421E", // class name
  bases__ZN4bbbb6zz4421E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx31  : ::bbbb::ww1 {
  int fb;
};
//SIG(-1 _ZN4bbbb4xx31E) C1{ BC2{ Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx31E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx31E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb4xx31E, buf);
    ::bbbb::xx31 &lv = *(new (buf) ::bbbb::xx31());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb4xx31E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb4xx31E)");
    check_base_class_offset(lv, (::bbbb::ww1*), 0, "_ZN4bbbb4xx31E");
    check_field_offset(lv, fb, 4, "_ZN4bbbb4xx31E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx31E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx31E(Test__ZN4bbbb4xx31E, "_ZN4bbbb4xx31E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
static Base_Class bases__ZN4bbbb4xx31E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx31E = {  "_ZN4bbbb4xx31E", // class name
  bases__ZN4bbbb4xx31E, 1,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy031  : ::bbbb::xx31 {
};
//SIG(-1 _ZN4bbbb5yy031E) C1{ BC2{ BC3{ Fc} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy031E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy031E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy031E, buf);
    ::bbbb::yy031 &lv = *(new (buf) ::bbbb::yy031());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy031E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy031E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*), 0, "_ZN4bbbb5yy031E");
    check_base_class_offset(lv, (::bbbb::xx31*), 0, "_ZN4bbbb5yy031E");
    test_class_info(&lv, &cd__ZN4bbbb5yy031E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy031E(Test__ZN4bbbb5yy031E, "_ZN4bbbb5yy031E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
static Base_Class bases__ZN4bbbb5yy031E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy031E = {  "_ZN4bbbb5yy031E", // class name
  bases__ZN4bbbb5yy031E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0031  : ::bbbb::yy031 {
};
//SIG(1 _ZN4bbbb6zz0031E) C1{ BC2{ BC3{ BC4{ Fc} Fi}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0031E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0031E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0031E, buf);
    ::bbbb::zz0031 &lv = *(new (buf) ::bbbb::zz0031());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0031E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0031E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz0031E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz0031E");
    check_base_class_offset(lv, (::bbbb::yy031*), 0, "_ZN4bbbb6zz0031E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0031E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0031E(Test__ZN4bbbb6zz0031E, "_ZN4bbbb6zz0031E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy031E;
static Base_Class bases__ZN4bbbb6zz0031E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy031E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0031E = {  "_ZN4bbbb6zz0031E", // class name
  bases__ZN4bbbb6zz0031E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1031  : ::bbbb::yy031 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1031E) C1{ BC2{ BC3{ BC4{ Fc} Fi}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1031E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1031E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1031E, buf);
    ::bbbb::zz1031 &lv = *(new (buf) ::bbbb::zz1031());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1031E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1031E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz1031E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz1031E");
    check_base_class_offset(lv, (::bbbb::yy031*), 0, "_ZN4bbbb6zz1031E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1031E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1031E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1031E(Test__ZN4bbbb6zz1031E, "_ZN4bbbb6zz1031E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy031E;
static Base_Class bases__ZN4bbbb6zz1031E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy031E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1031E = {  "_ZN4bbbb6zz1031E", // class name
  bases__ZN4bbbb6zz1031E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2031  : ::bbbb::yy031 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2031E) C1{ BC2{ BC3{ BC4{ Fc} Fi}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2031E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2031E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2031E, buf);
    ::bbbb::zz2031 &lv = *(new (buf) ::bbbb::zz2031());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2031E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2031E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz2031E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz2031E");
    check_base_class_offset(lv, (::bbbb::yy031*), 0, "_ZN4bbbb6zz2031E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2031E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2031E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2031E(Test__ZN4bbbb6zz2031E, "_ZN4bbbb6zz2031E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy031E;
static Base_Class bases__ZN4bbbb6zz2031E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy031E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2031E = {  "_ZN4bbbb6zz2031E", // class name
  bases__ZN4bbbb6zz2031E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3031  : ::bbbb::yy031 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3031E) C1{ BC2{ BC3{ BC4{ Fc} Fi}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3031E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3031E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3031E, buf);
    ::bbbb::zz3031 &lv = *(new (buf) ::bbbb::zz3031());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3031E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3031E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz3031E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz3031E");
    check_base_class_offset(lv, (::bbbb::yy031*), 0, "_ZN4bbbb6zz3031E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3031E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3031E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3031E(Test__ZN4bbbb6zz3031E, "_ZN4bbbb6zz3031E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy031E;
static Base_Class bases__ZN4bbbb6zz3031E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy031E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3031E = {  "_ZN4bbbb6zz3031E", // class name
  bases__ZN4bbbb6zz3031E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4031  : ::bbbb::yy031 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4031E) C1{ BC2{ BC3{ BC4{ Fc} Fi}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4031E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4031E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4031E, buf);
    ::bbbb::zz4031 &lv = *(new (buf) ::bbbb::zz4031());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4031E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4031E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz4031E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy031*), 0, "_ZN4bbbb6zz4031E");
    check_base_class_offset(lv, (::bbbb::yy031*), 0, "_ZN4bbbb6zz4031E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4031E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4031E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4031E(Test__ZN4bbbb6zz4031E, "_ZN4bbbb6zz4031E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy031E;
static Base_Class bases__ZN4bbbb6zz4031E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy031E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4031E = {  "_ZN4bbbb6zz4031E", // class name
  bases__ZN4bbbb6zz4031E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy131  : ::bbbb::xx31 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy131E) C1{ BC2{ BC3{ Fc} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy131E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy131E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy131E, buf);
    ::bbbb::yy131 &lv = *(new (buf) ::bbbb::yy131());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy131E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy131E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*), 0, "_ZN4bbbb5yy131E");
    check_base_class_offset(lv, (::bbbb::xx31*), 0, "_ZN4bbbb5yy131E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy131E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy131E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy131E(Test__ZN4bbbb5yy131E, "_ZN4bbbb5yy131E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
static Base_Class bases__ZN4bbbb5yy131E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy131E = {  "_ZN4bbbb5yy131E", // class name
  bases__ZN4bbbb5yy131E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0131  : ::bbbb::yy131 {
};
//SIG(1 _ZN4bbbb6zz0131E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0131E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0131E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0131E, buf);
    ::bbbb::zz0131 &lv = *(new (buf) ::bbbb::zz0131());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0131E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0131E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz0131E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz0131E");
    check_base_class_offset(lv, (::bbbb::yy131*), 0, "_ZN4bbbb6zz0131E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0131E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0131E(Test__ZN4bbbb6zz0131E, "_ZN4bbbb6zz0131E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy131E;
static Base_Class bases__ZN4bbbb6zz0131E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy131E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0131E = {  "_ZN4bbbb6zz0131E", // class name
  bases__ZN4bbbb6zz0131E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1131  : ::bbbb::yy131 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1131E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1131E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1131E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1131E, buf);
    ::bbbb::zz1131 &lv = *(new (buf) ::bbbb::zz1131());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1131E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1131E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz1131E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz1131E");
    check_base_class_offset(lv, (::bbbb::yy131*), 0, "_ZN4bbbb6zz1131E");
    check_field_offset(lv, fd, 9, "_ZN4bbbb6zz1131E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1131E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1131E(Test__ZN4bbbb6zz1131E, "_ZN4bbbb6zz1131E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy131E;
static Base_Class bases__ZN4bbbb6zz1131E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy131E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1131E = {  "_ZN4bbbb6zz1131E", // class name
  bases__ZN4bbbb6zz1131E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2131  : ::bbbb::yy131 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2131E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2131E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2131E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2131E, buf);
    ::bbbb::zz2131 &lv = *(new (buf) ::bbbb::zz2131());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2131E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2131E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz2131E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz2131E");
    check_base_class_offset(lv, (::bbbb::yy131*), 0, "_ZN4bbbb6zz2131E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2131E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2131E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2131E(Test__ZN4bbbb6zz2131E, "_ZN4bbbb6zz2131E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy131E;
static Base_Class bases__ZN4bbbb6zz2131E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy131E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2131E = {  "_ZN4bbbb6zz2131E", // class name
  bases__ZN4bbbb6zz2131E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3131  : ::bbbb::yy131 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3131E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3131E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3131E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3131E, buf);
    ::bbbb::zz3131 &lv = *(new (buf) ::bbbb::zz3131());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3131E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3131E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz3131E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz3131E");
    check_base_class_offset(lv, (::bbbb::yy131*), 0, "_ZN4bbbb6zz3131E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3131E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3131E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3131E(Test__ZN4bbbb6zz3131E, "_ZN4bbbb6zz3131E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy131E;
static Base_Class bases__ZN4bbbb6zz3131E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy131E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3131E = {  "_ZN4bbbb6zz3131E", // class name
  bases__ZN4bbbb6zz3131E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4131  : ::bbbb::yy131 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4131E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4131E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4131E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4131E, buf);
    ::bbbb::zz4131 &lv = *(new (buf) ::bbbb::zz4131());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4131E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4131E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz4131E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy131*), 0, "_ZN4bbbb6zz4131E");
    check_base_class_offset(lv, (::bbbb::yy131*), 0, "_ZN4bbbb6zz4131E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4131E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4131E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4131E(Test__ZN4bbbb6zz4131E, "_ZN4bbbb6zz4131E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy131E;
static Base_Class bases__ZN4bbbb6zz4131E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy131E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4131E = {  "_ZN4bbbb6zz4131E", // class name
  bases__ZN4bbbb6zz4131E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy231  : ::bbbb::xx31 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy231E) C1{ BC2{ BC3{ Fc} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy231E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy231E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy231E, buf);
    ::bbbb::yy231 &lv = *(new (buf) ::bbbb::yy231());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy231E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy231E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*), 0, "_ZN4bbbb5yy231E");
    check_base_class_offset(lv, (::bbbb::xx31*), 0, "_ZN4bbbb5yy231E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy231E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy231E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy231E(Test__ZN4bbbb5yy231E, "_ZN4bbbb5yy231E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
static Base_Class bases__ZN4bbbb5yy231E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy231E = {  "_ZN4bbbb5yy231E", // class name
  bases__ZN4bbbb5yy231E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0231  : ::bbbb::yy231 {
};
//SIG(1 _ZN4bbbb6zz0231E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0231E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0231E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0231E, buf);
    ::bbbb::zz0231 &lv = *(new (buf) ::bbbb::zz0231());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0231E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0231E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz0231E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz0231E");
    check_base_class_offset(lv, (::bbbb::yy231*), 0, "_ZN4bbbb6zz0231E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0231E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0231E(Test__ZN4bbbb6zz0231E, "_ZN4bbbb6zz0231E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy231E;
static Base_Class bases__ZN4bbbb6zz0231E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy231E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0231E = {  "_ZN4bbbb6zz0231E", // class name
  bases__ZN4bbbb6zz0231E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1231  : ::bbbb::yy231 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1231E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1231E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1231E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1231E, buf);
    ::bbbb::zz1231 &lv = *(new (buf) ::bbbb::zz1231());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1231E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1231E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz1231E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz1231E");
    check_base_class_offset(lv, (::bbbb::yy231*), 0, "_ZN4bbbb6zz1231E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz1231E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1231E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1231E(Test__ZN4bbbb6zz1231E, "_ZN4bbbb6zz1231E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy231E;
static Base_Class bases__ZN4bbbb6zz1231E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy231E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1231E = {  "_ZN4bbbb6zz1231E", // class name
  bases__ZN4bbbb6zz1231E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2231  : ::bbbb::yy231 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2231E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2231E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2231E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2231E, buf);
    ::bbbb::zz2231 &lv = *(new (buf) ::bbbb::zz2231());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2231E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2231E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz2231E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz2231E");
    check_base_class_offset(lv, (::bbbb::yy231*), 0, "_ZN4bbbb6zz2231E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2231E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2231E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2231E(Test__ZN4bbbb6zz2231E, "_ZN4bbbb6zz2231E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy231E;
static Base_Class bases__ZN4bbbb6zz2231E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy231E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2231E = {  "_ZN4bbbb6zz2231E", // class name
  bases__ZN4bbbb6zz2231E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3231  : ::bbbb::yy231 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3231E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3231E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3231E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3231E, buf);
    ::bbbb::zz3231 &lv = *(new (buf) ::bbbb::zz3231());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3231E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3231E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz3231E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz3231E");
    check_base_class_offset(lv, (::bbbb::yy231*), 0, "_ZN4bbbb6zz3231E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3231E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3231E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3231E(Test__ZN4bbbb6zz3231E, "_ZN4bbbb6zz3231E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy231E;
static Base_Class bases__ZN4bbbb6zz3231E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy231E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3231E = {  "_ZN4bbbb6zz3231E", // class name
  bases__ZN4bbbb6zz3231E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4231  : ::bbbb::yy231 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4231E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4231E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4231E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4231E, buf);
    ::bbbb::zz4231 &lv = *(new (buf) ::bbbb::zz4231());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4231E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4231E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz4231E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy231*), 0, "_ZN4bbbb6zz4231E");
    check_base_class_offset(lv, (::bbbb::yy231*), 0, "_ZN4bbbb6zz4231E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4231E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4231E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4231E(Test__ZN4bbbb6zz4231E, "_ZN4bbbb6zz4231E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy231E;
static Base_Class bases__ZN4bbbb6zz4231E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy231E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4231E = {  "_ZN4bbbb6zz4231E", // class name
  bases__ZN4bbbb6zz4231E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy331  : ::bbbb::xx31 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy331E) C1{ BC2{ BC3{ Fc} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy331E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy331E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy331E, buf);
    ::bbbb::yy331 &lv = *(new (buf) ::bbbb::yy331());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy331E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy331E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*), 0, "_ZN4bbbb5yy331E");
    check_base_class_offset(lv, (::bbbb::xx31*), 0, "_ZN4bbbb5yy331E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy331E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy331E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy331E(Test__ZN4bbbb5yy331E, "_ZN4bbbb5yy331E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
static Base_Class bases__ZN4bbbb5yy331E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy331E = {  "_ZN4bbbb5yy331E", // class name
  bases__ZN4bbbb5yy331E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0331  : ::bbbb::yy331 {
};
//SIG(1 _ZN4bbbb6zz0331E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0331E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0331E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0331E, buf);
    ::bbbb::zz0331 &lv = *(new (buf) ::bbbb::zz0331());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0331E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0331E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz0331E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz0331E");
    check_base_class_offset(lv, (::bbbb::yy331*), 0, "_ZN4bbbb6zz0331E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0331E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0331E(Test__ZN4bbbb6zz0331E, "_ZN4bbbb6zz0331E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy331E;
static Base_Class bases__ZN4bbbb6zz0331E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy331E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0331E = {  "_ZN4bbbb6zz0331E", // class name
  bases__ZN4bbbb6zz0331E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1331  : ::bbbb::yy331 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1331E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1331E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1331E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz1331E, buf);
    ::bbbb::zz1331 &lv = *(new (buf) ::bbbb::zz1331());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1331E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1331E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz1331E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz1331E");
    check_base_class_offset(lv, (::bbbb::yy331*), 0, "_ZN4bbbb6zz1331E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1331E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1331E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1331E(Test__ZN4bbbb6zz1331E, "_ZN4bbbb6zz1331E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy331E;
static Base_Class bases__ZN4bbbb6zz1331E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy331E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1331E = {  "_ZN4bbbb6zz1331E", // class name
  bases__ZN4bbbb6zz1331E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2331  : ::bbbb::yy331 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2331E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2331E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2331E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz2331E, buf);
    ::bbbb::zz2331 &lv = *(new (buf) ::bbbb::zz2331());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2331E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2331E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz2331E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz2331E");
    check_base_class_offset(lv, (::bbbb::yy331*), 0, "_ZN4bbbb6zz2331E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2331E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2331E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2331E(Test__ZN4bbbb6zz2331E, "_ZN4bbbb6zz2331E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy331E;
static Base_Class bases__ZN4bbbb6zz2331E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy331E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2331E = {  "_ZN4bbbb6zz2331E", // class name
  bases__ZN4bbbb6zz2331E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3331  : ::bbbb::yy331 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3331E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3331E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3331E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3331E, buf);
    ::bbbb::zz3331 &lv = *(new (buf) ::bbbb::zz3331());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3331E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3331E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz3331E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz3331E");
    check_base_class_offset(lv, (::bbbb::yy331*), 0, "_ZN4bbbb6zz3331E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3331E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3331E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3331E(Test__ZN4bbbb6zz3331E, "_ZN4bbbb6zz3331E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy331E;
static Base_Class bases__ZN4bbbb6zz3331E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy331E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3331E = {  "_ZN4bbbb6zz3331E", // class name
  bases__ZN4bbbb6zz3331E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4331  : ::bbbb::yy331 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4331E) C1{ BC2{ BC3{ BC4{ Fc} Fi} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4331E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4331E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4331E, buf);
    ::bbbb::zz4331 &lv = *(new (buf) ::bbbb::zz4331());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4331E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4331E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz4331E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy331*), 0, "_ZN4bbbb6zz4331E");
    check_base_class_offset(lv, (::bbbb::yy331*), 0, "_ZN4bbbb6zz4331E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4331E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4331E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4331E(Test__ZN4bbbb6zz4331E, "_ZN4bbbb6zz4331E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy331E;
static Base_Class bases__ZN4bbbb6zz4331E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy331E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4331E = {  "_ZN4bbbb6zz4331E", // class name
  bases__ZN4bbbb6zz4331E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy431  : ::bbbb::xx31 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy431E) C1{ BC2{ BC3{ Fc} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy431E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy431E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy431E, buf);
    ::bbbb::yy431 &lv = *(new (buf) ::bbbb::yy431());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy431E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy431E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*), 0, "_ZN4bbbb5yy431E");
    check_base_class_offset(lv, (::bbbb::xx31*), 0, "_ZN4bbbb5yy431E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy431E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy431E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy431E(Test__ZN4bbbb5yy431E, "_ZN4bbbb5yy431E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
static Base_Class bases__ZN4bbbb5yy431E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy431E = {  "_ZN4bbbb5yy431E", // class name
  bases__ZN4bbbb5yy431E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0431  : ::bbbb::yy431 {
};
//SIG(1 _ZN4bbbb6zz0431E) C1{ BC2{ BC3{ BC4{ Fc} Fi} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0431E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0431E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0431E, buf);
    ::bbbb::zz0431 &lv = *(new (buf) ::bbbb::zz0431());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0431E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0431E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz0431E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz0431E");
    check_base_class_offset(lv, (::bbbb::yy431*), 0, "_ZN4bbbb6zz0431E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0431E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0431E(Test__ZN4bbbb6zz0431E, "_ZN4bbbb6zz0431E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy431E;
static Base_Class bases__ZN4bbbb6zz0431E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy431E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0431E = {  "_ZN4bbbb6zz0431E", // class name
  bases__ZN4bbbb6zz0431E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1431  : ::bbbb::yy431 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1431E) C1{ BC2{ BC3{ BC4{ Fc} Fi} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1431E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1431E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1431E, buf);
    ::bbbb::zz1431 &lv = *(new (buf) ::bbbb::zz1431());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1431E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1431E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz1431E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz1431E");
    check_base_class_offset(lv, (::bbbb::yy431*), 0, "_ZN4bbbb6zz1431E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1431E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1431E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1431E(Test__ZN4bbbb6zz1431E, "_ZN4bbbb6zz1431E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy431E;
static Base_Class bases__ZN4bbbb6zz1431E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy431E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1431E = {  "_ZN4bbbb6zz1431E", // class name
  bases__ZN4bbbb6zz1431E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2431  : ::bbbb::yy431 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2431E) C1{ BC2{ BC3{ BC4{ Fc} Fi} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2431E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2431E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2431E, buf);
    ::bbbb::zz2431 &lv = *(new (buf) ::bbbb::zz2431());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2431E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2431E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz2431E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz2431E");
    check_base_class_offset(lv, (::bbbb::yy431*), 0, "_ZN4bbbb6zz2431E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2431E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2431E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2431E(Test__ZN4bbbb6zz2431E, "_ZN4bbbb6zz2431E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy431E;
static Base_Class bases__ZN4bbbb6zz2431E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy431E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2431E = {  "_ZN4bbbb6zz2431E", // class name
  bases__ZN4bbbb6zz2431E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3431  : ::bbbb::yy431 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3431E) C1{ BC2{ BC3{ BC4{ Fc} Fi} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3431E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3431E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3431E, buf);
    ::bbbb::zz3431 &lv = *(new (buf) ::bbbb::zz3431());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3431E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3431E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz3431E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz3431E");
    check_base_class_offset(lv, (::bbbb::yy431*), 0, "_ZN4bbbb6zz3431E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3431E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3431E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3431E(Test__ZN4bbbb6zz3431E, "_ZN4bbbb6zz3431E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy431E;
static Base_Class bases__ZN4bbbb6zz3431E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy431E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3431E = {  "_ZN4bbbb6zz3431E", // class name
  bases__ZN4bbbb6zz3431E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4431  : ::bbbb::yy431 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4431E) C1{ BC2{ BC3{ BC4{ Fc} Fi} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4431E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4431E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4431E, buf);
    ::bbbb::zz4431 &lv = *(new (buf) ::bbbb::zz4431());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4431E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4431E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz4431E");
    check_base_class_offset(lv, (::bbbb::xx31*)(::bbbb::yy431*), 0, "_ZN4bbbb6zz4431E");
    check_base_class_offset(lv, (::bbbb::yy431*), 0, "_ZN4bbbb6zz4431E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4431E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4431E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4431E(Test__ZN4bbbb6zz4431E, "_ZN4bbbb6zz4431E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx31E;
extern Class_Descriptor cd__ZN4bbbb5yy431E;
static Base_Class bases__ZN4bbbb6zz4431E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx31E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy431E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4431E = {  "_ZN4bbbb6zz4431E", // class name
  bases__ZN4bbbb6zz4431E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx41  : ::bbbb::ww1 {
  double fb;
};
//SIG(-1 _ZN4bbbb4xx41E) C1{ BC2{ Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx41E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx41E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb4xx41E, buf);
    ::bbbb::xx41 &lv = *(new (buf) ::bbbb::xx41());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb4xx41E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb4xx41E)");
    check_base_class_offset(lv, (::bbbb::ww1*), 0, "_ZN4bbbb4xx41E");
    check_field_offset(lv, fb, ABISELECT(8,4), "_ZN4bbbb4xx41E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx41E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx41E(Test__ZN4bbbb4xx41E, "_ZN4bbbb4xx41E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
static Base_Class bases__ZN4bbbb4xx41E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx41E = {  "_ZN4bbbb4xx41E", // class name
  bases__ZN4bbbb4xx41E, 1,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy041  : ::bbbb::xx41 {
};
//SIG(-1 _ZN4bbbb5yy041E) C1{ BC2{ BC3{ Fc} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy041E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy041E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy041E, buf);
    ::bbbb::yy041 &lv = *(new (buf) ::bbbb::yy041());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy041E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy041E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*), 0, "_ZN4bbbb5yy041E");
    check_base_class_offset(lv, (::bbbb::xx41*), 0, "_ZN4bbbb5yy041E");
    test_class_info(&lv, &cd__ZN4bbbb5yy041E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy041E(Test__ZN4bbbb5yy041E, "_ZN4bbbb5yy041E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
static Base_Class bases__ZN4bbbb5yy041E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy041E = {  "_ZN4bbbb5yy041E", // class name
  bases__ZN4bbbb5yy041E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0041  : ::bbbb::yy041 {
};
//SIG(1 _ZN4bbbb6zz0041E) C1{ BC2{ BC3{ BC4{ Fc} FL}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0041E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0041E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0041E, buf);
    ::bbbb::zz0041 &lv = *(new (buf) ::bbbb::zz0041());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0041E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0041E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz0041E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz0041E");
    check_base_class_offset(lv, (::bbbb::yy041*), 0, "_ZN4bbbb6zz0041E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0041E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0041E(Test__ZN4bbbb6zz0041E, "_ZN4bbbb6zz0041E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy041E;
static Base_Class bases__ZN4bbbb6zz0041E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy041E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0041E = {  "_ZN4bbbb6zz0041E", // class name
  bases__ZN4bbbb6zz0041E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1041  : ::bbbb::yy041 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1041E) C1{ BC2{ BC3{ BC4{ Fc} FL}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1041E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1041E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1041E, buf);
    ::bbbb::zz1041 &lv = *(new (buf) ::bbbb::zz1041());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1041E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1041E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz1041E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz1041E");
    check_base_class_offset(lv, (::bbbb::yy041*), 0, "_ZN4bbbb6zz1041E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1041E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1041E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1041E(Test__ZN4bbbb6zz1041E, "_ZN4bbbb6zz1041E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy041E;
static Base_Class bases__ZN4bbbb6zz1041E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy041E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1041E = {  "_ZN4bbbb6zz1041E", // class name
  bases__ZN4bbbb6zz1041E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2041  : ::bbbb::yy041 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2041E) C1{ BC2{ BC3{ BC4{ Fc} FL}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2041E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2041E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2041E, buf);
    ::bbbb::zz2041 &lv = *(new (buf) ::bbbb::zz2041());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2041E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2041E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz2041E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz2041E");
    check_base_class_offset(lv, (::bbbb::yy041*), 0, "_ZN4bbbb6zz2041E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2041E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2041E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2041E(Test__ZN4bbbb6zz2041E, "_ZN4bbbb6zz2041E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy041E;
static Base_Class bases__ZN4bbbb6zz2041E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy041E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2041E = {  "_ZN4bbbb6zz2041E", // class name
  bases__ZN4bbbb6zz2041E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3041  : ::bbbb::yy041 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3041E) C1{ BC2{ BC3{ BC4{ Fc} FL}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3041E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3041E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3041E, buf);
    ::bbbb::zz3041 &lv = *(new (buf) ::bbbb::zz3041());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3041E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3041E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz3041E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz3041E");
    check_base_class_offset(lv, (::bbbb::yy041*), 0, "_ZN4bbbb6zz3041E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3041E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3041E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3041E(Test__ZN4bbbb6zz3041E, "_ZN4bbbb6zz3041E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy041E;
static Base_Class bases__ZN4bbbb6zz3041E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy041E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3041E = {  "_ZN4bbbb6zz3041E", // class name
  bases__ZN4bbbb6zz3041E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4041  : ::bbbb::yy041 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4041E) C1{ BC2{ BC3{ BC4{ Fc} FL}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4041E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4041E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4041E, buf);
    ::bbbb::zz4041 &lv = *(new (buf) ::bbbb::zz4041());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4041E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4041E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz4041E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy041*), 0, "_ZN4bbbb6zz4041E");
    check_base_class_offset(lv, (::bbbb::yy041*), 0, "_ZN4bbbb6zz4041E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4041E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4041E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4041E(Test__ZN4bbbb6zz4041E, "_ZN4bbbb6zz4041E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy041E;
static Base_Class bases__ZN4bbbb6zz4041E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy041E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4041E = {  "_ZN4bbbb6zz4041E", // class name
  bases__ZN4bbbb6zz4041E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy141  : ::bbbb::xx41 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy141E) C1{ BC2{ BC3{ Fc} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy141E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy141E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb5yy141E, buf);
    ::bbbb::yy141 &lv = *(new (buf) ::bbbb::yy141());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb5yy141E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy141E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*), 0, "_ZN4bbbb5yy141E");
    check_base_class_offset(lv, (::bbbb::xx41*), 0, "_ZN4bbbb5yy141E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy141E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy141E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy141E(Test__ZN4bbbb5yy141E, "_ZN4bbbb5yy141E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
static Base_Class bases__ZN4bbbb5yy141E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy141E = {  "_ZN4bbbb5yy141E", // class name
  bases__ZN4bbbb5yy141E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0141  : ::bbbb::yy141 {
};
//SIG(1 _ZN4bbbb6zz0141E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0141E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0141E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz0141E, buf);
    ::bbbb::zz0141 &lv = *(new (buf) ::bbbb::zz0141());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz0141E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0141E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz0141E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz0141E");
    check_base_class_offset(lv, (::bbbb::yy141*), 0, "_ZN4bbbb6zz0141E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0141E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0141E(Test__ZN4bbbb6zz0141E, "_ZN4bbbb6zz0141E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy141E;
static Base_Class bases__ZN4bbbb6zz0141E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy141E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0141E = {  "_ZN4bbbb6zz0141E", // class name
  bases__ZN4bbbb6zz0141E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1141  : ::bbbb::yy141 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1141E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1141E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1141E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1141E, buf);
    ::bbbb::zz1141 &lv = *(new (buf) ::bbbb::zz1141());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1141E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1141E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz1141E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz1141E");
    check_base_class_offset(lv, (::bbbb::yy141*), 0, "_ZN4bbbb6zz1141E");
    check_field_offset(lv, fd, ABISELECT(17,13), "_ZN4bbbb6zz1141E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1141E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1141E(Test__ZN4bbbb6zz1141E, "_ZN4bbbb6zz1141E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy141E;
static Base_Class bases__ZN4bbbb6zz1141E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy141E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1141E = {  "_ZN4bbbb6zz1141E", // class name
  bases__ZN4bbbb6zz1141E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2141  : ::bbbb::yy141 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2141E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2141E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2141E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2141E, buf);
    ::bbbb::zz2141 &lv = *(new (buf) ::bbbb::zz2141());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2141E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2141E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz2141E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz2141E");
    check_base_class_offset(lv, (::bbbb::yy141*), 0, "_ZN4bbbb6zz2141E");
    check_field_offset(lv, fd, ABISELECT(18,14), "_ZN4bbbb6zz2141E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2141E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2141E(Test__ZN4bbbb6zz2141E, "_ZN4bbbb6zz2141E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy141E;
static Base_Class bases__ZN4bbbb6zz2141E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy141E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2141E = {  "_ZN4bbbb6zz2141E", // class name
  bases__ZN4bbbb6zz2141E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3141  : ::bbbb::yy141 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3141E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3141E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3141E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3141E, buf);
    ::bbbb::zz3141 &lv = *(new (buf) ::bbbb::zz3141());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3141E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3141E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz3141E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz3141E");
    check_base_class_offset(lv, (::bbbb::yy141*), 0, "_ZN4bbbb6zz3141E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz3141E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3141E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3141E(Test__ZN4bbbb6zz3141E, "_ZN4bbbb6zz3141E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy141E;
static Base_Class bases__ZN4bbbb6zz3141E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy141E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3141E = {  "_ZN4bbbb6zz3141E", // class name
  bases__ZN4bbbb6zz3141E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4141  : ::bbbb::yy141 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4141E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4141E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4141E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz4141E, buf);
    ::bbbb::zz4141 &lv = *(new (buf) ::bbbb::zz4141());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz4141E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4141E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz4141E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy141*), 0, "_ZN4bbbb6zz4141E");
    check_base_class_offset(lv, (::bbbb::yy141*), 0, "_ZN4bbbb6zz4141E");
    check_field_offset(lv, fd, ABISELECT(24,16), "_ZN4bbbb6zz4141E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4141E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4141E(Test__ZN4bbbb6zz4141E, "_ZN4bbbb6zz4141E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy141E;
static Base_Class bases__ZN4bbbb6zz4141E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy141E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4141E = {  "_ZN4bbbb6zz4141E", // class name
  bases__ZN4bbbb6zz4141E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy241  : ::bbbb::xx41 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy241E) C1{ BC2{ BC3{ Fc} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy241E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy241E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb5yy241E, buf);
    ::bbbb::yy241 &lv = *(new (buf) ::bbbb::yy241());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb5yy241E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy241E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*), 0, "_ZN4bbbb5yy241E");
    check_base_class_offset(lv, (::bbbb::xx41*), 0, "_ZN4bbbb5yy241E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy241E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy241E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy241E(Test__ZN4bbbb5yy241E, "_ZN4bbbb5yy241E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
static Base_Class bases__ZN4bbbb5yy241E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy241E = {  "_ZN4bbbb5yy241E", // class name
  bases__ZN4bbbb5yy241E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0241  : ::bbbb::yy241 {
};
//SIG(1 _ZN4bbbb6zz0241E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0241E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0241E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz0241E, buf);
    ::bbbb::zz0241 &lv = *(new (buf) ::bbbb::zz0241());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz0241E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0241E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz0241E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz0241E");
    check_base_class_offset(lv, (::bbbb::yy241*), 0, "_ZN4bbbb6zz0241E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0241E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0241E(Test__ZN4bbbb6zz0241E, "_ZN4bbbb6zz0241E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy241E;
static Base_Class bases__ZN4bbbb6zz0241E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy241E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0241E = {  "_ZN4bbbb6zz0241E", // class name
  bases__ZN4bbbb6zz0241E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1241  : ::bbbb::yy241 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1241E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1241E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1241E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1241E, buf);
    ::bbbb::zz1241 &lv = *(new (buf) ::bbbb::zz1241());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1241E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1241E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz1241E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz1241E");
    check_base_class_offset(lv, (::bbbb::yy241*), 0, "_ZN4bbbb6zz1241E");
    check_field_offset(lv, fd, ABISELECT(18,14), "_ZN4bbbb6zz1241E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1241E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1241E(Test__ZN4bbbb6zz1241E, "_ZN4bbbb6zz1241E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy241E;
static Base_Class bases__ZN4bbbb6zz1241E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy241E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1241E = {  "_ZN4bbbb6zz1241E", // class name
  bases__ZN4bbbb6zz1241E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2241  : ::bbbb::yy241 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2241E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2241E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2241E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2241E, buf);
    ::bbbb::zz2241 &lv = *(new (buf) ::bbbb::zz2241());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2241E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2241E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz2241E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz2241E");
    check_base_class_offset(lv, (::bbbb::yy241*), 0, "_ZN4bbbb6zz2241E");
    check_field_offset(lv, fd, ABISELECT(18,14), "_ZN4bbbb6zz2241E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2241E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2241E(Test__ZN4bbbb6zz2241E, "_ZN4bbbb6zz2241E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy241E;
static Base_Class bases__ZN4bbbb6zz2241E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy241E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2241E = {  "_ZN4bbbb6zz2241E", // class name
  bases__ZN4bbbb6zz2241E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3241  : ::bbbb::yy241 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3241E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3241E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3241E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3241E, buf);
    ::bbbb::zz3241 &lv = *(new (buf) ::bbbb::zz3241());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3241E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3241E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz3241E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz3241E");
    check_base_class_offset(lv, (::bbbb::yy241*), 0, "_ZN4bbbb6zz3241E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz3241E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3241E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3241E(Test__ZN4bbbb6zz3241E, "_ZN4bbbb6zz3241E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy241E;
static Base_Class bases__ZN4bbbb6zz3241E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy241E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3241E = {  "_ZN4bbbb6zz3241E", // class name
  bases__ZN4bbbb6zz3241E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4241  : ::bbbb::yy241 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4241E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4241E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4241E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz4241E, buf);
    ::bbbb::zz4241 &lv = *(new (buf) ::bbbb::zz4241());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz4241E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4241E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz4241E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy241*), 0, "_ZN4bbbb6zz4241E");
    check_base_class_offset(lv, (::bbbb::yy241*), 0, "_ZN4bbbb6zz4241E");
    check_field_offset(lv, fd, ABISELECT(24,16), "_ZN4bbbb6zz4241E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4241E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4241E(Test__ZN4bbbb6zz4241E, "_ZN4bbbb6zz4241E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy241E;
static Base_Class bases__ZN4bbbb6zz4241E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy241E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4241E = {  "_ZN4bbbb6zz4241E", // class name
  bases__ZN4bbbb6zz4241E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy341  : ::bbbb::xx41 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy341E) C1{ BC2{ BC3{ Fc} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy341E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy341E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb5yy341E, buf);
    ::bbbb::yy341 &lv = *(new (buf) ::bbbb::yy341());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb5yy341E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy341E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*), 0, "_ZN4bbbb5yy341E");
    check_base_class_offset(lv, (::bbbb::xx41*), 0, "_ZN4bbbb5yy341E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy341E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy341E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy341E(Test__ZN4bbbb5yy341E, "_ZN4bbbb5yy341E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
static Base_Class bases__ZN4bbbb5yy341E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy341E = {  "_ZN4bbbb5yy341E", // class name
  bases__ZN4bbbb5yy341E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0341  : ::bbbb::yy341 {
};
//SIG(1 _ZN4bbbb6zz0341E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0341E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0341E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz0341E, buf);
    ::bbbb::zz0341 &lv = *(new (buf) ::bbbb::zz0341());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz0341E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0341E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz0341E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz0341E");
    check_base_class_offset(lv, (::bbbb::yy341*), 0, "_ZN4bbbb6zz0341E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0341E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0341E(Test__ZN4bbbb6zz0341E, "_ZN4bbbb6zz0341E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy341E;
static Base_Class bases__ZN4bbbb6zz0341E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy341E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0341E = {  "_ZN4bbbb6zz0341E", // class name
  bases__ZN4bbbb6zz0341E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1341  : ::bbbb::yy341 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1341E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1341E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1341E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1341E, buf);
    ::bbbb::zz1341 &lv = *(new (buf) ::bbbb::zz1341());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1341E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1341E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz1341E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz1341E");
    check_base_class_offset(lv, (::bbbb::yy341*), 0, "_ZN4bbbb6zz1341E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz1341E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1341E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1341E(Test__ZN4bbbb6zz1341E, "_ZN4bbbb6zz1341E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy341E;
static Base_Class bases__ZN4bbbb6zz1341E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy341E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1341E = {  "_ZN4bbbb6zz1341E", // class name
  bases__ZN4bbbb6zz1341E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2341  : ::bbbb::yy341 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2341E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2341E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2341E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2341E, buf);
    ::bbbb::zz2341 &lv = *(new (buf) ::bbbb::zz2341());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2341E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2341E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz2341E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz2341E");
    check_base_class_offset(lv, (::bbbb::yy341*), 0, "_ZN4bbbb6zz2341E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz2341E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2341E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2341E(Test__ZN4bbbb6zz2341E, "_ZN4bbbb6zz2341E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy341E;
static Base_Class bases__ZN4bbbb6zz2341E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy341E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2341E = {  "_ZN4bbbb6zz2341E", // class name
  bases__ZN4bbbb6zz2341E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3341  : ::bbbb::yy341 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3341E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3341E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3341E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3341E, buf);
    ::bbbb::zz3341 &lv = *(new (buf) ::bbbb::zz3341());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3341E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3341E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz3341E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz3341E");
    check_base_class_offset(lv, (::bbbb::yy341*), 0, "_ZN4bbbb6zz3341E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz3341E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3341E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3341E(Test__ZN4bbbb6zz3341E, "_ZN4bbbb6zz3341E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy341E;
static Base_Class bases__ZN4bbbb6zz3341E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy341E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3341E = {  "_ZN4bbbb6zz3341E", // class name
  bases__ZN4bbbb6zz3341E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4341  : ::bbbb::yy341 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4341E) C1{ BC2{ BC3{ BC4{ Fc} FL} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4341E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4341E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz4341E, buf);
    ::bbbb::zz4341 &lv = *(new (buf) ::bbbb::zz4341());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz4341E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4341E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz4341E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy341*), 0, "_ZN4bbbb6zz4341E");
    check_base_class_offset(lv, (::bbbb::yy341*), 0, "_ZN4bbbb6zz4341E");
    check_field_offset(lv, fd, ABISELECT(24,16), "_ZN4bbbb6zz4341E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4341E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4341E(Test__ZN4bbbb6zz4341E, "_ZN4bbbb6zz4341E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy341E;
static Base_Class bases__ZN4bbbb6zz4341E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy341E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4341E = {  "_ZN4bbbb6zz4341E", // class name
  bases__ZN4bbbb6zz4341E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy441  : ::bbbb::xx41 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy441E) C1{ BC2{ BC3{ Fc} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy441E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy441E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb5yy441E, buf);
    ::bbbb::yy441 &lv = *(new (buf) ::bbbb::yy441());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb5yy441E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy441E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*), 0, "_ZN4bbbb5yy441E");
    check_base_class_offset(lv, (::bbbb::xx41*), 0, "_ZN4bbbb5yy441E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy441E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy441E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy441E(Test__ZN4bbbb5yy441E, "_ZN4bbbb5yy441E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
static Base_Class bases__ZN4bbbb5yy441E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy441E = {  "_ZN4bbbb5yy441E", // class name
  bases__ZN4bbbb5yy441E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0441  : ::bbbb::yy441 {
};
//SIG(1 _ZN4bbbb6zz0441E) C1{ BC2{ BC3{ BC4{ Fc} FL} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0441E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0441E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz0441E, buf);
    ::bbbb::zz0441 &lv = *(new (buf) ::bbbb::zz0441());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz0441E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0441E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz0441E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz0441E");
    check_base_class_offset(lv, (::bbbb::yy441*), 0, "_ZN4bbbb6zz0441E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0441E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0441E(Test__ZN4bbbb6zz0441E, "_ZN4bbbb6zz0441E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy441E;
static Base_Class bases__ZN4bbbb6zz0441E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy441E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0441E = {  "_ZN4bbbb6zz0441E", // class name
  bases__ZN4bbbb6zz0441E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1441  : ::bbbb::yy441 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1441E) C1{ BC2{ BC3{ BC4{ Fc} FL} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1441E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1441E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz1441E, buf);
    ::bbbb::zz1441 &lv = *(new (buf) ::bbbb::zz1441());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz1441E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1441E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz1441E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz1441E");
    check_base_class_offset(lv, (::bbbb::yy441*), 0, "_ZN4bbbb6zz1441E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz1441E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1441E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1441E(Test__ZN4bbbb6zz1441E, "_ZN4bbbb6zz1441E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy441E;
static Base_Class bases__ZN4bbbb6zz1441E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy441E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1441E = {  "_ZN4bbbb6zz1441E", // class name
  bases__ZN4bbbb6zz1441E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2441  : ::bbbb::yy441 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2441E) C1{ BC2{ BC3{ BC4{ Fc} FL} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2441E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2441E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz2441E, buf);
    ::bbbb::zz2441 &lv = *(new (buf) ::bbbb::zz2441());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz2441E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2441E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz2441E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz2441E");
    check_base_class_offset(lv, (::bbbb::yy441*), 0, "_ZN4bbbb6zz2441E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz2441E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2441E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2441E(Test__ZN4bbbb6zz2441E, "_ZN4bbbb6zz2441E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy441E;
static Base_Class bases__ZN4bbbb6zz2441E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy441E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2441E = {  "_ZN4bbbb6zz2441E", // class name
  bases__ZN4bbbb6zz2441E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3441  : ::bbbb::yy441 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3441E) C1{ BC2{ BC3{ BC4{ Fc} FL} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3441E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3441E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz3441E, buf);
    ::bbbb::zz3441 &lv = *(new (buf) ::bbbb::zz3441());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz3441E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3441E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz3441E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz3441E");
    check_base_class_offset(lv, (::bbbb::yy441*), 0, "_ZN4bbbb6zz3441E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz3441E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3441E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3441E(Test__ZN4bbbb6zz3441E, "_ZN4bbbb6zz3441E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy441E;
static Base_Class bases__ZN4bbbb6zz3441E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy441E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3441E = {  "_ZN4bbbb6zz3441E", // class name
  bases__ZN4bbbb6zz3441E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4441  : ::bbbb::yy441 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4441E) C1{ BC2{ BC3{ BC4{ Fc} FL} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4441E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4441E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz4441E, buf);
    ::bbbb::zz4441 &lv = *(new (buf) ::bbbb::zz4441());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz4441E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4441E)");
    check_base_class_offset(lv, (::bbbb::ww1*)(::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz4441E");
    check_base_class_offset(lv, (::bbbb::xx41*)(::bbbb::yy441*), 0, "_ZN4bbbb6zz4441E");
    check_base_class_offset(lv, (::bbbb::yy441*), 0, "_ZN4bbbb6zz4441E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz4441E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4441E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4441E(Test__ZN4bbbb6zz4441E, "_ZN4bbbb6zz4441E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww1E;
extern Class_Descriptor cd__ZN4bbbb4xx41E;
extern Class_Descriptor cd__ZN4bbbb5yy441E;
static Base_Class bases__ZN4bbbb6zz4441E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww1E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx41E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy441E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4441E = {  "_ZN4bbbb6zz4441E", // class name
  bases__ZN4bbbb6zz4441E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  ww2  {
  short fa;
};
//SIG(-1 _ZN4bbbb3ww2E) C1{ Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb3ww2E()
{
  {
    init_simple_test("_ZN4bbbb3ww2E");
    ::bbbb::ww2 lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb3ww2E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb3ww2E)");
    check_field_offset(lv, fa, 0, "_ZN4bbbb3ww2E.fa");
  }
}
static Arrange_To_Call_Me v_ZN4bbbb3ww2E(Test__ZN4bbbb3ww2E, "_ZN4bbbb3ww2E", 2);

#else // __cplusplus

Class_Descriptor cd__ZN4bbbb3ww2E = {  "_ZN4bbbb3ww2E", // class name
  0,0,//no base classes
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx02  : ::bbbb::ww2 {
};
//SIG(-1 _ZN4bbbb4xx02E) C1{ BC2{ Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx02E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx02E;
  void *lvp;
  {
    short buf[2];
    init_test(&cd__ZN4bbbb4xx02E, buf);
    ::bbbb::xx02 &lv = *(new (buf) ::bbbb::xx02());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb4xx02E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb4xx02E)");
    check_base_class_offset(lv, (::bbbb::ww2*), 0, "_ZN4bbbb4xx02E");
    test_class_info(&lv, &cd__ZN4bbbb4xx02E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx02E(Test__ZN4bbbb4xx02E, "_ZN4bbbb4xx02E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
static Base_Class bases__ZN4bbbb4xx02E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx02E = {  "_ZN4bbbb4xx02E", // class name
  bases__ZN4bbbb4xx02E, 1,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy002  : ::bbbb::xx02 {
};
//SIG(-1 _ZN4bbbb5yy002E) C1{ BC2{ BC3{ Fs}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy002E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy002E;
  void *lvp;
  {
    short buf[2];
    init_test(&cd__ZN4bbbb5yy002E, buf);
    ::bbbb::yy002 &lv = *(new (buf) ::bbbb::yy002());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb5yy002E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy002E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*), 0, "_ZN4bbbb5yy002E");
    check_base_class_offset(lv, (::bbbb::xx02*), 0, "_ZN4bbbb5yy002E");
    test_class_info(&lv, &cd__ZN4bbbb5yy002E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy002E(Test__ZN4bbbb5yy002E, "_ZN4bbbb5yy002E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
static Base_Class bases__ZN4bbbb5yy002E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy002E = {  "_ZN4bbbb5yy002E", // class name
  bases__ZN4bbbb5yy002E, 2,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0002  : ::bbbb::yy002 {
};
//SIG(1 _ZN4bbbb6zz0002E) C1{ BC2{ BC3{ BC4{ Fs}}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0002E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0002E;
  void *lvp;
  {
    short buf[2];
    init_test(&cd__ZN4bbbb6zz0002E, buf);
    ::bbbb::zz0002 &lv = *(new (buf) ::bbbb::zz0002());
    lvp = (void*)&lv;
    check2(sizeof(lv), 2, "sizeof(_ZN4bbbb6zz0002E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0002E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz0002E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz0002E");
    check_base_class_offset(lv, (::bbbb::yy002*), 0, "_ZN4bbbb6zz0002E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0002E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0002E(Test__ZN4bbbb6zz0002E, "_ZN4bbbb6zz0002E", 2);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy002E;
static Base_Class bases__ZN4bbbb6zz0002E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy002E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0002E = {  "_ZN4bbbb6zz0002E", // class name
  bases__ZN4bbbb6zz0002E, 3,
  0, // no vftv
  0, //no vtt
  2, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1002  : ::bbbb::yy002 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1002E) C1{ BC2{ BC3{ BC4{ Fs}}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1002E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1002E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz1002E, buf);
    ::bbbb::zz1002 &lv = *(new (buf) ::bbbb::zz1002());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz1002E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1002E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz1002E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz1002E");
    check_base_class_offset(lv, (::bbbb::yy002*), 0, "_ZN4bbbb6zz1002E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz1002E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1002E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1002E(Test__ZN4bbbb6zz1002E, "_ZN4bbbb6zz1002E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy002E;
static Base_Class bases__ZN4bbbb6zz1002E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy002E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1002E = {  "_ZN4bbbb6zz1002E", // class name
  bases__ZN4bbbb6zz1002E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2002  : ::bbbb::yy002 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2002E) C1{ BC2{ BC3{ BC4{ Fs}}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2002E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2002E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz2002E, buf);
    ::bbbb::zz2002 &lv = *(new (buf) ::bbbb::zz2002());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz2002E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2002E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz2002E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz2002E");
    check_base_class_offset(lv, (::bbbb::yy002*), 0, "_ZN4bbbb6zz2002E");
    check_field_offset(lv, fd, 2, "_ZN4bbbb6zz2002E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2002E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2002E(Test__ZN4bbbb6zz2002E, "_ZN4bbbb6zz2002E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy002E;
static Base_Class bases__ZN4bbbb6zz2002E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy002E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2002E = {  "_ZN4bbbb6zz2002E", // class name
  bases__ZN4bbbb6zz2002E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3002  : ::bbbb::yy002 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3002E) C1{ BC2{ BC3{ BC4{ Fs}}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3002E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3002E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3002E, buf);
    ::bbbb::zz3002 &lv = *(new (buf) ::bbbb::zz3002());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3002E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3002E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz3002E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz3002E");
    check_base_class_offset(lv, (::bbbb::yy002*), 0, "_ZN4bbbb6zz3002E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3002E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3002E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3002E(Test__ZN4bbbb6zz3002E, "_ZN4bbbb6zz3002E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy002E;
static Base_Class bases__ZN4bbbb6zz3002E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy002E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3002E = {  "_ZN4bbbb6zz3002E", // class name
  bases__ZN4bbbb6zz3002E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4002  : ::bbbb::yy002 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4002E) C1{ BC2{ BC3{ BC4{ Fs}}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4002E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4002E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4002E, buf);
    ::bbbb::zz4002 &lv = *(new (buf) ::bbbb::zz4002());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4002E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4002E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz4002E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy002*), 0, "_ZN4bbbb6zz4002E");
    check_base_class_offset(lv, (::bbbb::yy002*), 0, "_ZN4bbbb6zz4002E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4002E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4002E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4002E(Test__ZN4bbbb6zz4002E, "_ZN4bbbb6zz4002E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy002E;
static Base_Class bases__ZN4bbbb6zz4002E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy002E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4002E = {  "_ZN4bbbb6zz4002E", // class name
  bases__ZN4bbbb6zz4002E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy102  : ::bbbb::xx02 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy102E) C1{ BC2{ BC3{ Fs}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy102E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy102E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy102E, buf);
    ::bbbb::yy102 &lv = *(new (buf) ::bbbb::yy102());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy102E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy102E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*), 0, "_ZN4bbbb5yy102E");
    check_base_class_offset(lv, (::bbbb::xx02*), 0, "_ZN4bbbb5yy102E");
    check_field_offset(lv, fc, 2, "_ZN4bbbb5yy102E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy102E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy102E(Test__ZN4bbbb5yy102E, "_ZN4bbbb5yy102E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
static Base_Class bases__ZN4bbbb5yy102E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy102E = {  "_ZN4bbbb5yy102E", // class name
  bases__ZN4bbbb5yy102E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0102  : ::bbbb::yy102 {
};
//SIG(1 _ZN4bbbb6zz0102E) C1{ BC2{ BC3{ BC4{ Fs}} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0102E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0102E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0102E, buf);
    ::bbbb::zz0102 &lv = *(new (buf) ::bbbb::zz0102());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0102E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0102E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz0102E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz0102E");
    check_base_class_offset(lv, (::bbbb::yy102*), 0, "_ZN4bbbb6zz0102E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0102E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0102E(Test__ZN4bbbb6zz0102E, "_ZN4bbbb6zz0102E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy102E;
static Base_Class bases__ZN4bbbb6zz0102E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy102E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0102E = {  "_ZN4bbbb6zz0102E", // class name
  bases__ZN4bbbb6zz0102E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1102  : ::bbbb::yy102 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1102E) C1{ BC2{ BC3{ BC4{ Fs}} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1102E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1102E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz1102E, buf);
    ::bbbb::zz1102 &lv = *(new (buf) ::bbbb::zz1102());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz1102E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1102E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz1102E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz1102E");
    check_base_class_offset(lv, (::bbbb::yy102*), 0, "_ZN4bbbb6zz1102E");
    check_field_offset(lv, fd, 3, "_ZN4bbbb6zz1102E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1102E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1102E(Test__ZN4bbbb6zz1102E, "_ZN4bbbb6zz1102E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy102E;
static Base_Class bases__ZN4bbbb6zz1102E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy102E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1102E = {  "_ZN4bbbb6zz1102E", // class name
  bases__ZN4bbbb6zz1102E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2102  : ::bbbb::yy102 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2102E) C1{ BC2{ BC3{ BC4{ Fs}} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2102E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2102E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2102E, buf);
    ::bbbb::zz2102 &lv = *(new (buf) ::bbbb::zz2102());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2102E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2102E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz2102E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz2102E");
    check_base_class_offset(lv, (::bbbb::yy102*), 0, "_ZN4bbbb6zz2102E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2102E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2102E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2102E(Test__ZN4bbbb6zz2102E, "_ZN4bbbb6zz2102E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy102E;
static Base_Class bases__ZN4bbbb6zz2102E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy102E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2102E = {  "_ZN4bbbb6zz2102E", // class name
  bases__ZN4bbbb6zz2102E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3102  : ::bbbb::yy102 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3102E) C1{ BC2{ BC3{ BC4{ Fs}} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3102E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3102E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3102E, buf);
    ::bbbb::zz3102 &lv = *(new (buf) ::bbbb::zz3102());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3102E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3102E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz3102E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz3102E");
    check_base_class_offset(lv, (::bbbb::yy102*), 0, "_ZN4bbbb6zz3102E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3102E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3102E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3102E(Test__ZN4bbbb6zz3102E, "_ZN4bbbb6zz3102E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy102E;
static Base_Class bases__ZN4bbbb6zz3102E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy102E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3102E = {  "_ZN4bbbb6zz3102E", // class name
  bases__ZN4bbbb6zz3102E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4102  : ::bbbb::yy102 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4102E) C1{ BC2{ BC3{ BC4{ Fs}} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4102E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4102E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4102E, buf);
    ::bbbb::zz4102 &lv = *(new (buf) ::bbbb::zz4102());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4102E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4102E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz4102E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy102*), 0, "_ZN4bbbb6zz4102E");
    check_base_class_offset(lv, (::bbbb::yy102*), 0, "_ZN4bbbb6zz4102E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4102E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4102E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4102E(Test__ZN4bbbb6zz4102E, "_ZN4bbbb6zz4102E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy102E;
static Base_Class bases__ZN4bbbb6zz4102E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy102E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4102E = {  "_ZN4bbbb6zz4102E", // class name
  bases__ZN4bbbb6zz4102E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy202  : ::bbbb::xx02 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy202E) C1{ BC2{ BC3{ Fs}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy202E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy202E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy202E, buf);
    ::bbbb::yy202 &lv = *(new (buf) ::bbbb::yy202());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy202E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy202E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*), 0, "_ZN4bbbb5yy202E");
    check_base_class_offset(lv, (::bbbb::xx02*), 0, "_ZN4bbbb5yy202E");
    check_field_offset(lv, fc, 2, "_ZN4bbbb5yy202E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy202E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy202E(Test__ZN4bbbb5yy202E, "_ZN4bbbb5yy202E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
static Base_Class bases__ZN4bbbb5yy202E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy202E = {  "_ZN4bbbb5yy202E", // class name
  bases__ZN4bbbb5yy202E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0202  : ::bbbb::yy202 {
};
//SIG(1 _ZN4bbbb6zz0202E) C1{ BC2{ BC3{ BC4{ Fs}} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0202E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0202E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0202E, buf);
    ::bbbb::zz0202 &lv = *(new (buf) ::bbbb::zz0202());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0202E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0202E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz0202E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz0202E");
    check_base_class_offset(lv, (::bbbb::yy202*), 0, "_ZN4bbbb6zz0202E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0202E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0202E(Test__ZN4bbbb6zz0202E, "_ZN4bbbb6zz0202E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy202E;
static Base_Class bases__ZN4bbbb6zz0202E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy202E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0202E = {  "_ZN4bbbb6zz0202E", // class name
  bases__ZN4bbbb6zz0202E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1202  : ::bbbb::yy202 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1202E) C1{ BC2{ BC3{ BC4{ Fs}} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1202E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1202E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1202E, buf);
    ::bbbb::zz1202 &lv = *(new (buf) ::bbbb::zz1202());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1202E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1202E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz1202E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz1202E");
    check_base_class_offset(lv, (::bbbb::yy202*), 0, "_ZN4bbbb6zz1202E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1202E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1202E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1202E(Test__ZN4bbbb6zz1202E, "_ZN4bbbb6zz1202E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy202E;
static Base_Class bases__ZN4bbbb6zz1202E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy202E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1202E = {  "_ZN4bbbb6zz1202E", // class name
  bases__ZN4bbbb6zz1202E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2202  : ::bbbb::yy202 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2202E) C1{ BC2{ BC3{ BC4{ Fs}} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2202E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2202E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2202E, buf);
    ::bbbb::zz2202 &lv = *(new (buf) ::bbbb::zz2202());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2202E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2202E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz2202E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz2202E");
    check_base_class_offset(lv, (::bbbb::yy202*), 0, "_ZN4bbbb6zz2202E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2202E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2202E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2202E(Test__ZN4bbbb6zz2202E, "_ZN4bbbb6zz2202E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy202E;
static Base_Class bases__ZN4bbbb6zz2202E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy202E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2202E = {  "_ZN4bbbb6zz2202E", // class name
  bases__ZN4bbbb6zz2202E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3202  : ::bbbb::yy202 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3202E) C1{ BC2{ BC3{ BC4{ Fs}} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3202E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3202E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3202E, buf);
    ::bbbb::zz3202 &lv = *(new (buf) ::bbbb::zz3202());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3202E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3202E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz3202E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz3202E");
    check_base_class_offset(lv, (::bbbb::yy202*), 0, "_ZN4bbbb6zz3202E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3202E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3202E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3202E(Test__ZN4bbbb6zz3202E, "_ZN4bbbb6zz3202E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy202E;
static Base_Class bases__ZN4bbbb6zz3202E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy202E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3202E = {  "_ZN4bbbb6zz3202E", // class name
  bases__ZN4bbbb6zz3202E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4202  : ::bbbb::yy202 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4202E) C1{ BC2{ BC3{ BC4{ Fs}} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4202E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4202E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4202E, buf);
    ::bbbb::zz4202 &lv = *(new (buf) ::bbbb::zz4202());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4202E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4202E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz4202E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy202*), 0, "_ZN4bbbb6zz4202E");
    check_base_class_offset(lv, (::bbbb::yy202*), 0, "_ZN4bbbb6zz4202E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4202E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4202E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4202E(Test__ZN4bbbb6zz4202E, "_ZN4bbbb6zz4202E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy202E;
static Base_Class bases__ZN4bbbb6zz4202E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy202E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4202E = {  "_ZN4bbbb6zz4202E", // class name
  bases__ZN4bbbb6zz4202E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy302  : ::bbbb::xx02 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy302E) C1{ BC2{ BC3{ Fs}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy302E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy302E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy302E, buf);
    ::bbbb::yy302 &lv = *(new (buf) ::bbbb::yy302());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy302E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy302E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*), 0, "_ZN4bbbb5yy302E");
    check_base_class_offset(lv, (::bbbb::xx02*), 0, "_ZN4bbbb5yy302E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy302E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy302E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy302E(Test__ZN4bbbb5yy302E, "_ZN4bbbb5yy302E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
static Base_Class bases__ZN4bbbb5yy302E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy302E = {  "_ZN4bbbb5yy302E", // class name
  bases__ZN4bbbb5yy302E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0302  : ::bbbb::yy302 {
};
//SIG(1 _ZN4bbbb6zz0302E) C1{ BC2{ BC3{ BC4{ Fs}} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0302E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0302E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0302E, buf);
    ::bbbb::zz0302 &lv = *(new (buf) ::bbbb::zz0302());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0302E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0302E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz0302E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz0302E");
    check_base_class_offset(lv, (::bbbb::yy302*), 0, "_ZN4bbbb6zz0302E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0302E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0302E(Test__ZN4bbbb6zz0302E, "_ZN4bbbb6zz0302E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy302E;
static Base_Class bases__ZN4bbbb6zz0302E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy302E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0302E = {  "_ZN4bbbb6zz0302E", // class name
  bases__ZN4bbbb6zz0302E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1302  : ::bbbb::yy302 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1302E) C1{ BC2{ BC3{ BC4{ Fs}} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1302E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1302E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1302E, buf);
    ::bbbb::zz1302 &lv = *(new (buf) ::bbbb::zz1302());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1302E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1302E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz1302E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz1302E");
    check_base_class_offset(lv, (::bbbb::yy302*), 0, "_ZN4bbbb6zz1302E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1302E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1302E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1302E(Test__ZN4bbbb6zz1302E, "_ZN4bbbb6zz1302E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy302E;
static Base_Class bases__ZN4bbbb6zz1302E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy302E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1302E = {  "_ZN4bbbb6zz1302E", // class name
  bases__ZN4bbbb6zz1302E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2302  : ::bbbb::yy302 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2302E) C1{ BC2{ BC3{ BC4{ Fs}} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2302E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2302E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2302E, buf);
    ::bbbb::zz2302 &lv = *(new (buf) ::bbbb::zz2302());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2302E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2302E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz2302E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz2302E");
    check_base_class_offset(lv, (::bbbb::yy302*), 0, "_ZN4bbbb6zz2302E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2302E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2302E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2302E(Test__ZN4bbbb6zz2302E, "_ZN4bbbb6zz2302E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy302E;
static Base_Class bases__ZN4bbbb6zz2302E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy302E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2302E = {  "_ZN4bbbb6zz2302E", // class name
  bases__ZN4bbbb6zz2302E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3302  : ::bbbb::yy302 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3302E) C1{ BC2{ BC3{ BC4{ Fs}} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3302E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3302E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3302E, buf);
    ::bbbb::zz3302 &lv = *(new (buf) ::bbbb::zz3302());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3302E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3302E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz3302E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz3302E");
    check_base_class_offset(lv, (::bbbb::yy302*), 0, "_ZN4bbbb6zz3302E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3302E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3302E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3302E(Test__ZN4bbbb6zz3302E, "_ZN4bbbb6zz3302E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy302E;
static Base_Class bases__ZN4bbbb6zz3302E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy302E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3302E = {  "_ZN4bbbb6zz3302E", // class name
  bases__ZN4bbbb6zz3302E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4302  : ::bbbb::yy302 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4302E) C1{ BC2{ BC3{ BC4{ Fs}} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4302E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4302E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4302E, buf);
    ::bbbb::zz4302 &lv = *(new (buf) ::bbbb::zz4302());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4302E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4302E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz4302E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy302*), 0, "_ZN4bbbb6zz4302E");
    check_base_class_offset(lv, (::bbbb::yy302*), 0, "_ZN4bbbb6zz4302E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4302E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4302E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4302E(Test__ZN4bbbb6zz4302E, "_ZN4bbbb6zz4302E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy302E;
static Base_Class bases__ZN4bbbb6zz4302E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy302E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4302E = {  "_ZN4bbbb6zz4302E", // class name
  bases__ZN4bbbb6zz4302E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy402  : ::bbbb::xx02 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy402E) C1{ BC2{ BC3{ Fs}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy402E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy402E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy402E, buf);
    ::bbbb::yy402 &lv = *(new (buf) ::bbbb::yy402());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy402E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy402E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*), 0, "_ZN4bbbb5yy402E");
    check_base_class_offset(lv, (::bbbb::xx02*), 0, "_ZN4bbbb5yy402E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy402E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy402E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy402E(Test__ZN4bbbb5yy402E, "_ZN4bbbb5yy402E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
static Base_Class bases__ZN4bbbb5yy402E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy402E = {  "_ZN4bbbb5yy402E", // class name
  bases__ZN4bbbb5yy402E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0402  : ::bbbb::yy402 {
};
//SIG(1 _ZN4bbbb6zz0402E) C1{ BC2{ BC3{ BC4{ Fs}} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0402E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0402E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0402E, buf);
    ::bbbb::zz0402 &lv = *(new (buf) ::bbbb::zz0402());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0402E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0402E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz0402E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz0402E");
    check_base_class_offset(lv, (::bbbb::yy402*), 0, "_ZN4bbbb6zz0402E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0402E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0402E(Test__ZN4bbbb6zz0402E, "_ZN4bbbb6zz0402E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy402E;
static Base_Class bases__ZN4bbbb6zz0402E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy402E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0402E = {  "_ZN4bbbb6zz0402E", // class name
  bases__ZN4bbbb6zz0402E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1402  : ::bbbb::yy402 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1402E) C1{ BC2{ BC3{ BC4{ Fs}} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1402E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1402E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1402E, buf);
    ::bbbb::zz1402 &lv = *(new (buf) ::bbbb::zz1402());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1402E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1402E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz1402E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz1402E");
    check_base_class_offset(lv, (::bbbb::yy402*), 0, "_ZN4bbbb6zz1402E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1402E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1402E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1402E(Test__ZN4bbbb6zz1402E, "_ZN4bbbb6zz1402E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy402E;
static Base_Class bases__ZN4bbbb6zz1402E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy402E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1402E = {  "_ZN4bbbb6zz1402E", // class name
  bases__ZN4bbbb6zz1402E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2402  : ::bbbb::yy402 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2402E) C1{ BC2{ BC3{ BC4{ Fs}} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2402E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2402E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2402E, buf);
    ::bbbb::zz2402 &lv = *(new (buf) ::bbbb::zz2402());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2402E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2402E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz2402E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz2402E");
    check_base_class_offset(lv, (::bbbb::yy402*), 0, "_ZN4bbbb6zz2402E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2402E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2402E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2402E(Test__ZN4bbbb6zz2402E, "_ZN4bbbb6zz2402E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy402E;
static Base_Class bases__ZN4bbbb6zz2402E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy402E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2402E = {  "_ZN4bbbb6zz2402E", // class name
  bases__ZN4bbbb6zz2402E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3402  : ::bbbb::yy402 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3402E) C1{ BC2{ BC3{ BC4{ Fs}} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3402E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3402E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3402E, buf);
    ::bbbb::zz3402 &lv = *(new (buf) ::bbbb::zz3402());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3402E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3402E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz3402E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz3402E");
    check_base_class_offset(lv, (::bbbb::yy402*), 0, "_ZN4bbbb6zz3402E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3402E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3402E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3402E(Test__ZN4bbbb6zz3402E, "_ZN4bbbb6zz3402E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy402E;
static Base_Class bases__ZN4bbbb6zz3402E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy402E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3402E = {  "_ZN4bbbb6zz3402E", // class name
  bases__ZN4bbbb6zz3402E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4402  : ::bbbb::yy402 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4402E) C1{ BC2{ BC3{ BC4{ Fs}} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4402E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4402E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4402E, buf);
    ::bbbb::zz4402 &lv = *(new (buf) ::bbbb::zz4402());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4402E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4402E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz4402E");
    check_base_class_offset(lv, (::bbbb::xx02*)(::bbbb::yy402*), 0, "_ZN4bbbb6zz4402E");
    check_base_class_offset(lv, (::bbbb::yy402*), 0, "_ZN4bbbb6zz4402E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4402E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4402E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4402E(Test__ZN4bbbb6zz4402E, "_ZN4bbbb6zz4402E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx02E;
extern Class_Descriptor cd__ZN4bbbb5yy402E;
static Base_Class bases__ZN4bbbb6zz4402E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx02E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy402E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4402E = {  "_ZN4bbbb6zz4402E", // class name
  bases__ZN4bbbb6zz4402E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx12  : ::bbbb::ww2 {
  char fb;
};
//SIG(-1 _ZN4bbbb4xx12E) C1{ BC2{ Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx12E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx12E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb4xx12E, buf);
    ::bbbb::xx12 &lv = *(new (buf) ::bbbb::xx12());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb4xx12E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb4xx12E)");
    check_base_class_offset(lv, (::bbbb::ww2*), 0, "_ZN4bbbb4xx12E");
    check_field_offset(lv, fb, 2, "_ZN4bbbb4xx12E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx12E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx12E(Test__ZN4bbbb4xx12E, "_ZN4bbbb4xx12E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
static Base_Class bases__ZN4bbbb4xx12E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx12E = {  "_ZN4bbbb4xx12E", // class name
  bases__ZN4bbbb4xx12E, 1,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy012  : ::bbbb::xx12 {
};
//SIG(-1 _ZN4bbbb5yy012E) C1{ BC2{ BC3{ Fs} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy012E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy012E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy012E, buf);
    ::bbbb::yy012 &lv = *(new (buf) ::bbbb::yy012());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy012E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy012E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*), 0, "_ZN4bbbb5yy012E");
    check_base_class_offset(lv, (::bbbb::xx12*), 0, "_ZN4bbbb5yy012E");
    test_class_info(&lv, &cd__ZN4bbbb5yy012E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy012E(Test__ZN4bbbb5yy012E, "_ZN4bbbb5yy012E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
static Base_Class bases__ZN4bbbb5yy012E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy012E = {  "_ZN4bbbb5yy012E", // class name
  bases__ZN4bbbb5yy012E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0012  : ::bbbb::yy012 {
};
//SIG(1 _ZN4bbbb6zz0012E) C1{ BC2{ BC3{ BC4{ Fs} Fc}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0012E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0012E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0012E, buf);
    ::bbbb::zz0012 &lv = *(new (buf) ::bbbb::zz0012());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0012E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0012E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz0012E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz0012E");
    check_base_class_offset(lv, (::bbbb::yy012*), 0, "_ZN4bbbb6zz0012E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0012E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0012E(Test__ZN4bbbb6zz0012E, "_ZN4bbbb6zz0012E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy012E;
static Base_Class bases__ZN4bbbb6zz0012E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy012E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0012E = {  "_ZN4bbbb6zz0012E", // class name
  bases__ZN4bbbb6zz0012E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1012  : ::bbbb::yy012 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1012E) C1{ BC2{ BC3{ BC4{ Fs} Fc}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1012E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1012E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz1012E, buf);
    ::bbbb::zz1012 &lv = *(new (buf) ::bbbb::zz1012());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz1012E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1012E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz1012E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz1012E");
    check_base_class_offset(lv, (::bbbb::yy012*), 0, "_ZN4bbbb6zz1012E");
    check_field_offset(lv, fd, 3, "_ZN4bbbb6zz1012E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1012E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1012E(Test__ZN4bbbb6zz1012E, "_ZN4bbbb6zz1012E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy012E;
static Base_Class bases__ZN4bbbb6zz1012E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy012E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1012E = {  "_ZN4bbbb6zz1012E", // class name
  bases__ZN4bbbb6zz1012E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2012  : ::bbbb::yy012 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2012E) C1{ BC2{ BC3{ BC4{ Fs} Fc}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2012E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2012E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2012E, buf);
    ::bbbb::zz2012 &lv = *(new (buf) ::bbbb::zz2012());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2012E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2012E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz2012E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz2012E");
    check_base_class_offset(lv, (::bbbb::yy012*), 0, "_ZN4bbbb6zz2012E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2012E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2012E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2012E(Test__ZN4bbbb6zz2012E, "_ZN4bbbb6zz2012E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy012E;
static Base_Class bases__ZN4bbbb6zz2012E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy012E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2012E = {  "_ZN4bbbb6zz2012E", // class name
  bases__ZN4bbbb6zz2012E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3012  : ::bbbb::yy012 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3012E) C1{ BC2{ BC3{ BC4{ Fs} Fc}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3012E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3012E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3012E, buf);
    ::bbbb::zz3012 &lv = *(new (buf) ::bbbb::zz3012());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3012E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3012E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz3012E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz3012E");
    check_base_class_offset(lv, (::bbbb::yy012*), 0, "_ZN4bbbb6zz3012E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3012E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3012E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3012E(Test__ZN4bbbb6zz3012E, "_ZN4bbbb6zz3012E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy012E;
static Base_Class bases__ZN4bbbb6zz3012E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy012E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3012E = {  "_ZN4bbbb6zz3012E", // class name
  bases__ZN4bbbb6zz3012E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4012  : ::bbbb::yy012 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4012E) C1{ BC2{ BC3{ BC4{ Fs} Fc}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4012E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4012E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4012E, buf);
    ::bbbb::zz4012 &lv = *(new (buf) ::bbbb::zz4012());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4012E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4012E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz4012E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy012*), 0, "_ZN4bbbb6zz4012E");
    check_base_class_offset(lv, (::bbbb::yy012*), 0, "_ZN4bbbb6zz4012E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4012E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4012E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4012E(Test__ZN4bbbb6zz4012E, "_ZN4bbbb6zz4012E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy012E;
static Base_Class bases__ZN4bbbb6zz4012E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy012E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4012E = {  "_ZN4bbbb6zz4012E", // class name
  bases__ZN4bbbb6zz4012E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy112  : ::bbbb::xx12 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy112E) C1{ BC2{ BC3{ Fs} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy112E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy112E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy112E, buf);
    ::bbbb::yy112 &lv = *(new (buf) ::bbbb::yy112());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy112E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy112E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*), 0, "_ZN4bbbb5yy112E");
    check_base_class_offset(lv, (::bbbb::xx12*), 0, "_ZN4bbbb5yy112E");
    check_field_offset(lv, fc, 3, "_ZN4bbbb5yy112E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy112E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy112E(Test__ZN4bbbb5yy112E, "_ZN4bbbb5yy112E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
static Base_Class bases__ZN4bbbb5yy112E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy112E = {  "_ZN4bbbb5yy112E", // class name
  bases__ZN4bbbb5yy112E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0112  : ::bbbb::yy112 {
};
//SIG(1 _ZN4bbbb6zz0112E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0112E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0112E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0112E, buf);
    ::bbbb::zz0112 &lv = *(new (buf) ::bbbb::zz0112());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0112E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0112E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz0112E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz0112E");
    check_base_class_offset(lv, (::bbbb::yy112*), 0, "_ZN4bbbb6zz0112E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0112E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0112E(Test__ZN4bbbb6zz0112E, "_ZN4bbbb6zz0112E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy112E;
static Base_Class bases__ZN4bbbb6zz0112E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy112E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0112E = {  "_ZN4bbbb6zz0112E", // class name
  bases__ZN4bbbb6zz0112E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1112  : ::bbbb::yy112 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1112E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1112E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1112E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1112E, buf);
    ::bbbb::zz1112 &lv = *(new (buf) ::bbbb::zz1112());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1112E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1112E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz1112E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz1112E");
    check_base_class_offset(lv, (::bbbb::yy112*), 0, "_ZN4bbbb6zz1112E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1112E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1112E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1112E(Test__ZN4bbbb6zz1112E, "_ZN4bbbb6zz1112E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy112E;
static Base_Class bases__ZN4bbbb6zz1112E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy112E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1112E = {  "_ZN4bbbb6zz1112E", // class name
  bases__ZN4bbbb6zz1112E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2112  : ::bbbb::yy112 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2112E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2112E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2112E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2112E, buf);
    ::bbbb::zz2112 &lv = *(new (buf) ::bbbb::zz2112());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2112E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2112E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz2112E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz2112E");
    check_base_class_offset(lv, (::bbbb::yy112*), 0, "_ZN4bbbb6zz2112E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2112E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2112E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2112E(Test__ZN4bbbb6zz2112E, "_ZN4bbbb6zz2112E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy112E;
static Base_Class bases__ZN4bbbb6zz2112E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy112E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2112E = {  "_ZN4bbbb6zz2112E", // class name
  bases__ZN4bbbb6zz2112E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3112  : ::bbbb::yy112 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3112E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3112E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3112E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3112E, buf);
    ::bbbb::zz3112 &lv = *(new (buf) ::bbbb::zz3112());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3112E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3112E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz3112E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz3112E");
    check_base_class_offset(lv, (::bbbb::yy112*), 0, "_ZN4bbbb6zz3112E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3112E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3112E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3112E(Test__ZN4bbbb6zz3112E, "_ZN4bbbb6zz3112E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy112E;
static Base_Class bases__ZN4bbbb6zz3112E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy112E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3112E = {  "_ZN4bbbb6zz3112E", // class name
  bases__ZN4bbbb6zz3112E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4112  : ::bbbb::yy112 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4112E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4112E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4112E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4112E, buf);
    ::bbbb::zz4112 &lv = *(new (buf) ::bbbb::zz4112());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4112E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4112E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz4112E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy112*), 0, "_ZN4bbbb6zz4112E");
    check_base_class_offset(lv, (::bbbb::yy112*), 0, "_ZN4bbbb6zz4112E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4112E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4112E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4112E(Test__ZN4bbbb6zz4112E, "_ZN4bbbb6zz4112E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy112E;
static Base_Class bases__ZN4bbbb6zz4112E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy112E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4112E = {  "_ZN4bbbb6zz4112E", // class name
  bases__ZN4bbbb6zz4112E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy212  : ::bbbb::xx12 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy212E) C1{ BC2{ BC3{ Fs} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy212E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy212E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb5yy212E, buf);
    ::bbbb::yy212 &lv = *(new (buf) ::bbbb::yy212());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb5yy212E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy212E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*), 0, "_ZN4bbbb5yy212E");
    check_base_class_offset(lv, (::bbbb::xx12*), 0, "_ZN4bbbb5yy212E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy212E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy212E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy212E(Test__ZN4bbbb5yy212E, "_ZN4bbbb5yy212E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
static Base_Class bases__ZN4bbbb5yy212E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy212E = {  "_ZN4bbbb5yy212E", // class name
  bases__ZN4bbbb5yy212E, 2,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0212  : ::bbbb::yy212 {
};
//SIG(1 _ZN4bbbb6zz0212E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0212E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0212E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz0212E, buf);
    ::bbbb::zz0212 &lv = *(new (buf) ::bbbb::zz0212());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz0212E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0212E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz0212E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz0212E");
    check_base_class_offset(lv, (::bbbb::yy212*), 0, "_ZN4bbbb6zz0212E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0212E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0212E(Test__ZN4bbbb6zz0212E, "_ZN4bbbb6zz0212E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy212E;
static Base_Class bases__ZN4bbbb6zz0212E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy212E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0212E = {  "_ZN4bbbb6zz0212E", // class name
  bases__ZN4bbbb6zz0212E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1212  : ::bbbb::yy212 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1212E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1212E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1212E;
  void *lvp;
  {
    short buf[5];
    init_test(&cd__ZN4bbbb6zz1212E, buf);
    ::bbbb::zz1212 &lv = *(new (buf) ::bbbb::zz1212());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1212E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1212E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz1212E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz1212E");
    check_base_class_offset(lv, (::bbbb::yy212*), 0, "_ZN4bbbb6zz1212E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz1212E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1212E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1212E(Test__ZN4bbbb6zz1212E, "_ZN4bbbb6zz1212E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy212E;
static Base_Class bases__ZN4bbbb6zz1212E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy212E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1212E = {  "_ZN4bbbb6zz1212E", // class name
  bases__ZN4bbbb6zz1212E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2212  : ::bbbb::yy212 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2212E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2212E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2212E;
  void *lvp;
  {
    short buf[5];
    init_test(&cd__ZN4bbbb6zz2212E, buf);
    ::bbbb::zz2212 &lv = *(new (buf) ::bbbb::zz2212());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2212E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2212E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz2212E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz2212E");
    check_base_class_offset(lv, (::bbbb::yy212*), 0, "_ZN4bbbb6zz2212E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2212E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2212E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2212E(Test__ZN4bbbb6zz2212E, "_ZN4bbbb6zz2212E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy212E;
static Base_Class bases__ZN4bbbb6zz2212E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy212E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2212E = {  "_ZN4bbbb6zz2212E", // class name
  bases__ZN4bbbb6zz2212E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3212  : ::bbbb::yy212 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3212E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3212E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3212E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3212E, buf);
    ::bbbb::zz3212 &lv = *(new (buf) ::bbbb::zz3212());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3212E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3212E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz3212E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz3212E");
    check_base_class_offset(lv, (::bbbb::yy212*), 0, "_ZN4bbbb6zz3212E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3212E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3212E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3212E(Test__ZN4bbbb6zz3212E, "_ZN4bbbb6zz3212E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy212E;
static Base_Class bases__ZN4bbbb6zz3212E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy212E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3212E = {  "_ZN4bbbb6zz3212E", // class name
  bases__ZN4bbbb6zz3212E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4212  : ::bbbb::yy212 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4212E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4212E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4212E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4212E, buf);
    ::bbbb::zz4212 &lv = *(new (buf) ::bbbb::zz4212());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4212E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4212E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz4212E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy212*), 0, "_ZN4bbbb6zz4212E");
    check_base_class_offset(lv, (::bbbb::yy212*), 0, "_ZN4bbbb6zz4212E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4212E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4212E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4212E(Test__ZN4bbbb6zz4212E, "_ZN4bbbb6zz4212E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy212E;
static Base_Class bases__ZN4bbbb6zz4212E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy212E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4212E = {  "_ZN4bbbb6zz4212E", // class name
  bases__ZN4bbbb6zz4212E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy312  : ::bbbb::xx12 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy312E) C1{ BC2{ BC3{ Fs} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy312E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy312E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy312E, buf);
    ::bbbb::yy312 &lv = *(new (buf) ::bbbb::yy312());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy312E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy312E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*), 0, "_ZN4bbbb5yy312E");
    check_base_class_offset(lv, (::bbbb::xx12*), 0, "_ZN4bbbb5yy312E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy312E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy312E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy312E(Test__ZN4bbbb5yy312E, "_ZN4bbbb5yy312E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
static Base_Class bases__ZN4bbbb5yy312E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy312E = {  "_ZN4bbbb5yy312E", // class name
  bases__ZN4bbbb5yy312E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0312  : ::bbbb::yy312 {
};
//SIG(1 _ZN4bbbb6zz0312E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0312E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0312E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0312E, buf);
    ::bbbb::zz0312 &lv = *(new (buf) ::bbbb::zz0312());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0312E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0312E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz0312E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz0312E");
    check_base_class_offset(lv, (::bbbb::yy312*), 0, "_ZN4bbbb6zz0312E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0312E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0312E(Test__ZN4bbbb6zz0312E, "_ZN4bbbb6zz0312E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy312E;
static Base_Class bases__ZN4bbbb6zz0312E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy312E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0312E = {  "_ZN4bbbb6zz0312E", // class name
  bases__ZN4bbbb6zz0312E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1312  : ::bbbb::yy312 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1312E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1312E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1312E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1312E, buf);
    ::bbbb::zz1312 &lv = *(new (buf) ::bbbb::zz1312());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1312E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1312E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz1312E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz1312E");
    check_base_class_offset(lv, (::bbbb::yy312*), 0, "_ZN4bbbb6zz1312E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1312E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1312E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1312E(Test__ZN4bbbb6zz1312E, "_ZN4bbbb6zz1312E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy312E;
static Base_Class bases__ZN4bbbb6zz1312E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy312E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1312E = {  "_ZN4bbbb6zz1312E", // class name
  bases__ZN4bbbb6zz1312E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2312  : ::bbbb::yy312 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2312E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2312E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2312E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2312E, buf);
    ::bbbb::zz2312 &lv = *(new (buf) ::bbbb::zz2312());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2312E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2312E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz2312E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz2312E");
    check_base_class_offset(lv, (::bbbb::yy312*), 0, "_ZN4bbbb6zz2312E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2312E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2312E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2312E(Test__ZN4bbbb6zz2312E, "_ZN4bbbb6zz2312E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy312E;
static Base_Class bases__ZN4bbbb6zz2312E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy312E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2312E = {  "_ZN4bbbb6zz2312E", // class name
  bases__ZN4bbbb6zz2312E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3312  : ::bbbb::yy312 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3312E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3312E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3312E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3312E, buf);
    ::bbbb::zz3312 &lv = *(new (buf) ::bbbb::zz3312());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3312E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3312E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz3312E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz3312E");
    check_base_class_offset(lv, (::bbbb::yy312*), 0, "_ZN4bbbb6zz3312E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3312E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3312E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3312E(Test__ZN4bbbb6zz3312E, "_ZN4bbbb6zz3312E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy312E;
static Base_Class bases__ZN4bbbb6zz3312E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy312E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3312E = {  "_ZN4bbbb6zz3312E", // class name
  bases__ZN4bbbb6zz3312E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4312  : ::bbbb::yy312 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4312E) C1{ BC2{ BC3{ BC4{ Fs} Fc} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4312E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4312E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4312E, buf);
    ::bbbb::zz4312 &lv = *(new (buf) ::bbbb::zz4312());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4312E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4312E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz4312E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy312*), 0, "_ZN4bbbb6zz4312E");
    check_base_class_offset(lv, (::bbbb::yy312*), 0, "_ZN4bbbb6zz4312E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4312E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4312E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4312E(Test__ZN4bbbb6zz4312E, "_ZN4bbbb6zz4312E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy312E;
static Base_Class bases__ZN4bbbb6zz4312E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy312E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4312E = {  "_ZN4bbbb6zz4312E", // class name
  bases__ZN4bbbb6zz4312E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy412  : ::bbbb::xx12 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy412E) C1{ BC2{ BC3{ Fs} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy412E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy412E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy412E, buf);
    ::bbbb::yy412 &lv = *(new (buf) ::bbbb::yy412());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy412E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy412E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*), 0, "_ZN4bbbb5yy412E");
    check_base_class_offset(lv, (::bbbb::xx12*), 0, "_ZN4bbbb5yy412E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy412E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy412E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy412E(Test__ZN4bbbb5yy412E, "_ZN4bbbb5yy412E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
static Base_Class bases__ZN4bbbb5yy412E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy412E = {  "_ZN4bbbb5yy412E", // class name
  bases__ZN4bbbb5yy412E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0412  : ::bbbb::yy412 {
};
//SIG(1 _ZN4bbbb6zz0412E) C1{ BC2{ BC3{ BC4{ Fs} Fc} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0412E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0412E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0412E, buf);
    ::bbbb::zz0412 &lv = *(new (buf) ::bbbb::zz0412());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0412E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0412E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz0412E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz0412E");
    check_base_class_offset(lv, (::bbbb::yy412*), 0, "_ZN4bbbb6zz0412E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0412E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0412E(Test__ZN4bbbb6zz0412E, "_ZN4bbbb6zz0412E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy412E;
static Base_Class bases__ZN4bbbb6zz0412E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy412E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0412E = {  "_ZN4bbbb6zz0412E", // class name
  bases__ZN4bbbb6zz0412E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1412  : ::bbbb::yy412 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1412E) C1{ BC2{ BC3{ BC4{ Fs} Fc} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1412E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1412E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1412E, buf);
    ::bbbb::zz1412 &lv = *(new (buf) ::bbbb::zz1412());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1412E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1412E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz1412E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz1412E");
    check_base_class_offset(lv, (::bbbb::yy412*), 0, "_ZN4bbbb6zz1412E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1412E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1412E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1412E(Test__ZN4bbbb6zz1412E, "_ZN4bbbb6zz1412E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy412E;
static Base_Class bases__ZN4bbbb6zz1412E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy412E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1412E = {  "_ZN4bbbb6zz1412E", // class name
  bases__ZN4bbbb6zz1412E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2412  : ::bbbb::yy412 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2412E) C1{ BC2{ BC3{ BC4{ Fs} Fc} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2412E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2412E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2412E, buf);
    ::bbbb::zz2412 &lv = *(new (buf) ::bbbb::zz2412());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2412E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2412E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz2412E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz2412E");
    check_base_class_offset(lv, (::bbbb::yy412*), 0, "_ZN4bbbb6zz2412E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2412E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2412E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2412E(Test__ZN4bbbb6zz2412E, "_ZN4bbbb6zz2412E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy412E;
static Base_Class bases__ZN4bbbb6zz2412E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy412E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2412E = {  "_ZN4bbbb6zz2412E", // class name
  bases__ZN4bbbb6zz2412E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3412  : ::bbbb::yy412 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3412E) C1{ BC2{ BC3{ BC4{ Fs} Fc} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3412E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3412E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3412E, buf);
    ::bbbb::zz3412 &lv = *(new (buf) ::bbbb::zz3412());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3412E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3412E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz3412E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz3412E");
    check_base_class_offset(lv, (::bbbb::yy412*), 0, "_ZN4bbbb6zz3412E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3412E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3412E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3412E(Test__ZN4bbbb6zz3412E, "_ZN4bbbb6zz3412E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy412E;
static Base_Class bases__ZN4bbbb6zz3412E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy412E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3412E = {  "_ZN4bbbb6zz3412E", // class name
  bases__ZN4bbbb6zz3412E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4412  : ::bbbb::yy412 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4412E) C1{ BC2{ BC3{ BC4{ Fs} Fc} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4412E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4412E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4412E, buf);
    ::bbbb::zz4412 &lv = *(new (buf) ::bbbb::zz4412());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4412E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4412E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz4412E");
    check_base_class_offset(lv, (::bbbb::xx12*)(::bbbb::yy412*), 0, "_ZN4bbbb6zz4412E");
    check_base_class_offset(lv, (::bbbb::yy412*), 0, "_ZN4bbbb6zz4412E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4412E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4412E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4412E(Test__ZN4bbbb6zz4412E, "_ZN4bbbb6zz4412E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx12E;
extern Class_Descriptor cd__ZN4bbbb5yy412E;
static Base_Class bases__ZN4bbbb6zz4412E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx12E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy412E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4412E = {  "_ZN4bbbb6zz4412E", // class name
  bases__ZN4bbbb6zz4412E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx22  : ::bbbb::ww2 {
  short fb;
};
//SIG(-1 _ZN4bbbb4xx22E) C1{ BC2{ Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx22E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx22E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb4xx22E, buf);
    ::bbbb::xx22 &lv = *(new (buf) ::bbbb::xx22());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb4xx22E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb4xx22E)");
    check_base_class_offset(lv, (::bbbb::ww2*), 0, "_ZN4bbbb4xx22E");
    check_field_offset(lv, fb, 2, "_ZN4bbbb4xx22E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx22E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx22E(Test__ZN4bbbb4xx22E, "_ZN4bbbb4xx22E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
static Base_Class bases__ZN4bbbb4xx22E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx22E = {  "_ZN4bbbb4xx22E", // class name
  bases__ZN4bbbb4xx22E, 1,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy022  : ::bbbb::xx22 {
};
//SIG(-1 _ZN4bbbb5yy022E) C1{ BC2{ BC3{ Fs} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy022E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy022E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb5yy022E, buf);
    ::bbbb::yy022 &lv = *(new (buf) ::bbbb::yy022());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy022E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy022E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*), 0, "_ZN4bbbb5yy022E");
    check_base_class_offset(lv, (::bbbb::xx22*), 0, "_ZN4bbbb5yy022E");
    test_class_info(&lv, &cd__ZN4bbbb5yy022E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy022E(Test__ZN4bbbb5yy022E, "_ZN4bbbb5yy022E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
static Base_Class bases__ZN4bbbb5yy022E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy022E = {  "_ZN4bbbb5yy022E", // class name
  bases__ZN4bbbb5yy022E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0022  : ::bbbb::yy022 {
};
//SIG(1 _ZN4bbbb6zz0022E) C1{ BC2{ BC3{ BC4{ Fs} Fs}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0022E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0022E;
  void *lvp;
  {
    short buf[3];
    init_test(&cd__ZN4bbbb6zz0022E, buf);
    ::bbbb::zz0022 &lv = *(new (buf) ::bbbb::zz0022());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0022E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0022E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz0022E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz0022E");
    check_base_class_offset(lv, (::bbbb::yy022*), 0, "_ZN4bbbb6zz0022E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0022E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0022E(Test__ZN4bbbb6zz0022E, "_ZN4bbbb6zz0022E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy022E;
static Base_Class bases__ZN4bbbb6zz0022E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy022E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0022E = {  "_ZN4bbbb6zz0022E", // class name
  bases__ZN4bbbb6zz0022E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1022  : ::bbbb::yy022 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1022E) C1{ BC2{ BC3{ BC4{ Fs} Fs}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1022E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1022E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1022E, buf);
    ::bbbb::zz1022 &lv = *(new (buf) ::bbbb::zz1022());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1022E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1022E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz1022E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz1022E");
    check_base_class_offset(lv, (::bbbb::yy022*), 0, "_ZN4bbbb6zz1022E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1022E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1022E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1022E(Test__ZN4bbbb6zz1022E, "_ZN4bbbb6zz1022E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy022E;
static Base_Class bases__ZN4bbbb6zz1022E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy022E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1022E = {  "_ZN4bbbb6zz1022E", // class name
  bases__ZN4bbbb6zz1022E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2022  : ::bbbb::yy022 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2022E) C1{ BC2{ BC3{ BC4{ Fs} Fs}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2022E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2022E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz2022E, buf);
    ::bbbb::zz2022 &lv = *(new (buf) ::bbbb::zz2022());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz2022E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2022E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz2022E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz2022E");
    check_base_class_offset(lv, (::bbbb::yy022*), 0, "_ZN4bbbb6zz2022E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2022E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2022E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2022E(Test__ZN4bbbb6zz2022E, "_ZN4bbbb6zz2022E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy022E;
static Base_Class bases__ZN4bbbb6zz2022E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy022E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2022E = {  "_ZN4bbbb6zz2022E", // class name
  bases__ZN4bbbb6zz2022E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3022  : ::bbbb::yy022 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3022E) C1{ BC2{ BC3{ BC4{ Fs} Fs}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3022E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3022E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3022E, buf);
    ::bbbb::zz3022 &lv = *(new (buf) ::bbbb::zz3022());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3022E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3022E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz3022E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz3022E");
    check_base_class_offset(lv, (::bbbb::yy022*), 0, "_ZN4bbbb6zz3022E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3022E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3022E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3022E(Test__ZN4bbbb6zz3022E, "_ZN4bbbb6zz3022E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy022E;
static Base_Class bases__ZN4bbbb6zz3022E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy022E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3022E = {  "_ZN4bbbb6zz3022E", // class name
  bases__ZN4bbbb6zz3022E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4022  : ::bbbb::yy022 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4022E) C1{ BC2{ BC3{ BC4{ Fs} Fs}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4022E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4022E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4022E, buf);
    ::bbbb::zz4022 &lv = *(new (buf) ::bbbb::zz4022());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4022E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4022E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz4022E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy022*), 0, "_ZN4bbbb6zz4022E");
    check_base_class_offset(lv, (::bbbb::yy022*), 0, "_ZN4bbbb6zz4022E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4022E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4022E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4022E(Test__ZN4bbbb6zz4022E, "_ZN4bbbb6zz4022E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy022E;
static Base_Class bases__ZN4bbbb6zz4022E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy022E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4022E = {  "_ZN4bbbb6zz4022E", // class name
  bases__ZN4bbbb6zz4022E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy122  : ::bbbb::xx22 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy122E) C1{ BC2{ BC3{ Fs} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy122E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy122E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb5yy122E, buf);
    ::bbbb::yy122 &lv = *(new (buf) ::bbbb::yy122());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb5yy122E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy122E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*), 0, "_ZN4bbbb5yy122E");
    check_base_class_offset(lv, (::bbbb::xx22*), 0, "_ZN4bbbb5yy122E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy122E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy122E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy122E(Test__ZN4bbbb5yy122E, "_ZN4bbbb5yy122E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
static Base_Class bases__ZN4bbbb5yy122E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy122E = {  "_ZN4bbbb5yy122E", // class name
  bases__ZN4bbbb5yy122E, 2,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0122  : ::bbbb::yy122 {
};
//SIG(1 _ZN4bbbb6zz0122E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0122E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0122E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz0122E, buf);
    ::bbbb::zz0122 &lv = *(new (buf) ::bbbb::zz0122());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz0122E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0122E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz0122E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz0122E");
    check_base_class_offset(lv, (::bbbb::yy122*), 0, "_ZN4bbbb6zz0122E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0122E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0122E(Test__ZN4bbbb6zz0122E, "_ZN4bbbb6zz0122E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy122E;
static Base_Class bases__ZN4bbbb6zz0122E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy122E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0122E = {  "_ZN4bbbb6zz0122E", // class name
  bases__ZN4bbbb6zz0122E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1122  : ::bbbb::yy122 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1122E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1122E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1122E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz1122E, buf);
    ::bbbb::zz1122 &lv = *(new (buf) ::bbbb::zz1122());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz1122E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1122E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz1122E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz1122E");
    check_base_class_offset(lv, (::bbbb::yy122*), 0, "_ZN4bbbb6zz1122E");
    check_field_offset(lv, fd, 5, "_ZN4bbbb6zz1122E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1122E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1122E(Test__ZN4bbbb6zz1122E, "_ZN4bbbb6zz1122E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy122E;
static Base_Class bases__ZN4bbbb6zz1122E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy122E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1122E = {  "_ZN4bbbb6zz1122E", // class name
  bases__ZN4bbbb6zz1122E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2122  : ::bbbb::yy122 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2122E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2122E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2122E;
  void *lvp;
  {
    short buf[5];
    init_test(&cd__ZN4bbbb6zz2122E, buf);
    ::bbbb::zz2122 &lv = *(new (buf) ::bbbb::zz2122());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2122E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2122E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz2122E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz2122E");
    check_base_class_offset(lv, (::bbbb::yy122*), 0, "_ZN4bbbb6zz2122E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2122E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2122E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2122E(Test__ZN4bbbb6zz2122E, "_ZN4bbbb6zz2122E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy122E;
static Base_Class bases__ZN4bbbb6zz2122E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy122E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2122E = {  "_ZN4bbbb6zz2122E", // class name
  bases__ZN4bbbb6zz2122E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3122  : ::bbbb::yy122 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3122E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3122E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3122E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3122E, buf);
    ::bbbb::zz3122 &lv = *(new (buf) ::bbbb::zz3122());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3122E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3122E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz3122E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz3122E");
    check_base_class_offset(lv, (::bbbb::yy122*), 0, "_ZN4bbbb6zz3122E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3122E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3122E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3122E(Test__ZN4bbbb6zz3122E, "_ZN4bbbb6zz3122E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy122E;
static Base_Class bases__ZN4bbbb6zz3122E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy122E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3122E = {  "_ZN4bbbb6zz3122E", // class name
  bases__ZN4bbbb6zz3122E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4122  : ::bbbb::yy122 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4122E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4122E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4122E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4122E, buf);
    ::bbbb::zz4122 &lv = *(new (buf) ::bbbb::zz4122());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4122E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4122E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz4122E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy122*), 0, "_ZN4bbbb6zz4122E");
    check_base_class_offset(lv, (::bbbb::yy122*), 0, "_ZN4bbbb6zz4122E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4122E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4122E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4122E(Test__ZN4bbbb6zz4122E, "_ZN4bbbb6zz4122E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy122E;
static Base_Class bases__ZN4bbbb6zz4122E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy122E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4122E = {  "_ZN4bbbb6zz4122E", // class name
  bases__ZN4bbbb6zz4122E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy222  : ::bbbb::xx22 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy222E) C1{ BC2{ BC3{ Fs} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy222E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy222E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb5yy222E, buf);
    ::bbbb::yy222 &lv = *(new (buf) ::bbbb::yy222());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb5yy222E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb5yy222E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*), 0, "_ZN4bbbb5yy222E");
    check_base_class_offset(lv, (::bbbb::xx22*), 0, "_ZN4bbbb5yy222E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy222E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy222E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy222E(Test__ZN4bbbb5yy222E, "_ZN4bbbb5yy222E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
static Base_Class bases__ZN4bbbb5yy222E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy222E = {  "_ZN4bbbb5yy222E", // class name
  bases__ZN4bbbb5yy222E, 2,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0222  : ::bbbb::yy222 {
};
//SIG(1 _ZN4bbbb6zz0222E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0222E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0222E;
  void *lvp;
  {
    short buf[4];
    init_test(&cd__ZN4bbbb6zz0222E, buf);
    ::bbbb::zz0222 &lv = *(new (buf) ::bbbb::zz0222());
    lvp = (void*)&lv;
    check2(sizeof(lv), 6, "sizeof(_ZN4bbbb6zz0222E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz0222E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz0222E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz0222E");
    check_base_class_offset(lv, (::bbbb::yy222*), 0, "_ZN4bbbb6zz0222E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0222E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0222E(Test__ZN4bbbb6zz0222E, "_ZN4bbbb6zz0222E", 6);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy222E;
static Base_Class bases__ZN4bbbb6zz0222E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy222E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0222E = {  "_ZN4bbbb6zz0222E", // class name
  bases__ZN4bbbb6zz0222E, 3,
  0, // no vftv
  0, //no vtt
  6, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1222  : ::bbbb::yy222 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1222E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1222E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1222E;
  void *lvp;
  {
    short buf[5];
    init_test(&cd__ZN4bbbb6zz1222E, buf);
    ::bbbb::zz1222 &lv = *(new (buf) ::bbbb::zz1222());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1222E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz1222E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz1222E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz1222E");
    check_base_class_offset(lv, (::bbbb::yy222*), 0, "_ZN4bbbb6zz1222E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz1222E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1222E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1222E(Test__ZN4bbbb6zz1222E, "_ZN4bbbb6zz1222E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy222E;
static Base_Class bases__ZN4bbbb6zz1222E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy222E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1222E = {  "_ZN4bbbb6zz1222E", // class name
  bases__ZN4bbbb6zz1222E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2222  : ::bbbb::yy222 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2222E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2222E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2222E;
  void *lvp;
  {
    short buf[5];
    init_test(&cd__ZN4bbbb6zz2222E, buf);
    ::bbbb::zz2222 &lv = *(new (buf) ::bbbb::zz2222());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2222E)");
    check2(__alignof__(lv), 2, "__alignof__(_ZN4bbbb6zz2222E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz2222E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz2222E");
    check_base_class_offset(lv, (::bbbb::yy222*), 0, "_ZN4bbbb6zz2222E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2222E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2222E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2222E(Test__ZN4bbbb6zz2222E, "_ZN4bbbb6zz2222E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy222E;
static Base_Class bases__ZN4bbbb6zz2222E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy222E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2222E = {  "_ZN4bbbb6zz2222E", // class name
  bases__ZN4bbbb6zz2222E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3222  : ::bbbb::yy222 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3222E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3222E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3222E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3222E, buf);
    ::bbbb::zz3222 &lv = *(new (buf) ::bbbb::zz3222());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3222E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3222E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz3222E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz3222E");
    check_base_class_offset(lv, (::bbbb::yy222*), 0, "_ZN4bbbb6zz3222E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3222E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3222E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3222E(Test__ZN4bbbb6zz3222E, "_ZN4bbbb6zz3222E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy222E;
static Base_Class bases__ZN4bbbb6zz3222E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy222E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3222E = {  "_ZN4bbbb6zz3222E", // class name
  bases__ZN4bbbb6zz3222E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4222  : ::bbbb::yy222 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4222E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4222E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4222E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4222E, buf);
    ::bbbb::zz4222 &lv = *(new (buf) ::bbbb::zz4222());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4222E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4222E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz4222E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy222*), 0, "_ZN4bbbb6zz4222E");
    check_base_class_offset(lv, (::bbbb::yy222*), 0, "_ZN4bbbb6zz4222E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4222E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4222E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4222E(Test__ZN4bbbb6zz4222E, "_ZN4bbbb6zz4222E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy222E;
static Base_Class bases__ZN4bbbb6zz4222E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy222E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4222E = {  "_ZN4bbbb6zz4222E", // class name
  bases__ZN4bbbb6zz4222E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy322  : ::bbbb::xx22 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy322E) C1{ BC2{ BC3{ Fs} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy322E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy322E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy322E, buf);
    ::bbbb::yy322 &lv = *(new (buf) ::bbbb::yy322());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy322E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy322E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*), 0, "_ZN4bbbb5yy322E");
    check_base_class_offset(lv, (::bbbb::xx22*), 0, "_ZN4bbbb5yy322E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy322E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy322E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy322E(Test__ZN4bbbb5yy322E, "_ZN4bbbb5yy322E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
static Base_Class bases__ZN4bbbb5yy322E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy322E = {  "_ZN4bbbb5yy322E", // class name
  bases__ZN4bbbb5yy322E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0322  : ::bbbb::yy322 {
};
//SIG(1 _ZN4bbbb6zz0322E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0322E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0322E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0322E, buf);
    ::bbbb::zz0322 &lv = *(new (buf) ::bbbb::zz0322());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0322E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0322E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz0322E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz0322E");
    check_base_class_offset(lv, (::bbbb::yy322*), 0, "_ZN4bbbb6zz0322E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0322E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0322E(Test__ZN4bbbb6zz0322E, "_ZN4bbbb6zz0322E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy322E;
static Base_Class bases__ZN4bbbb6zz0322E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy322E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0322E = {  "_ZN4bbbb6zz0322E", // class name
  bases__ZN4bbbb6zz0322E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1322  : ::bbbb::yy322 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1322E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1322E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1322E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1322E, buf);
    ::bbbb::zz1322 &lv = *(new (buf) ::bbbb::zz1322());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1322E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1322E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz1322E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz1322E");
    check_base_class_offset(lv, (::bbbb::yy322*), 0, "_ZN4bbbb6zz1322E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1322E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1322E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1322E(Test__ZN4bbbb6zz1322E, "_ZN4bbbb6zz1322E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy322E;
static Base_Class bases__ZN4bbbb6zz1322E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy322E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1322E = {  "_ZN4bbbb6zz1322E", // class name
  bases__ZN4bbbb6zz1322E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2322  : ::bbbb::yy322 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2322E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2322E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2322E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2322E, buf);
    ::bbbb::zz2322 &lv = *(new (buf) ::bbbb::zz2322());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2322E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2322E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz2322E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz2322E");
    check_base_class_offset(lv, (::bbbb::yy322*), 0, "_ZN4bbbb6zz2322E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2322E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2322E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2322E(Test__ZN4bbbb6zz2322E, "_ZN4bbbb6zz2322E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy322E;
static Base_Class bases__ZN4bbbb6zz2322E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy322E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2322E = {  "_ZN4bbbb6zz2322E", // class name
  bases__ZN4bbbb6zz2322E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3322  : ::bbbb::yy322 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3322E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3322E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3322E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3322E, buf);
    ::bbbb::zz3322 &lv = *(new (buf) ::bbbb::zz3322());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3322E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3322E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz3322E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz3322E");
    check_base_class_offset(lv, (::bbbb::yy322*), 0, "_ZN4bbbb6zz3322E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3322E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3322E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3322E(Test__ZN4bbbb6zz3322E, "_ZN4bbbb6zz3322E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy322E;
static Base_Class bases__ZN4bbbb6zz3322E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy322E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3322E = {  "_ZN4bbbb6zz3322E", // class name
  bases__ZN4bbbb6zz3322E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4322  : ::bbbb::yy322 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4322E) C1{ BC2{ BC3{ BC4{ Fs} Fs} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4322E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4322E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4322E, buf);
    ::bbbb::zz4322 &lv = *(new (buf) ::bbbb::zz4322());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4322E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4322E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz4322E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy322*), 0, "_ZN4bbbb6zz4322E");
    check_base_class_offset(lv, (::bbbb::yy322*), 0, "_ZN4bbbb6zz4322E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4322E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4322E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4322E(Test__ZN4bbbb6zz4322E, "_ZN4bbbb6zz4322E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy322E;
static Base_Class bases__ZN4bbbb6zz4322E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy322E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4322E = {  "_ZN4bbbb6zz4322E", // class name
  bases__ZN4bbbb6zz4322E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy422  : ::bbbb::xx22 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy422E) C1{ BC2{ BC3{ Fs} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy422E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy422E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy422E, buf);
    ::bbbb::yy422 &lv = *(new (buf) ::bbbb::yy422());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy422E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy422E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*), 0, "_ZN4bbbb5yy422E");
    check_base_class_offset(lv, (::bbbb::xx22*), 0, "_ZN4bbbb5yy422E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy422E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy422E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy422E(Test__ZN4bbbb5yy422E, "_ZN4bbbb5yy422E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
static Base_Class bases__ZN4bbbb5yy422E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy422E = {  "_ZN4bbbb5yy422E", // class name
  bases__ZN4bbbb5yy422E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0422  : ::bbbb::yy422 {
};
//SIG(1 _ZN4bbbb6zz0422E) C1{ BC2{ BC3{ BC4{ Fs} Fs} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0422E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0422E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0422E, buf);
    ::bbbb::zz0422 &lv = *(new (buf) ::bbbb::zz0422());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0422E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0422E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz0422E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz0422E");
    check_base_class_offset(lv, (::bbbb::yy422*), 0, "_ZN4bbbb6zz0422E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0422E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0422E(Test__ZN4bbbb6zz0422E, "_ZN4bbbb6zz0422E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy422E;
static Base_Class bases__ZN4bbbb6zz0422E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy422E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0422E = {  "_ZN4bbbb6zz0422E", // class name
  bases__ZN4bbbb6zz0422E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1422  : ::bbbb::yy422 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1422E) C1{ BC2{ BC3{ BC4{ Fs} Fs} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1422E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1422E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1422E, buf);
    ::bbbb::zz1422 &lv = *(new (buf) ::bbbb::zz1422());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1422E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1422E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz1422E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz1422E");
    check_base_class_offset(lv, (::bbbb::yy422*), 0, "_ZN4bbbb6zz1422E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1422E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1422E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1422E(Test__ZN4bbbb6zz1422E, "_ZN4bbbb6zz1422E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy422E;
static Base_Class bases__ZN4bbbb6zz1422E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy422E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1422E = {  "_ZN4bbbb6zz1422E", // class name
  bases__ZN4bbbb6zz1422E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2422  : ::bbbb::yy422 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2422E) C1{ BC2{ BC3{ BC4{ Fs} Fs} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2422E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2422E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2422E, buf);
    ::bbbb::zz2422 &lv = *(new (buf) ::bbbb::zz2422());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2422E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2422E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz2422E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz2422E");
    check_base_class_offset(lv, (::bbbb::yy422*), 0, "_ZN4bbbb6zz2422E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2422E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2422E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2422E(Test__ZN4bbbb6zz2422E, "_ZN4bbbb6zz2422E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy422E;
static Base_Class bases__ZN4bbbb6zz2422E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy422E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2422E = {  "_ZN4bbbb6zz2422E", // class name
  bases__ZN4bbbb6zz2422E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3422  : ::bbbb::yy422 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3422E) C1{ BC2{ BC3{ BC4{ Fs} Fs} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3422E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3422E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3422E, buf);
    ::bbbb::zz3422 &lv = *(new (buf) ::bbbb::zz3422());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3422E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3422E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz3422E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz3422E");
    check_base_class_offset(lv, (::bbbb::yy422*), 0, "_ZN4bbbb6zz3422E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3422E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3422E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3422E(Test__ZN4bbbb6zz3422E, "_ZN4bbbb6zz3422E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy422E;
static Base_Class bases__ZN4bbbb6zz3422E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy422E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3422E = {  "_ZN4bbbb6zz3422E", // class name
  bases__ZN4bbbb6zz3422E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4422  : ::bbbb::yy422 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4422E) C1{ BC2{ BC3{ BC4{ Fs} Fs} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4422E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4422E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4422E, buf);
    ::bbbb::zz4422 &lv = *(new (buf) ::bbbb::zz4422());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4422E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4422E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz4422E");
    check_base_class_offset(lv, (::bbbb::xx22*)(::bbbb::yy422*), 0, "_ZN4bbbb6zz4422E");
    check_base_class_offset(lv, (::bbbb::yy422*), 0, "_ZN4bbbb6zz4422E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4422E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4422E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4422E(Test__ZN4bbbb6zz4422E, "_ZN4bbbb6zz4422E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx22E;
extern Class_Descriptor cd__ZN4bbbb5yy422E;
static Base_Class bases__ZN4bbbb6zz4422E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx22E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy422E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4422E = {  "_ZN4bbbb6zz4422E", // class name
  bases__ZN4bbbb6zz4422E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx32  : ::bbbb::ww2 {
  int fb;
};
//SIG(-1 _ZN4bbbb4xx32E) C1{ BC2{ Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx32E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx32E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb4xx32E, buf);
    ::bbbb::xx32 &lv = *(new (buf) ::bbbb::xx32());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb4xx32E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb4xx32E)");
    check_base_class_offset(lv, (::bbbb::ww2*), 0, "_ZN4bbbb4xx32E");
    check_field_offset(lv, fb, 4, "_ZN4bbbb4xx32E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx32E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx32E(Test__ZN4bbbb4xx32E, "_ZN4bbbb4xx32E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
static Base_Class bases__ZN4bbbb4xx32E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx32E = {  "_ZN4bbbb4xx32E", // class name
  bases__ZN4bbbb4xx32E, 1,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy032  : ::bbbb::xx32 {
};
//SIG(-1 _ZN4bbbb5yy032E) C1{ BC2{ BC3{ Fs} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy032E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy032E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy032E, buf);
    ::bbbb::yy032 &lv = *(new (buf) ::bbbb::yy032());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy032E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy032E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*), 0, "_ZN4bbbb5yy032E");
    check_base_class_offset(lv, (::bbbb::xx32*), 0, "_ZN4bbbb5yy032E");
    test_class_info(&lv, &cd__ZN4bbbb5yy032E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy032E(Test__ZN4bbbb5yy032E, "_ZN4bbbb5yy032E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
static Base_Class bases__ZN4bbbb5yy032E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy032E = {  "_ZN4bbbb5yy032E", // class name
  bases__ZN4bbbb5yy032E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0032  : ::bbbb::yy032 {
};
//SIG(1 _ZN4bbbb6zz0032E) C1{ BC2{ BC3{ BC4{ Fs} Fi}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0032E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0032E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0032E, buf);
    ::bbbb::zz0032 &lv = *(new (buf) ::bbbb::zz0032());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0032E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0032E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz0032E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz0032E");
    check_base_class_offset(lv, (::bbbb::yy032*), 0, "_ZN4bbbb6zz0032E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0032E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0032E(Test__ZN4bbbb6zz0032E, "_ZN4bbbb6zz0032E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy032E;
static Base_Class bases__ZN4bbbb6zz0032E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy032E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0032E = {  "_ZN4bbbb6zz0032E", // class name
  bases__ZN4bbbb6zz0032E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1032  : ::bbbb::yy032 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1032E) C1{ BC2{ BC3{ BC4{ Fs} Fi}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1032E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1032E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1032E, buf);
    ::bbbb::zz1032 &lv = *(new (buf) ::bbbb::zz1032());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1032E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1032E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz1032E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz1032E");
    check_base_class_offset(lv, (::bbbb::yy032*), 0, "_ZN4bbbb6zz1032E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1032E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1032E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1032E(Test__ZN4bbbb6zz1032E, "_ZN4bbbb6zz1032E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy032E;
static Base_Class bases__ZN4bbbb6zz1032E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy032E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1032E = {  "_ZN4bbbb6zz1032E", // class name
  bases__ZN4bbbb6zz1032E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2032  : ::bbbb::yy032 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2032E) C1{ BC2{ BC3{ BC4{ Fs} Fi}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2032E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2032E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2032E, buf);
    ::bbbb::zz2032 &lv = *(new (buf) ::bbbb::zz2032());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2032E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2032E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz2032E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz2032E");
    check_base_class_offset(lv, (::bbbb::yy032*), 0, "_ZN4bbbb6zz2032E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2032E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2032E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2032E(Test__ZN4bbbb6zz2032E, "_ZN4bbbb6zz2032E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy032E;
static Base_Class bases__ZN4bbbb6zz2032E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy032E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2032E = {  "_ZN4bbbb6zz2032E", // class name
  bases__ZN4bbbb6zz2032E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3032  : ::bbbb::yy032 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3032E) C1{ BC2{ BC3{ BC4{ Fs} Fi}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3032E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3032E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3032E, buf);
    ::bbbb::zz3032 &lv = *(new (buf) ::bbbb::zz3032());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3032E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3032E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz3032E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz3032E");
    check_base_class_offset(lv, (::bbbb::yy032*), 0, "_ZN4bbbb6zz3032E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3032E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3032E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3032E(Test__ZN4bbbb6zz3032E, "_ZN4bbbb6zz3032E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy032E;
static Base_Class bases__ZN4bbbb6zz3032E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy032E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3032E = {  "_ZN4bbbb6zz3032E", // class name
  bases__ZN4bbbb6zz3032E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4032  : ::bbbb::yy032 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4032E) C1{ BC2{ BC3{ BC4{ Fs} Fi}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4032E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4032E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4032E, buf);
    ::bbbb::zz4032 &lv = *(new (buf) ::bbbb::zz4032());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4032E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4032E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz4032E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy032*), 0, "_ZN4bbbb6zz4032E");
    check_base_class_offset(lv, (::bbbb::yy032*), 0, "_ZN4bbbb6zz4032E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4032E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4032E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4032E(Test__ZN4bbbb6zz4032E, "_ZN4bbbb6zz4032E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy032E;
static Base_Class bases__ZN4bbbb6zz4032E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy032E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4032E = {  "_ZN4bbbb6zz4032E", // class name
  bases__ZN4bbbb6zz4032E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy132  : ::bbbb::xx32 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy132E) C1{ BC2{ BC3{ Fs} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy132E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy132E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy132E, buf);
    ::bbbb::yy132 &lv = *(new (buf) ::bbbb::yy132());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy132E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy132E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*), 0, "_ZN4bbbb5yy132E");
    check_base_class_offset(lv, (::bbbb::xx32*), 0, "_ZN4bbbb5yy132E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy132E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy132E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy132E(Test__ZN4bbbb5yy132E, "_ZN4bbbb5yy132E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
static Base_Class bases__ZN4bbbb5yy132E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy132E = {  "_ZN4bbbb5yy132E", // class name
  bases__ZN4bbbb5yy132E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0132  : ::bbbb::yy132 {
};
//SIG(1 _ZN4bbbb6zz0132E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0132E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0132E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0132E, buf);
    ::bbbb::zz0132 &lv = *(new (buf) ::bbbb::zz0132());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0132E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0132E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz0132E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz0132E");
    check_base_class_offset(lv, (::bbbb::yy132*), 0, "_ZN4bbbb6zz0132E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0132E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0132E(Test__ZN4bbbb6zz0132E, "_ZN4bbbb6zz0132E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy132E;
static Base_Class bases__ZN4bbbb6zz0132E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy132E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0132E = {  "_ZN4bbbb6zz0132E", // class name
  bases__ZN4bbbb6zz0132E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1132  : ::bbbb::yy132 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1132E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1132E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1132E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1132E, buf);
    ::bbbb::zz1132 &lv = *(new (buf) ::bbbb::zz1132());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1132E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1132E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz1132E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz1132E");
    check_base_class_offset(lv, (::bbbb::yy132*), 0, "_ZN4bbbb6zz1132E");
    check_field_offset(lv, fd, 9, "_ZN4bbbb6zz1132E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1132E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1132E(Test__ZN4bbbb6zz1132E, "_ZN4bbbb6zz1132E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy132E;
static Base_Class bases__ZN4bbbb6zz1132E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy132E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1132E = {  "_ZN4bbbb6zz1132E", // class name
  bases__ZN4bbbb6zz1132E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2132  : ::bbbb::yy132 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2132E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2132E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2132E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2132E, buf);
    ::bbbb::zz2132 &lv = *(new (buf) ::bbbb::zz2132());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2132E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2132E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz2132E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz2132E");
    check_base_class_offset(lv, (::bbbb::yy132*), 0, "_ZN4bbbb6zz2132E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2132E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2132E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2132E(Test__ZN4bbbb6zz2132E, "_ZN4bbbb6zz2132E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy132E;
static Base_Class bases__ZN4bbbb6zz2132E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy132E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2132E = {  "_ZN4bbbb6zz2132E", // class name
  bases__ZN4bbbb6zz2132E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3132  : ::bbbb::yy132 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3132E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3132E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3132E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3132E, buf);
    ::bbbb::zz3132 &lv = *(new (buf) ::bbbb::zz3132());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3132E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3132E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz3132E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz3132E");
    check_base_class_offset(lv, (::bbbb::yy132*), 0, "_ZN4bbbb6zz3132E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3132E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3132E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3132E(Test__ZN4bbbb6zz3132E, "_ZN4bbbb6zz3132E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy132E;
static Base_Class bases__ZN4bbbb6zz3132E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy132E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3132E = {  "_ZN4bbbb6zz3132E", // class name
  bases__ZN4bbbb6zz3132E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4132  : ::bbbb::yy132 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4132E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4132E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4132E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4132E, buf);
    ::bbbb::zz4132 &lv = *(new (buf) ::bbbb::zz4132());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4132E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4132E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz4132E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy132*), 0, "_ZN4bbbb6zz4132E");
    check_base_class_offset(lv, (::bbbb::yy132*), 0, "_ZN4bbbb6zz4132E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4132E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4132E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4132E(Test__ZN4bbbb6zz4132E, "_ZN4bbbb6zz4132E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy132E;
static Base_Class bases__ZN4bbbb6zz4132E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy132E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4132E = {  "_ZN4bbbb6zz4132E", // class name
  bases__ZN4bbbb6zz4132E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy232  : ::bbbb::xx32 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy232E) C1{ BC2{ BC3{ Fs} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy232E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy232E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy232E, buf);
    ::bbbb::yy232 &lv = *(new (buf) ::bbbb::yy232());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy232E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy232E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*), 0, "_ZN4bbbb5yy232E");
    check_base_class_offset(lv, (::bbbb::xx32*), 0, "_ZN4bbbb5yy232E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy232E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy232E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy232E(Test__ZN4bbbb5yy232E, "_ZN4bbbb5yy232E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
static Base_Class bases__ZN4bbbb5yy232E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy232E = {  "_ZN4bbbb5yy232E", // class name
  bases__ZN4bbbb5yy232E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0232  : ::bbbb::yy232 {
};
//SIG(1 _ZN4bbbb6zz0232E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0232E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0232E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0232E, buf);
    ::bbbb::zz0232 &lv = *(new (buf) ::bbbb::zz0232());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0232E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0232E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz0232E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz0232E");
    check_base_class_offset(lv, (::bbbb::yy232*), 0, "_ZN4bbbb6zz0232E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0232E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0232E(Test__ZN4bbbb6zz0232E, "_ZN4bbbb6zz0232E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy232E;
static Base_Class bases__ZN4bbbb6zz0232E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy232E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0232E = {  "_ZN4bbbb6zz0232E", // class name
  bases__ZN4bbbb6zz0232E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1232  : ::bbbb::yy232 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1232E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1232E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1232E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1232E, buf);
    ::bbbb::zz1232 &lv = *(new (buf) ::bbbb::zz1232());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1232E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1232E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz1232E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz1232E");
    check_base_class_offset(lv, (::bbbb::yy232*), 0, "_ZN4bbbb6zz1232E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz1232E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1232E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1232E(Test__ZN4bbbb6zz1232E, "_ZN4bbbb6zz1232E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy232E;
static Base_Class bases__ZN4bbbb6zz1232E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy232E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1232E = {  "_ZN4bbbb6zz1232E", // class name
  bases__ZN4bbbb6zz1232E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2232  : ::bbbb::yy232 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2232E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2232E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2232E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2232E, buf);
    ::bbbb::zz2232 &lv = *(new (buf) ::bbbb::zz2232());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2232E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2232E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz2232E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz2232E");
    check_base_class_offset(lv, (::bbbb::yy232*), 0, "_ZN4bbbb6zz2232E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2232E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2232E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2232E(Test__ZN4bbbb6zz2232E, "_ZN4bbbb6zz2232E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy232E;
static Base_Class bases__ZN4bbbb6zz2232E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy232E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2232E = {  "_ZN4bbbb6zz2232E", // class name
  bases__ZN4bbbb6zz2232E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3232  : ::bbbb::yy232 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3232E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3232E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3232E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3232E, buf);
    ::bbbb::zz3232 &lv = *(new (buf) ::bbbb::zz3232());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3232E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3232E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz3232E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz3232E");
    check_base_class_offset(lv, (::bbbb::yy232*), 0, "_ZN4bbbb6zz3232E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3232E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3232E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3232E(Test__ZN4bbbb6zz3232E, "_ZN4bbbb6zz3232E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy232E;
static Base_Class bases__ZN4bbbb6zz3232E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy232E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3232E = {  "_ZN4bbbb6zz3232E", // class name
  bases__ZN4bbbb6zz3232E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4232  : ::bbbb::yy232 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4232E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4232E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4232E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4232E, buf);
    ::bbbb::zz4232 &lv = *(new (buf) ::bbbb::zz4232());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4232E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4232E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz4232E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy232*), 0, "_ZN4bbbb6zz4232E");
    check_base_class_offset(lv, (::bbbb::yy232*), 0, "_ZN4bbbb6zz4232E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4232E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4232E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4232E(Test__ZN4bbbb6zz4232E, "_ZN4bbbb6zz4232E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy232E;
static Base_Class bases__ZN4bbbb6zz4232E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy232E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4232E = {  "_ZN4bbbb6zz4232E", // class name
  bases__ZN4bbbb6zz4232E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy332  : ::bbbb::xx32 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy332E) C1{ BC2{ BC3{ Fs} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy332E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy332E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy332E, buf);
    ::bbbb::yy332 &lv = *(new (buf) ::bbbb::yy332());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy332E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy332E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*), 0, "_ZN4bbbb5yy332E");
    check_base_class_offset(lv, (::bbbb::xx32*), 0, "_ZN4bbbb5yy332E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy332E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy332E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy332E(Test__ZN4bbbb5yy332E, "_ZN4bbbb5yy332E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
static Base_Class bases__ZN4bbbb5yy332E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy332E = {  "_ZN4bbbb5yy332E", // class name
  bases__ZN4bbbb5yy332E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0332  : ::bbbb::yy332 {
};
//SIG(1 _ZN4bbbb6zz0332E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0332E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0332E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0332E, buf);
    ::bbbb::zz0332 &lv = *(new (buf) ::bbbb::zz0332());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0332E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0332E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz0332E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz0332E");
    check_base_class_offset(lv, (::bbbb::yy332*), 0, "_ZN4bbbb6zz0332E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0332E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0332E(Test__ZN4bbbb6zz0332E, "_ZN4bbbb6zz0332E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy332E;
static Base_Class bases__ZN4bbbb6zz0332E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy332E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0332E = {  "_ZN4bbbb6zz0332E", // class name
  bases__ZN4bbbb6zz0332E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1332  : ::bbbb::yy332 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1332E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1332E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1332E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz1332E, buf);
    ::bbbb::zz1332 &lv = *(new (buf) ::bbbb::zz1332());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1332E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1332E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz1332E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz1332E");
    check_base_class_offset(lv, (::bbbb::yy332*), 0, "_ZN4bbbb6zz1332E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1332E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1332E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1332E(Test__ZN4bbbb6zz1332E, "_ZN4bbbb6zz1332E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy332E;
static Base_Class bases__ZN4bbbb6zz1332E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy332E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1332E = {  "_ZN4bbbb6zz1332E", // class name
  bases__ZN4bbbb6zz1332E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2332  : ::bbbb::yy332 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2332E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2332E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2332E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz2332E, buf);
    ::bbbb::zz2332 &lv = *(new (buf) ::bbbb::zz2332());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2332E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2332E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz2332E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz2332E");
    check_base_class_offset(lv, (::bbbb::yy332*), 0, "_ZN4bbbb6zz2332E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2332E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2332E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2332E(Test__ZN4bbbb6zz2332E, "_ZN4bbbb6zz2332E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy332E;
static Base_Class bases__ZN4bbbb6zz2332E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy332E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2332E = {  "_ZN4bbbb6zz2332E", // class name
  bases__ZN4bbbb6zz2332E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3332  : ::bbbb::yy332 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3332E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3332E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3332E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3332E, buf);
    ::bbbb::zz3332 &lv = *(new (buf) ::bbbb::zz3332());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3332E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3332E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz3332E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz3332E");
    check_base_class_offset(lv, (::bbbb::yy332*), 0, "_ZN4bbbb6zz3332E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3332E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3332E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3332E(Test__ZN4bbbb6zz3332E, "_ZN4bbbb6zz3332E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy332E;
static Base_Class bases__ZN4bbbb6zz3332E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy332E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3332E = {  "_ZN4bbbb6zz3332E", // class name
  bases__ZN4bbbb6zz3332E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4332  : ::bbbb::yy332 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4332E) C1{ BC2{ BC3{ BC4{ Fs} Fi} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4332E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4332E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4332E, buf);
    ::bbbb::zz4332 &lv = *(new (buf) ::bbbb::zz4332());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4332E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4332E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz4332E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy332*), 0, "_ZN4bbbb6zz4332E");
    check_base_class_offset(lv, (::bbbb::yy332*), 0, "_ZN4bbbb6zz4332E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4332E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4332E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4332E(Test__ZN4bbbb6zz4332E, "_ZN4bbbb6zz4332E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy332E;
static Base_Class bases__ZN4bbbb6zz4332E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy332E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4332E = {  "_ZN4bbbb6zz4332E", // class name
  bases__ZN4bbbb6zz4332E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy432  : ::bbbb::xx32 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy432E) C1{ BC2{ BC3{ Fs} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy432E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy432E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy432E, buf);
    ::bbbb::yy432 &lv = *(new (buf) ::bbbb::yy432());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy432E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy432E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*), 0, "_ZN4bbbb5yy432E");
    check_base_class_offset(lv, (::bbbb::xx32*), 0, "_ZN4bbbb5yy432E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy432E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy432E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy432E(Test__ZN4bbbb5yy432E, "_ZN4bbbb5yy432E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
static Base_Class bases__ZN4bbbb5yy432E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy432E = {  "_ZN4bbbb5yy432E", // class name
  bases__ZN4bbbb5yy432E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0432  : ::bbbb::yy432 {
};
//SIG(1 _ZN4bbbb6zz0432E) C1{ BC2{ BC3{ BC4{ Fs} Fi} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0432E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0432E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0432E, buf);
    ::bbbb::zz0432 &lv = *(new (buf) ::bbbb::zz0432());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0432E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0432E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz0432E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz0432E");
    check_base_class_offset(lv, (::bbbb::yy432*), 0, "_ZN4bbbb6zz0432E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0432E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0432E(Test__ZN4bbbb6zz0432E, "_ZN4bbbb6zz0432E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy432E;
static Base_Class bases__ZN4bbbb6zz0432E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy432E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0432E = {  "_ZN4bbbb6zz0432E", // class name
  bases__ZN4bbbb6zz0432E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1432  : ::bbbb::yy432 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1432E) C1{ BC2{ BC3{ BC4{ Fs} Fi} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1432E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1432E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1432E, buf);
    ::bbbb::zz1432 &lv = *(new (buf) ::bbbb::zz1432());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1432E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1432E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz1432E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz1432E");
    check_base_class_offset(lv, (::bbbb::yy432*), 0, "_ZN4bbbb6zz1432E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1432E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1432E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1432E(Test__ZN4bbbb6zz1432E, "_ZN4bbbb6zz1432E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy432E;
static Base_Class bases__ZN4bbbb6zz1432E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy432E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1432E = {  "_ZN4bbbb6zz1432E", // class name
  bases__ZN4bbbb6zz1432E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2432  : ::bbbb::yy432 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2432E) C1{ BC2{ BC3{ BC4{ Fs} Fi} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2432E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2432E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2432E, buf);
    ::bbbb::zz2432 &lv = *(new (buf) ::bbbb::zz2432());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2432E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2432E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz2432E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz2432E");
    check_base_class_offset(lv, (::bbbb::yy432*), 0, "_ZN4bbbb6zz2432E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2432E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2432E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2432E(Test__ZN4bbbb6zz2432E, "_ZN4bbbb6zz2432E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy432E;
static Base_Class bases__ZN4bbbb6zz2432E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy432E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2432E = {  "_ZN4bbbb6zz2432E", // class name
  bases__ZN4bbbb6zz2432E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3432  : ::bbbb::yy432 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3432E) C1{ BC2{ BC3{ BC4{ Fs} Fi} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3432E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3432E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3432E, buf);
    ::bbbb::zz3432 &lv = *(new (buf) ::bbbb::zz3432());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3432E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3432E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz3432E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz3432E");
    check_base_class_offset(lv, (::bbbb::yy432*), 0, "_ZN4bbbb6zz3432E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3432E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3432E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3432E(Test__ZN4bbbb6zz3432E, "_ZN4bbbb6zz3432E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy432E;
static Base_Class bases__ZN4bbbb6zz3432E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy432E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3432E = {  "_ZN4bbbb6zz3432E", // class name
  bases__ZN4bbbb6zz3432E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4432  : ::bbbb::yy432 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4432E) C1{ BC2{ BC3{ BC4{ Fs} Fi} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4432E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4432E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4432E, buf);
    ::bbbb::zz4432 &lv = *(new (buf) ::bbbb::zz4432());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4432E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4432E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz4432E");
    check_base_class_offset(lv, (::bbbb::xx32*)(::bbbb::yy432*), 0, "_ZN4bbbb6zz4432E");
    check_base_class_offset(lv, (::bbbb::yy432*), 0, "_ZN4bbbb6zz4432E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4432E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4432E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4432E(Test__ZN4bbbb6zz4432E, "_ZN4bbbb6zz4432E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx32E;
extern Class_Descriptor cd__ZN4bbbb5yy432E;
static Base_Class bases__ZN4bbbb6zz4432E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx32E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy432E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4432E = {  "_ZN4bbbb6zz4432E", // class name
  bases__ZN4bbbb6zz4432E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx42  : ::bbbb::ww2 {
  double fb;
};
//SIG(-1 _ZN4bbbb4xx42E) C1{ BC2{ Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx42E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx42E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb4xx42E, buf);
    ::bbbb::xx42 &lv = *(new (buf) ::bbbb::xx42());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb4xx42E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb4xx42E)");
    check_base_class_offset(lv, (::bbbb::ww2*), 0, "_ZN4bbbb4xx42E");
    check_field_offset(lv, fb, ABISELECT(8,4), "_ZN4bbbb4xx42E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx42E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx42E(Test__ZN4bbbb4xx42E, "_ZN4bbbb4xx42E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
static Base_Class bases__ZN4bbbb4xx42E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx42E = {  "_ZN4bbbb4xx42E", // class name
  bases__ZN4bbbb4xx42E, 1,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy042  : ::bbbb::xx42 {
};
//SIG(-1 _ZN4bbbb5yy042E) C1{ BC2{ BC3{ Fs} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy042E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy042E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy042E, buf);
    ::bbbb::yy042 &lv = *(new (buf) ::bbbb::yy042());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy042E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy042E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*), 0, "_ZN4bbbb5yy042E");
    check_base_class_offset(lv, (::bbbb::xx42*), 0, "_ZN4bbbb5yy042E");
    test_class_info(&lv, &cd__ZN4bbbb5yy042E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy042E(Test__ZN4bbbb5yy042E, "_ZN4bbbb5yy042E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
static Base_Class bases__ZN4bbbb5yy042E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy042E = {  "_ZN4bbbb5yy042E", // class name
  bases__ZN4bbbb5yy042E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0042  : ::bbbb::yy042 {
};
//SIG(1 _ZN4bbbb6zz0042E) C1{ BC2{ BC3{ BC4{ Fs} FL}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0042E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0042E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0042E, buf);
    ::bbbb::zz0042 &lv = *(new (buf) ::bbbb::zz0042());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0042E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0042E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz0042E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz0042E");
    check_base_class_offset(lv, (::bbbb::yy042*), 0, "_ZN4bbbb6zz0042E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0042E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0042E(Test__ZN4bbbb6zz0042E, "_ZN4bbbb6zz0042E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy042E;
static Base_Class bases__ZN4bbbb6zz0042E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy042E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0042E = {  "_ZN4bbbb6zz0042E", // class name
  bases__ZN4bbbb6zz0042E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1042  : ::bbbb::yy042 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1042E) C1{ BC2{ BC3{ BC4{ Fs} FL}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1042E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1042E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1042E, buf);
    ::bbbb::zz1042 &lv = *(new (buf) ::bbbb::zz1042());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1042E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1042E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz1042E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz1042E");
    check_base_class_offset(lv, (::bbbb::yy042*), 0, "_ZN4bbbb6zz1042E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1042E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1042E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1042E(Test__ZN4bbbb6zz1042E, "_ZN4bbbb6zz1042E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy042E;
static Base_Class bases__ZN4bbbb6zz1042E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy042E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1042E = {  "_ZN4bbbb6zz1042E", // class name
  bases__ZN4bbbb6zz1042E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2042  : ::bbbb::yy042 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2042E) C1{ BC2{ BC3{ BC4{ Fs} FL}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2042E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2042E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2042E, buf);
    ::bbbb::zz2042 &lv = *(new (buf) ::bbbb::zz2042());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2042E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2042E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz2042E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz2042E");
    check_base_class_offset(lv, (::bbbb::yy042*), 0, "_ZN4bbbb6zz2042E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2042E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2042E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2042E(Test__ZN4bbbb6zz2042E, "_ZN4bbbb6zz2042E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy042E;
static Base_Class bases__ZN4bbbb6zz2042E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy042E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2042E = {  "_ZN4bbbb6zz2042E", // class name
  bases__ZN4bbbb6zz2042E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3042  : ::bbbb::yy042 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3042E) C1{ BC2{ BC3{ BC4{ Fs} FL}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3042E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3042E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3042E, buf);
    ::bbbb::zz3042 &lv = *(new (buf) ::bbbb::zz3042());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3042E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3042E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz3042E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz3042E");
    check_base_class_offset(lv, (::bbbb::yy042*), 0, "_ZN4bbbb6zz3042E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3042E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3042E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3042E(Test__ZN4bbbb6zz3042E, "_ZN4bbbb6zz3042E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy042E;
static Base_Class bases__ZN4bbbb6zz3042E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy042E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3042E = {  "_ZN4bbbb6zz3042E", // class name
  bases__ZN4bbbb6zz3042E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4042  : ::bbbb::yy042 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4042E) C1{ BC2{ BC3{ BC4{ Fs} FL}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4042E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4042E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4042E, buf);
    ::bbbb::zz4042 &lv = *(new (buf) ::bbbb::zz4042());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4042E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4042E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz4042E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy042*), 0, "_ZN4bbbb6zz4042E");
    check_base_class_offset(lv, (::bbbb::yy042*), 0, "_ZN4bbbb6zz4042E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4042E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4042E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4042E(Test__ZN4bbbb6zz4042E, "_ZN4bbbb6zz4042E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy042E;
static Base_Class bases__ZN4bbbb6zz4042E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy042E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4042E = {  "_ZN4bbbb6zz4042E", // class name
  bases__ZN4bbbb6zz4042E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy142  : ::bbbb::xx42 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy142E) C1{ BC2{ BC3{ Fs} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy142E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy142E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb5yy142E, buf);
    ::bbbb::yy142 &lv = *(new (buf) ::bbbb::yy142());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb5yy142E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy142E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*), 0, "_ZN4bbbb5yy142E");
    check_base_class_offset(lv, (::bbbb::xx42*), 0, "_ZN4bbbb5yy142E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy142E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy142E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy142E(Test__ZN4bbbb5yy142E, "_ZN4bbbb5yy142E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
static Base_Class bases__ZN4bbbb5yy142E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy142E = {  "_ZN4bbbb5yy142E", // class name
  bases__ZN4bbbb5yy142E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0142  : ::bbbb::yy142 {
};
//SIG(1 _ZN4bbbb6zz0142E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0142E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0142E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz0142E, buf);
    ::bbbb::zz0142 &lv = *(new (buf) ::bbbb::zz0142());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz0142E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0142E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz0142E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz0142E");
    check_base_class_offset(lv, (::bbbb::yy142*), 0, "_ZN4bbbb6zz0142E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0142E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0142E(Test__ZN4bbbb6zz0142E, "_ZN4bbbb6zz0142E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy142E;
static Base_Class bases__ZN4bbbb6zz0142E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy142E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0142E = {  "_ZN4bbbb6zz0142E", // class name
  bases__ZN4bbbb6zz0142E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1142  : ::bbbb::yy142 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1142E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1142E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1142E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1142E, buf);
    ::bbbb::zz1142 &lv = *(new (buf) ::bbbb::zz1142());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1142E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1142E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz1142E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz1142E");
    check_base_class_offset(lv, (::bbbb::yy142*), 0, "_ZN4bbbb6zz1142E");
    check_field_offset(lv, fd, ABISELECT(17,13), "_ZN4bbbb6zz1142E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1142E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1142E(Test__ZN4bbbb6zz1142E, "_ZN4bbbb6zz1142E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy142E;
static Base_Class bases__ZN4bbbb6zz1142E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy142E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1142E = {  "_ZN4bbbb6zz1142E", // class name
  bases__ZN4bbbb6zz1142E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2142  : ::bbbb::yy142 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2142E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2142E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2142E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2142E, buf);
    ::bbbb::zz2142 &lv = *(new (buf) ::bbbb::zz2142());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2142E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2142E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz2142E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz2142E");
    check_base_class_offset(lv, (::bbbb::yy142*), 0, "_ZN4bbbb6zz2142E");
    check_field_offset(lv, fd, ABISELECT(18,14), "_ZN4bbbb6zz2142E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2142E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2142E(Test__ZN4bbbb6zz2142E, "_ZN4bbbb6zz2142E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy142E;
static Base_Class bases__ZN4bbbb6zz2142E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy142E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2142E = {  "_ZN4bbbb6zz2142E", // class name
  bases__ZN4bbbb6zz2142E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3142  : ::bbbb::yy142 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3142E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3142E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3142E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3142E, buf);
    ::bbbb::zz3142 &lv = *(new (buf) ::bbbb::zz3142());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3142E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3142E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz3142E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz3142E");
    check_base_class_offset(lv, (::bbbb::yy142*), 0, "_ZN4bbbb6zz3142E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz3142E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3142E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3142E(Test__ZN4bbbb6zz3142E, "_ZN4bbbb6zz3142E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy142E;
static Base_Class bases__ZN4bbbb6zz3142E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy142E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3142E = {  "_ZN4bbbb6zz3142E", // class name
  bases__ZN4bbbb6zz3142E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4142  : ::bbbb::yy142 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4142E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4142E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4142E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz4142E, buf);
    ::bbbb::zz4142 &lv = *(new (buf) ::bbbb::zz4142());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz4142E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4142E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz4142E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy142*), 0, "_ZN4bbbb6zz4142E");
    check_base_class_offset(lv, (::bbbb::yy142*), 0, "_ZN4bbbb6zz4142E");
    check_field_offset(lv, fd, ABISELECT(24,16), "_ZN4bbbb6zz4142E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4142E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4142E(Test__ZN4bbbb6zz4142E, "_ZN4bbbb6zz4142E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy142E;
static Base_Class bases__ZN4bbbb6zz4142E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy142E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4142E = {  "_ZN4bbbb6zz4142E", // class name
  bases__ZN4bbbb6zz4142E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy242  : ::bbbb::xx42 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy242E) C1{ BC2{ BC3{ Fs} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy242E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy242E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb5yy242E, buf);
    ::bbbb::yy242 &lv = *(new (buf) ::bbbb::yy242());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb5yy242E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy242E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*), 0, "_ZN4bbbb5yy242E");
    check_base_class_offset(lv, (::bbbb::xx42*), 0, "_ZN4bbbb5yy242E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy242E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy242E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy242E(Test__ZN4bbbb5yy242E, "_ZN4bbbb5yy242E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
static Base_Class bases__ZN4bbbb5yy242E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy242E = {  "_ZN4bbbb5yy242E", // class name
  bases__ZN4bbbb5yy242E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0242  : ::bbbb::yy242 {
};
//SIG(1 _ZN4bbbb6zz0242E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0242E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0242E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz0242E, buf);
    ::bbbb::zz0242 &lv = *(new (buf) ::bbbb::zz0242());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz0242E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0242E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz0242E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz0242E");
    check_base_class_offset(lv, (::bbbb::yy242*), 0, "_ZN4bbbb6zz0242E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0242E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0242E(Test__ZN4bbbb6zz0242E, "_ZN4bbbb6zz0242E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy242E;
static Base_Class bases__ZN4bbbb6zz0242E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy242E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0242E = {  "_ZN4bbbb6zz0242E", // class name
  bases__ZN4bbbb6zz0242E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1242  : ::bbbb::yy242 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1242E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1242E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1242E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1242E, buf);
    ::bbbb::zz1242 &lv = *(new (buf) ::bbbb::zz1242());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1242E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1242E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz1242E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz1242E");
    check_base_class_offset(lv, (::bbbb::yy242*), 0, "_ZN4bbbb6zz1242E");
    check_field_offset(lv, fd, ABISELECT(18,14), "_ZN4bbbb6zz1242E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1242E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1242E(Test__ZN4bbbb6zz1242E, "_ZN4bbbb6zz1242E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy242E;
static Base_Class bases__ZN4bbbb6zz1242E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy242E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1242E = {  "_ZN4bbbb6zz1242E", // class name
  bases__ZN4bbbb6zz1242E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2242  : ::bbbb::yy242 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2242E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2242E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2242E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2242E, buf);
    ::bbbb::zz2242 &lv = *(new (buf) ::bbbb::zz2242());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2242E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2242E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz2242E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz2242E");
    check_base_class_offset(lv, (::bbbb::yy242*), 0, "_ZN4bbbb6zz2242E");
    check_field_offset(lv, fd, ABISELECT(18,14), "_ZN4bbbb6zz2242E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2242E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2242E(Test__ZN4bbbb6zz2242E, "_ZN4bbbb6zz2242E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy242E;
static Base_Class bases__ZN4bbbb6zz2242E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy242E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2242E = {  "_ZN4bbbb6zz2242E", // class name
  bases__ZN4bbbb6zz2242E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3242  : ::bbbb::yy242 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3242E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3242E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3242E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3242E, buf);
    ::bbbb::zz3242 &lv = *(new (buf) ::bbbb::zz3242());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3242E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3242E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz3242E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz3242E");
    check_base_class_offset(lv, (::bbbb::yy242*), 0, "_ZN4bbbb6zz3242E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz3242E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3242E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3242E(Test__ZN4bbbb6zz3242E, "_ZN4bbbb6zz3242E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy242E;
static Base_Class bases__ZN4bbbb6zz3242E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy242E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3242E = {  "_ZN4bbbb6zz3242E", // class name
  bases__ZN4bbbb6zz3242E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4242  : ::bbbb::yy242 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4242E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4242E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4242E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz4242E, buf);
    ::bbbb::zz4242 &lv = *(new (buf) ::bbbb::zz4242());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz4242E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4242E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz4242E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy242*), 0, "_ZN4bbbb6zz4242E");
    check_base_class_offset(lv, (::bbbb::yy242*), 0, "_ZN4bbbb6zz4242E");
    check_field_offset(lv, fd, ABISELECT(24,16), "_ZN4bbbb6zz4242E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4242E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4242E(Test__ZN4bbbb6zz4242E, "_ZN4bbbb6zz4242E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy242E;
static Base_Class bases__ZN4bbbb6zz4242E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy242E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4242E = {  "_ZN4bbbb6zz4242E", // class name
  bases__ZN4bbbb6zz4242E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy342  : ::bbbb::xx42 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy342E) C1{ BC2{ BC3{ Fs} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy342E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy342E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb5yy342E, buf);
    ::bbbb::yy342 &lv = *(new (buf) ::bbbb::yy342());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb5yy342E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy342E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*), 0, "_ZN4bbbb5yy342E");
    check_base_class_offset(lv, (::bbbb::xx42*), 0, "_ZN4bbbb5yy342E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy342E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy342E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy342E(Test__ZN4bbbb5yy342E, "_ZN4bbbb5yy342E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
static Base_Class bases__ZN4bbbb5yy342E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy342E = {  "_ZN4bbbb5yy342E", // class name
  bases__ZN4bbbb5yy342E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0342  : ::bbbb::yy342 {
};
//SIG(1 _ZN4bbbb6zz0342E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0342E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0342E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz0342E, buf);
    ::bbbb::zz0342 &lv = *(new (buf) ::bbbb::zz0342());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz0342E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0342E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz0342E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz0342E");
    check_base_class_offset(lv, (::bbbb::yy342*), 0, "_ZN4bbbb6zz0342E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0342E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0342E(Test__ZN4bbbb6zz0342E, "_ZN4bbbb6zz0342E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy342E;
static Base_Class bases__ZN4bbbb6zz0342E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy342E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0342E = {  "_ZN4bbbb6zz0342E", // class name
  bases__ZN4bbbb6zz0342E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1342  : ::bbbb::yy342 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1342E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1342E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1342E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1342E, buf);
    ::bbbb::zz1342 &lv = *(new (buf) ::bbbb::zz1342());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1342E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1342E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz1342E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz1342E");
    check_base_class_offset(lv, (::bbbb::yy342*), 0, "_ZN4bbbb6zz1342E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz1342E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1342E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1342E(Test__ZN4bbbb6zz1342E, "_ZN4bbbb6zz1342E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy342E;
static Base_Class bases__ZN4bbbb6zz1342E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy342E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1342E = {  "_ZN4bbbb6zz1342E", // class name
  bases__ZN4bbbb6zz1342E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2342  : ::bbbb::yy342 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2342E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2342E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2342E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2342E, buf);
    ::bbbb::zz2342 &lv = *(new (buf) ::bbbb::zz2342());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2342E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2342E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz2342E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz2342E");
    check_base_class_offset(lv, (::bbbb::yy342*), 0, "_ZN4bbbb6zz2342E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz2342E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2342E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2342E(Test__ZN4bbbb6zz2342E, "_ZN4bbbb6zz2342E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy342E;
static Base_Class bases__ZN4bbbb6zz2342E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy342E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2342E = {  "_ZN4bbbb6zz2342E", // class name
  bases__ZN4bbbb6zz2342E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3342  : ::bbbb::yy342 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3342E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3342E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3342E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3342E, buf);
    ::bbbb::zz3342 &lv = *(new (buf) ::bbbb::zz3342());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3342E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3342E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz3342E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz3342E");
    check_base_class_offset(lv, (::bbbb::yy342*), 0, "_ZN4bbbb6zz3342E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz3342E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3342E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3342E(Test__ZN4bbbb6zz3342E, "_ZN4bbbb6zz3342E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy342E;
static Base_Class bases__ZN4bbbb6zz3342E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy342E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3342E = {  "_ZN4bbbb6zz3342E", // class name
  bases__ZN4bbbb6zz3342E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4342  : ::bbbb::yy342 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4342E) C1{ BC2{ BC3{ BC4{ Fs} FL} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4342E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4342E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz4342E, buf);
    ::bbbb::zz4342 &lv = *(new (buf) ::bbbb::zz4342());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz4342E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4342E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz4342E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy342*), 0, "_ZN4bbbb6zz4342E");
    check_base_class_offset(lv, (::bbbb::yy342*), 0, "_ZN4bbbb6zz4342E");
    check_field_offset(lv, fd, ABISELECT(24,16), "_ZN4bbbb6zz4342E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4342E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4342E(Test__ZN4bbbb6zz4342E, "_ZN4bbbb6zz4342E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy342E;
static Base_Class bases__ZN4bbbb6zz4342E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy342E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4342E = {  "_ZN4bbbb6zz4342E", // class name
  bases__ZN4bbbb6zz4342E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy442  : ::bbbb::xx42 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy442E) C1{ BC2{ BC3{ Fs} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy442E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy442E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb5yy442E, buf);
    ::bbbb::yy442 &lv = *(new (buf) ::bbbb::yy442());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb5yy442E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy442E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*), 0, "_ZN4bbbb5yy442E");
    check_base_class_offset(lv, (::bbbb::xx42*), 0, "_ZN4bbbb5yy442E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy442E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy442E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy442E(Test__ZN4bbbb5yy442E, "_ZN4bbbb5yy442E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
static Base_Class bases__ZN4bbbb5yy442E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy442E = {  "_ZN4bbbb5yy442E", // class name
  bases__ZN4bbbb5yy442E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0442  : ::bbbb::yy442 {
};
//SIG(1 _ZN4bbbb6zz0442E) C1{ BC2{ BC3{ BC4{ Fs} FL} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0442E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0442E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz0442E, buf);
    ::bbbb::zz0442 &lv = *(new (buf) ::bbbb::zz0442());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz0442E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0442E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz0442E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz0442E");
    check_base_class_offset(lv, (::bbbb::yy442*), 0, "_ZN4bbbb6zz0442E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0442E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0442E(Test__ZN4bbbb6zz0442E, "_ZN4bbbb6zz0442E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy442E;
static Base_Class bases__ZN4bbbb6zz0442E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy442E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0442E = {  "_ZN4bbbb6zz0442E", // class name
  bases__ZN4bbbb6zz0442E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1442  : ::bbbb::yy442 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1442E) C1{ BC2{ BC3{ BC4{ Fs} FL} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1442E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1442E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz1442E, buf);
    ::bbbb::zz1442 &lv = *(new (buf) ::bbbb::zz1442());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz1442E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1442E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz1442E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz1442E");
    check_base_class_offset(lv, (::bbbb::yy442*), 0, "_ZN4bbbb6zz1442E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz1442E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1442E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1442E(Test__ZN4bbbb6zz1442E, "_ZN4bbbb6zz1442E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy442E;
static Base_Class bases__ZN4bbbb6zz1442E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy442E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1442E = {  "_ZN4bbbb6zz1442E", // class name
  bases__ZN4bbbb6zz1442E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2442  : ::bbbb::yy442 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2442E) C1{ BC2{ BC3{ BC4{ Fs} FL} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2442E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2442E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz2442E, buf);
    ::bbbb::zz2442 &lv = *(new (buf) ::bbbb::zz2442());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz2442E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2442E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz2442E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz2442E");
    check_base_class_offset(lv, (::bbbb::yy442*), 0, "_ZN4bbbb6zz2442E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz2442E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2442E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2442E(Test__ZN4bbbb6zz2442E, "_ZN4bbbb6zz2442E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy442E;
static Base_Class bases__ZN4bbbb6zz2442E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy442E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2442E = {  "_ZN4bbbb6zz2442E", // class name
  bases__ZN4bbbb6zz2442E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3442  : ::bbbb::yy442 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3442E) C1{ BC2{ BC3{ BC4{ Fs} FL} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3442E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3442E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz3442E, buf);
    ::bbbb::zz3442 &lv = *(new (buf) ::bbbb::zz3442());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz3442E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3442E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz3442E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz3442E");
    check_base_class_offset(lv, (::bbbb::yy442*), 0, "_ZN4bbbb6zz3442E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz3442E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3442E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3442E(Test__ZN4bbbb6zz3442E, "_ZN4bbbb6zz3442E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy442E;
static Base_Class bases__ZN4bbbb6zz3442E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy442E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3442E = {  "_ZN4bbbb6zz3442E", // class name
  bases__ZN4bbbb6zz3442E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4442  : ::bbbb::yy442 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4442E) C1{ BC2{ BC3{ BC4{ Fs} FL} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4442E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4442E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz4442E, buf);
    ::bbbb::zz4442 &lv = *(new (buf) ::bbbb::zz4442());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz4442E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4442E)");
    check_base_class_offset(lv, (::bbbb::ww2*)(::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz4442E");
    check_base_class_offset(lv, (::bbbb::xx42*)(::bbbb::yy442*), 0, "_ZN4bbbb6zz4442E");
    check_base_class_offset(lv, (::bbbb::yy442*), 0, "_ZN4bbbb6zz4442E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz4442E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4442E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4442E(Test__ZN4bbbb6zz4442E, "_ZN4bbbb6zz4442E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww2E;
extern Class_Descriptor cd__ZN4bbbb4xx42E;
extern Class_Descriptor cd__ZN4bbbb5yy442E;
static Base_Class bases__ZN4bbbb6zz4442E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww2E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx42E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy442E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4442E = {  "_ZN4bbbb6zz4442E", // class name
  bases__ZN4bbbb6zz4442E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  ww3  {
  int fa;
};
//SIG(-1 _ZN4bbbb3ww3E) C1{ Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb3ww3E()
{
  {
    init_simple_test("_ZN4bbbb3ww3E");
    ::bbbb::ww3 lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb3ww3E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb3ww3E)");
    check_field_offset(lv, fa, 0, "_ZN4bbbb3ww3E.fa");
  }
}
static Arrange_To_Call_Me v_ZN4bbbb3ww3E(Test__ZN4bbbb3ww3E, "_ZN4bbbb3ww3E", 4);

#else // __cplusplus

Class_Descriptor cd__ZN4bbbb3ww3E = {  "_ZN4bbbb3ww3E", // class name
  0,0,//no base classes
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx03  : ::bbbb::ww3 {
};
//SIG(-1 _ZN4bbbb4xx03E) C1{ BC2{ Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx03E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx03E;
  void *lvp;
  {
    int buf[2];
    init_test(&cd__ZN4bbbb4xx03E, buf);
    ::bbbb::xx03 &lv = *(new (buf) ::bbbb::xx03());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb4xx03E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb4xx03E)");
    check_base_class_offset(lv, (::bbbb::ww3*), 0, "_ZN4bbbb4xx03E");
    test_class_info(&lv, &cd__ZN4bbbb4xx03E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx03E(Test__ZN4bbbb4xx03E, "_ZN4bbbb4xx03E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
static Base_Class bases__ZN4bbbb4xx03E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx03E = {  "_ZN4bbbb4xx03E", // class name
  bases__ZN4bbbb4xx03E, 1,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy003  : ::bbbb::xx03 {
};
//SIG(-1 _ZN4bbbb5yy003E) C1{ BC2{ BC3{ Fi}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy003E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy003E;
  void *lvp;
  {
    int buf[2];
    init_test(&cd__ZN4bbbb5yy003E, buf);
    ::bbbb::yy003 &lv = *(new (buf) ::bbbb::yy003());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb5yy003E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy003E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*), 0, "_ZN4bbbb5yy003E");
    check_base_class_offset(lv, (::bbbb::xx03*), 0, "_ZN4bbbb5yy003E");
    test_class_info(&lv, &cd__ZN4bbbb5yy003E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy003E(Test__ZN4bbbb5yy003E, "_ZN4bbbb5yy003E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
static Base_Class bases__ZN4bbbb5yy003E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy003E = {  "_ZN4bbbb5yy003E", // class name
  bases__ZN4bbbb5yy003E, 2,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0003  : ::bbbb::yy003 {
};
//SIG(1 _ZN4bbbb6zz0003E) C1{ BC2{ BC3{ BC4{ Fi}}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0003E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0003E;
  void *lvp;
  {
    int buf[2];
    init_test(&cd__ZN4bbbb6zz0003E, buf);
    ::bbbb::zz0003 &lv = *(new (buf) ::bbbb::zz0003());
    lvp = (void*)&lv;
    check2(sizeof(lv), 4, "sizeof(_ZN4bbbb6zz0003E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0003E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz0003E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz0003E");
    check_base_class_offset(lv, (::bbbb::yy003*), 0, "_ZN4bbbb6zz0003E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0003E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0003E(Test__ZN4bbbb6zz0003E, "_ZN4bbbb6zz0003E", 4);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy003E;
static Base_Class bases__ZN4bbbb6zz0003E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy003E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0003E = {  "_ZN4bbbb6zz0003E", // class name
  bases__ZN4bbbb6zz0003E, 3,
  0, // no vftv
  0, //no vtt
  4, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1003  : ::bbbb::yy003 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1003E) C1{ BC2{ BC3{ BC4{ Fi}}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1003E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1003E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1003E, buf);
    ::bbbb::zz1003 &lv = *(new (buf) ::bbbb::zz1003());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1003E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1003E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz1003E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz1003E");
    check_base_class_offset(lv, (::bbbb::yy003*), 0, "_ZN4bbbb6zz1003E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz1003E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1003E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1003E(Test__ZN4bbbb6zz1003E, "_ZN4bbbb6zz1003E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy003E;
static Base_Class bases__ZN4bbbb6zz1003E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy003E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1003E = {  "_ZN4bbbb6zz1003E", // class name
  bases__ZN4bbbb6zz1003E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2003  : ::bbbb::yy003 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2003E) C1{ BC2{ BC3{ BC4{ Fi}}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2003E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2003E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2003E, buf);
    ::bbbb::zz2003 &lv = *(new (buf) ::bbbb::zz2003());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2003E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2003E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz2003E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz2003E");
    check_base_class_offset(lv, (::bbbb::yy003*), 0, "_ZN4bbbb6zz2003E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz2003E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2003E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2003E(Test__ZN4bbbb6zz2003E, "_ZN4bbbb6zz2003E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy003E;
static Base_Class bases__ZN4bbbb6zz2003E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy003E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2003E = {  "_ZN4bbbb6zz2003E", // class name
  bases__ZN4bbbb6zz2003E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3003  : ::bbbb::yy003 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3003E) C1{ BC2{ BC3{ BC4{ Fi}}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3003E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3003E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz3003E, buf);
    ::bbbb::zz3003 &lv = *(new (buf) ::bbbb::zz3003());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz3003E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3003E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz3003E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz3003E");
    check_base_class_offset(lv, (::bbbb::yy003*), 0, "_ZN4bbbb6zz3003E");
    check_field_offset(lv, fd, 4, "_ZN4bbbb6zz3003E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3003E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3003E(Test__ZN4bbbb6zz3003E, "_ZN4bbbb6zz3003E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy003E;
static Base_Class bases__ZN4bbbb6zz3003E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy003E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3003E = {  "_ZN4bbbb6zz3003E", // class name
  bases__ZN4bbbb6zz3003E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4003  : ::bbbb::yy003 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4003E) C1{ BC2{ BC3{ BC4{ Fi}}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4003E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4003E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz4003E, buf);
    ::bbbb::zz4003 &lv = *(new (buf) ::bbbb::zz4003());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz4003E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4003E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz4003E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy003*), 0, "_ZN4bbbb6zz4003E");
    check_base_class_offset(lv, (::bbbb::yy003*), 0, "_ZN4bbbb6zz4003E");
    check_field_offset(lv, fd, ABISELECT(8,4), "_ZN4bbbb6zz4003E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4003E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4003E(Test__ZN4bbbb6zz4003E, "_ZN4bbbb6zz4003E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy003E;
static Base_Class bases__ZN4bbbb6zz4003E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy003E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4003E = {  "_ZN4bbbb6zz4003E", // class name
  bases__ZN4bbbb6zz4003E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy103  : ::bbbb::xx03 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy103E) C1{ BC2{ BC3{ Fi}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy103E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy103E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy103E, buf);
    ::bbbb::yy103 &lv = *(new (buf) ::bbbb::yy103());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy103E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy103E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*), 0, "_ZN4bbbb5yy103E");
    check_base_class_offset(lv, (::bbbb::xx03*), 0, "_ZN4bbbb5yy103E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy103E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy103E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy103E(Test__ZN4bbbb5yy103E, "_ZN4bbbb5yy103E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
static Base_Class bases__ZN4bbbb5yy103E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy103E = {  "_ZN4bbbb5yy103E", // class name
  bases__ZN4bbbb5yy103E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0103  : ::bbbb::yy103 {
};
//SIG(1 _ZN4bbbb6zz0103E) C1{ BC2{ BC3{ BC4{ Fi}} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0103E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0103E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0103E, buf);
    ::bbbb::zz0103 &lv = *(new (buf) ::bbbb::zz0103());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0103E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0103E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz0103E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz0103E");
    check_base_class_offset(lv, (::bbbb::yy103*), 0, "_ZN4bbbb6zz0103E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0103E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0103E(Test__ZN4bbbb6zz0103E, "_ZN4bbbb6zz0103E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy103E;
static Base_Class bases__ZN4bbbb6zz0103E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy103E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0103E = {  "_ZN4bbbb6zz0103E", // class name
  bases__ZN4bbbb6zz0103E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1103  : ::bbbb::yy103 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1103E) C1{ BC2{ BC3{ BC4{ Fi}} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1103E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1103E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1103E, buf);
    ::bbbb::zz1103 &lv = *(new (buf) ::bbbb::zz1103());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1103E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1103E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz1103E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz1103E");
    check_base_class_offset(lv, (::bbbb::yy103*), 0, "_ZN4bbbb6zz1103E");
    check_field_offset(lv, fd, 5, "_ZN4bbbb6zz1103E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1103E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1103E(Test__ZN4bbbb6zz1103E, "_ZN4bbbb6zz1103E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy103E;
static Base_Class bases__ZN4bbbb6zz1103E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy103E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1103E = {  "_ZN4bbbb6zz1103E", // class name
  bases__ZN4bbbb6zz1103E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2103  : ::bbbb::yy103 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2103E) C1{ BC2{ BC3{ BC4{ Fi}} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2103E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2103E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2103E, buf);
    ::bbbb::zz2103 &lv = *(new (buf) ::bbbb::zz2103());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2103E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2103E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz2103E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz2103E");
    check_base_class_offset(lv, (::bbbb::yy103*), 0, "_ZN4bbbb6zz2103E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2103E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2103E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2103E(Test__ZN4bbbb6zz2103E, "_ZN4bbbb6zz2103E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy103E;
static Base_Class bases__ZN4bbbb6zz2103E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy103E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2103E = {  "_ZN4bbbb6zz2103E", // class name
  bases__ZN4bbbb6zz2103E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3103  : ::bbbb::yy103 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3103E) C1{ BC2{ BC3{ BC4{ Fi}} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3103E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3103E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3103E, buf);
    ::bbbb::zz3103 &lv = *(new (buf) ::bbbb::zz3103());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3103E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3103E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz3103E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz3103E");
    check_base_class_offset(lv, (::bbbb::yy103*), 0, "_ZN4bbbb6zz3103E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3103E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3103E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3103E(Test__ZN4bbbb6zz3103E, "_ZN4bbbb6zz3103E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy103E;
static Base_Class bases__ZN4bbbb6zz3103E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy103E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3103E = {  "_ZN4bbbb6zz3103E", // class name
  bases__ZN4bbbb6zz3103E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4103  : ::bbbb::yy103 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4103E) C1{ BC2{ BC3{ BC4{ Fi}} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4103E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4103E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4103E, buf);
    ::bbbb::zz4103 &lv = *(new (buf) ::bbbb::zz4103());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4103E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4103E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz4103E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy103*), 0, "_ZN4bbbb6zz4103E");
    check_base_class_offset(lv, (::bbbb::yy103*), 0, "_ZN4bbbb6zz4103E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4103E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4103E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4103E(Test__ZN4bbbb6zz4103E, "_ZN4bbbb6zz4103E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy103E;
static Base_Class bases__ZN4bbbb6zz4103E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy103E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4103E = {  "_ZN4bbbb6zz4103E", // class name
  bases__ZN4bbbb6zz4103E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy203  : ::bbbb::xx03 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy203E) C1{ BC2{ BC3{ Fi}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy203E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy203E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy203E, buf);
    ::bbbb::yy203 &lv = *(new (buf) ::bbbb::yy203());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy203E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy203E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*), 0, "_ZN4bbbb5yy203E");
    check_base_class_offset(lv, (::bbbb::xx03*), 0, "_ZN4bbbb5yy203E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy203E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy203E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy203E(Test__ZN4bbbb5yy203E, "_ZN4bbbb5yy203E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
static Base_Class bases__ZN4bbbb5yy203E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy203E = {  "_ZN4bbbb5yy203E", // class name
  bases__ZN4bbbb5yy203E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0203  : ::bbbb::yy203 {
};
//SIG(1 _ZN4bbbb6zz0203E) C1{ BC2{ BC3{ BC4{ Fi}} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0203E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0203E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0203E, buf);
    ::bbbb::zz0203 &lv = *(new (buf) ::bbbb::zz0203());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0203E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0203E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz0203E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz0203E");
    check_base_class_offset(lv, (::bbbb::yy203*), 0, "_ZN4bbbb6zz0203E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0203E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0203E(Test__ZN4bbbb6zz0203E, "_ZN4bbbb6zz0203E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy203E;
static Base_Class bases__ZN4bbbb6zz0203E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy203E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0203E = {  "_ZN4bbbb6zz0203E", // class name
  bases__ZN4bbbb6zz0203E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1203  : ::bbbb::yy203 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1203E) C1{ BC2{ BC3{ BC4{ Fi}} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1203E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1203E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1203E, buf);
    ::bbbb::zz1203 &lv = *(new (buf) ::bbbb::zz1203());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1203E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1203E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz1203E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz1203E");
    check_base_class_offset(lv, (::bbbb::yy203*), 0, "_ZN4bbbb6zz1203E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz1203E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1203E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1203E(Test__ZN4bbbb6zz1203E, "_ZN4bbbb6zz1203E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy203E;
static Base_Class bases__ZN4bbbb6zz1203E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy203E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1203E = {  "_ZN4bbbb6zz1203E", // class name
  bases__ZN4bbbb6zz1203E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2203  : ::bbbb::yy203 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2203E) C1{ BC2{ BC3{ BC4{ Fi}} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2203E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2203E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2203E, buf);
    ::bbbb::zz2203 &lv = *(new (buf) ::bbbb::zz2203());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2203E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2203E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz2203E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz2203E");
    check_base_class_offset(lv, (::bbbb::yy203*), 0, "_ZN4bbbb6zz2203E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2203E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2203E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2203E(Test__ZN4bbbb6zz2203E, "_ZN4bbbb6zz2203E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy203E;
static Base_Class bases__ZN4bbbb6zz2203E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy203E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2203E = {  "_ZN4bbbb6zz2203E", // class name
  bases__ZN4bbbb6zz2203E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3203  : ::bbbb::yy203 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3203E) C1{ BC2{ BC3{ BC4{ Fi}} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3203E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3203E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3203E, buf);
    ::bbbb::zz3203 &lv = *(new (buf) ::bbbb::zz3203());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3203E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3203E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz3203E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz3203E");
    check_base_class_offset(lv, (::bbbb::yy203*), 0, "_ZN4bbbb6zz3203E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3203E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3203E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3203E(Test__ZN4bbbb6zz3203E, "_ZN4bbbb6zz3203E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy203E;
static Base_Class bases__ZN4bbbb6zz3203E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy203E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3203E = {  "_ZN4bbbb6zz3203E", // class name
  bases__ZN4bbbb6zz3203E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4203  : ::bbbb::yy203 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4203E) C1{ BC2{ BC3{ BC4{ Fi}} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4203E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4203E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4203E, buf);
    ::bbbb::zz4203 &lv = *(new (buf) ::bbbb::zz4203());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4203E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4203E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz4203E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy203*), 0, "_ZN4bbbb6zz4203E");
    check_base_class_offset(lv, (::bbbb::yy203*), 0, "_ZN4bbbb6zz4203E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4203E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4203E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4203E(Test__ZN4bbbb6zz4203E, "_ZN4bbbb6zz4203E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy203E;
static Base_Class bases__ZN4bbbb6zz4203E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy203E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4203E = {  "_ZN4bbbb6zz4203E", // class name
  bases__ZN4bbbb6zz4203E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy303  : ::bbbb::xx03 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy303E) C1{ BC2{ BC3{ Fi}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy303E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy303E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy303E, buf);
    ::bbbb::yy303 &lv = *(new (buf) ::bbbb::yy303());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy303E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy303E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*), 0, "_ZN4bbbb5yy303E");
    check_base_class_offset(lv, (::bbbb::xx03*), 0, "_ZN4bbbb5yy303E");
    check_field_offset(lv, fc, 4, "_ZN4bbbb5yy303E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy303E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy303E(Test__ZN4bbbb5yy303E, "_ZN4bbbb5yy303E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
static Base_Class bases__ZN4bbbb5yy303E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy303E = {  "_ZN4bbbb5yy303E", // class name
  bases__ZN4bbbb5yy303E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0303  : ::bbbb::yy303 {
};
//SIG(1 _ZN4bbbb6zz0303E) C1{ BC2{ BC3{ BC4{ Fi}} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0303E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0303E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0303E, buf);
    ::bbbb::zz0303 &lv = *(new (buf) ::bbbb::zz0303());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0303E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0303E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz0303E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz0303E");
    check_base_class_offset(lv, (::bbbb::yy303*), 0, "_ZN4bbbb6zz0303E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0303E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0303E(Test__ZN4bbbb6zz0303E, "_ZN4bbbb6zz0303E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy303E;
static Base_Class bases__ZN4bbbb6zz0303E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy303E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0303E = {  "_ZN4bbbb6zz0303E", // class name
  bases__ZN4bbbb6zz0303E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1303  : ::bbbb::yy303 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1303E) C1{ BC2{ BC3{ BC4{ Fi}} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1303E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1303E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1303E, buf);
    ::bbbb::zz1303 &lv = *(new (buf) ::bbbb::zz1303());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1303E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1303E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz1303E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz1303E");
    check_base_class_offset(lv, (::bbbb::yy303*), 0, "_ZN4bbbb6zz1303E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1303E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1303E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1303E(Test__ZN4bbbb6zz1303E, "_ZN4bbbb6zz1303E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy303E;
static Base_Class bases__ZN4bbbb6zz1303E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy303E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1303E = {  "_ZN4bbbb6zz1303E", // class name
  bases__ZN4bbbb6zz1303E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2303  : ::bbbb::yy303 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2303E) C1{ BC2{ BC3{ BC4{ Fi}} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2303E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2303E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2303E, buf);
    ::bbbb::zz2303 &lv = *(new (buf) ::bbbb::zz2303());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2303E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2303E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz2303E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz2303E");
    check_base_class_offset(lv, (::bbbb::yy303*), 0, "_ZN4bbbb6zz2303E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2303E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2303E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2303E(Test__ZN4bbbb6zz2303E, "_ZN4bbbb6zz2303E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy303E;
static Base_Class bases__ZN4bbbb6zz2303E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy303E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2303E = {  "_ZN4bbbb6zz2303E", // class name
  bases__ZN4bbbb6zz2303E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3303  : ::bbbb::yy303 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3303E) C1{ BC2{ BC3{ BC4{ Fi}} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3303E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3303E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3303E, buf);
    ::bbbb::zz3303 &lv = *(new (buf) ::bbbb::zz3303());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3303E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3303E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz3303E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz3303E");
    check_base_class_offset(lv, (::bbbb::yy303*), 0, "_ZN4bbbb6zz3303E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3303E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3303E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3303E(Test__ZN4bbbb6zz3303E, "_ZN4bbbb6zz3303E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy303E;
static Base_Class bases__ZN4bbbb6zz3303E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy303E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3303E = {  "_ZN4bbbb6zz3303E", // class name
  bases__ZN4bbbb6zz3303E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4303  : ::bbbb::yy303 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4303E) C1{ BC2{ BC3{ BC4{ Fi}} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4303E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4303E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4303E, buf);
    ::bbbb::zz4303 &lv = *(new (buf) ::bbbb::zz4303());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4303E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4303E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz4303E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy303*), 0, "_ZN4bbbb6zz4303E");
    check_base_class_offset(lv, (::bbbb::yy303*), 0, "_ZN4bbbb6zz4303E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4303E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4303E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4303E(Test__ZN4bbbb6zz4303E, "_ZN4bbbb6zz4303E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy303E;
static Base_Class bases__ZN4bbbb6zz4303E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy303E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4303E = {  "_ZN4bbbb6zz4303E", // class name
  bases__ZN4bbbb6zz4303E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy403  : ::bbbb::xx03 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy403E) C1{ BC2{ BC3{ Fi}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy403E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy403E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy403E, buf);
    ::bbbb::yy403 &lv = *(new (buf) ::bbbb::yy403());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy403E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy403E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*), 0, "_ZN4bbbb5yy403E");
    check_base_class_offset(lv, (::bbbb::xx03*), 0, "_ZN4bbbb5yy403E");
    check_field_offset(lv, fc, ABISELECT(8,4), "_ZN4bbbb5yy403E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy403E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy403E(Test__ZN4bbbb5yy403E, "_ZN4bbbb5yy403E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
static Base_Class bases__ZN4bbbb5yy403E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy403E = {  "_ZN4bbbb5yy403E", // class name
  bases__ZN4bbbb5yy403E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0403  : ::bbbb::yy403 {
};
//SIG(1 _ZN4bbbb6zz0403E) C1{ BC2{ BC3{ BC4{ Fi}} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0403E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0403E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0403E, buf);
    ::bbbb::zz0403 &lv = *(new (buf) ::bbbb::zz0403());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0403E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0403E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz0403E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz0403E");
    check_base_class_offset(lv, (::bbbb::yy403*), 0, "_ZN4bbbb6zz0403E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0403E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0403E(Test__ZN4bbbb6zz0403E, "_ZN4bbbb6zz0403E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy403E;
static Base_Class bases__ZN4bbbb6zz0403E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy403E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0403E = {  "_ZN4bbbb6zz0403E", // class name
  bases__ZN4bbbb6zz0403E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1403  : ::bbbb::yy403 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1403E) C1{ BC2{ BC3{ BC4{ Fi}} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1403E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1403E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1403E, buf);
    ::bbbb::zz1403 &lv = *(new (buf) ::bbbb::zz1403());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1403E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1403E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz1403E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz1403E");
    check_base_class_offset(lv, (::bbbb::yy403*), 0, "_ZN4bbbb6zz1403E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1403E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1403E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1403E(Test__ZN4bbbb6zz1403E, "_ZN4bbbb6zz1403E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy403E;
static Base_Class bases__ZN4bbbb6zz1403E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy403E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1403E = {  "_ZN4bbbb6zz1403E", // class name
  bases__ZN4bbbb6zz1403E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2403  : ::bbbb::yy403 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2403E) C1{ BC2{ BC3{ BC4{ Fi}} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2403E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2403E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2403E, buf);
    ::bbbb::zz2403 &lv = *(new (buf) ::bbbb::zz2403());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2403E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2403E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz2403E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz2403E");
    check_base_class_offset(lv, (::bbbb::yy403*), 0, "_ZN4bbbb6zz2403E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2403E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2403E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2403E(Test__ZN4bbbb6zz2403E, "_ZN4bbbb6zz2403E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy403E;
static Base_Class bases__ZN4bbbb6zz2403E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy403E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2403E = {  "_ZN4bbbb6zz2403E", // class name
  bases__ZN4bbbb6zz2403E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3403  : ::bbbb::yy403 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3403E) C1{ BC2{ BC3{ BC4{ Fi}} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3403E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3403E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3403E, buf);
    ::bbbb::zz3403 &lv = *(new (buf) ::bbbb::zz3403());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3403E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3403E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz3403E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz3403E");
    check_base_class_offset(lv, (::bbbb::yy403*), 0, "_ZN4bbbb6zz3403E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3403E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3403E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3403E(Test__ZN4bbbb6zz3403E, "_ZN4bbbb6zz3403E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy403E;
static Base_Class bases__ZN4bbbb6zz3403E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy403E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3403E = {  "_ZN4bbbb6zz3403E", // class name
  bases__ZN4bbbb6zz3403E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4403  : ::bbbb::yy403 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4403E) C1{ BC2{ BC3{ BC4{ Fi}} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4403E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4403E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4403E, buf);
    ::bbbb::zz4403 &lv = *(new (buf) ::bbbb::zz4403());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4403E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4403E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz4403E");
    check_base_class_offset(lv, (::bbbb::xx03*)(::bbbb::yy403*), 0, "_ZN4bbbb6zz4403E");
    check_base_class_offset(lv, (::bbbb::yy403*), 0, "_ZN4bbbb6zz4403E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4403E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4403E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4403E(Test__ZN4bbbb6zz4403E, "_ZN4bbbb6zz4403E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx03E;
extern Class_Descriptor cd__ZN4bbbb5yy403E;
static Base_Class bases__ZN4bbbb6zz4403E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx03E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy403E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4403E = {  "_ZN4bbbb6zz4403E", // class name
  bases__ZN4bbbb6zz4403E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx13  : ::bbbb::ww3 {
  char fb;
};
//SIG(-1 _ZN4bbbb4xx13E) C1{ BC2{ Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx13E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx13E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb4xx13E, buf);
    ::bbbb::xx13 &lv = *(new (buf) ::bbbb::xx13());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb4xx13E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb4xx13E)");
    check_base_class_offset(lv, (::bbbb::ww3*), 0, "_ZN4bbbb4xx13E");
    check_field_offset(lv, fb, 4, "_ZN4bbbb4xx13E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx13E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx13E(Test__ZN4bbbb4xx13E, "_ZN4bbbb4xx13E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
static Base_Class bases__ZN4bbbb4xx13E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx13E = {  "_ZN4bbbb4xx13E", // class name
  bases__ZN4bbbb4xx13E, 1,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy013  : ::bbbb::xx13 {
};
//SIG(-1 _ZN4bbbb5yy013E) C1{ BC2{ BC3{ Fi} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy013E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy013E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy013E, buf);
    ::bbbb::yy013 &lv = *(new (buf) ::bbbb::yy013());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy013E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy013E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*), 0, "_ZN4bbbb5yy013E");
    check_base_class_offset(lv, (::bbbb::xx13*), 0, "_ZN4bbbb5yy013E");
    test_class_info(&lv, &cd__ZN4bbbb5yy013E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy013E(Test__ZN4bbbb5yy013E, "_ZN4bbbb5yy013E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
static Base_Class bases__ZN4bbbb5yy013E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy013E = {  "_ZN4bbbb5yy013E", // class name
  bases__ZN4bbbb5yy013E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0013  : ::bbbb::yy013 {
};
//SIG(1 _ZN4bbbb6zz0013E) C1{ BC2{ BC3{ BC4{ Fi} Fc}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0013E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0013E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0013E, buf);
    ::bbbb::zz0013 &lv = *(new (buf) ::bbbb::zz0013());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0013E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0013E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz0013E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz0013E");
    check_base_class_offset(lv, (::bbbb::yy013*), 0, "_ZN4bbbb6zz0013E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0013E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0013E(Test__ZN4bbbb6zz0013E, "_ZN4bbbb6zz0013E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy013E;
static Base_Class bases__ZN4bbbb6zz0013E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy013E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0013E = {  "_ZN4bbbb6zz0013E", // class name
  bases__ZN4bbbb6zz0013E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1013  : ::bbbb::yy013 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1013E) C1{ BC2{ BC3{ BC4{ Fi} Fc}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1013E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1013E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1013E, buf);
    ::bbbb::zz1013 &lv = *(new (buf) ::bbbb::zz1013());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1013E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1013E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz1013E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz1013E");
    check_base_class_offset(lv, (::bbbb::yy013*), 0, "_ZN4bbbb6zz1013E");
    check_field_offset(lv, fd, 5, "_ZN4bbbb6zz1013E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1013E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1013E(Test__ZN4bbbb6zz1013E, "_ZN4bbbb6zz1013E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy013E;
static Base_Class bases__ZN4bbbb6zz1013E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy013E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1013E = {  "_ZN4bbbb6zz1013E", // class name
  bases__ZN4bbbb6zz1013E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2013  : ::bbbb::yy013 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2013E) C1{ BC2{ BC3{ BC4{ Fi} Fc}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2013E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2013E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2013E, buf);
    ::bbbb::zz2013 &lv = *(new (buf) ::bbbb::zz2013());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2013E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2013E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz2013E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz2013E");
    check_base_class_offset(lv, (::bbbb::yy013*), 0, "_ZN4bbbb6zz2013E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2013E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2013E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2013E(Test__ZN4bbbb6zz2013E, "_ZN4bbbb6zz2013E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy013E;
static Base_Class bases__ZN4bbbb6zz2013E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy013E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2013E = {  "_ZN4bbbb6zz2013E", // class name
  bases__ZN4bbbb6zz2013E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3013  : ::bbbb::yy013 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3013E) C1{ BC2{ BC3{ BC4{ Fi} Fc}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3013E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3013E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3013E, buf);
    ::bbbb::zz3013 &lv = *(new (buf) ::bbbb::zz3013());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3013E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3013E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz3013E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz3013E");
    check_base_class_offset(lv, (::bbbb::yy013*), 0, "_ZN4bbbb6zz3013E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3013E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3013E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3013E(Test__ZN4bbbb6zz3013E, "_ZN4bbbb6zz3013E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy013E;
static Base_Class bases__ZN4bbbb6zz3013E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy013E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3013E = {  "_ZN4bbbb6zz3013E", // class name
  bases__ZN4bbbb6zz3013E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4013  : ::bbbb::yy013 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4013E) C1{ BC2{ BC3{ BC4{ Fi} Fc}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4013E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4013E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4013E, buf);
    ::bbbb::zz4013 &lv = *(new (buf) ::bbbb::zz4013());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4013E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4013E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz4013E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy013*), 0, "_ZN4bbbb6zz4013E");
    check_base_class_offset(lv, (::bbbb::yy013*), 0, "_ZN4bbbb6zz4013E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4013E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4013E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4013E(Test__ZN4bbbb6zz4013E, "_ZN4bbbb6zz4013E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy013E;
static Base_Class bases__ZN4bbbb6zz4013E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy013E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4013E = {  "_ZN4bbbb6zz4013E", // class name
  bases__ZN4bbbb6zz4013E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy113  : ::bbbb::xx13 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy113E) C1{ BC2{ BC3{ Fi} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy113E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy113E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy113E, buf);
    ::bbbb::yy113 &lv = *(new (buf) ::bbbb::yy113());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy113E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy113E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*), 0, "_ZN4bbbb5yy113E");
    check_base_class_offset(lv, (::bbbb::xx13*), 0, "_ZN4bbbb5yy113E");
    check_field_offset(lv, fc, 5, "_ZN4bbbb5yy113E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy113E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy113E(Test__ZN4bbbb5yy113E, "_ZN4bbbb5yy113E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
static Base_Class bases__ZN4bbbb5yy113E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy113E = {  "_ZN4bbbb5yy113E", // class name
  bases__ZN4bbbb5yy113E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0113  : ::bbbb::yy113 {
};
//SIG(1 _ZN4bbbb6zz0113E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0113E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0113E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0113E, buf);
    ::bbbb::zz0113 &lv = *(new (buf) ::bbbb::zz0113());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0113E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0113E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz0113E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz0113E");
    check_base_class_offset(lv, (::bbbb::yy113*), 0, "_ZN4bbbb6zz0113E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0113E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0113E(Test__ZN4bbbb6zz0113E, "_ZN4bbbb6zz0113E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy113E;
static Base_Class bases__ZN4bbbb6zz0113E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy113E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0113E = {  "_ZN4bbbb6zz0113E", // class name
  bases__ZN4bbbb6zz0113E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1113  : ::bbbb::yy113 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1113E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1113E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1113E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1113E, buf);
    ::bbbb::zz1113 &lv = *(new (buf) ::bbbb::zz1113());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1113E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1113E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz1113E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz1113E");
    check_base_class_offset(lv, (::bbbb::yy113*), 0, "_ZN4bbbb6zz1113E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz1113E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1113E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1113E(Test__ZN4bbbb6zz1113E, "_ZN4bbbb6zz1113E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy113E;
static Base_Class bases__ZN4bbbb6zz1113E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy113E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1113E = {  "_ZN4bbbb6zz1113E", // class name
  bases__ZN4bbbb6zz1113E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2113  : ::bbbb::yy113 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2113E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2113E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2113E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2113E, buf);
    ::bbbb::zz2113 &lv = *(new (buf) ::bbbb::zz2113());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2113E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2113E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz2113E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz2113E");
    check_base_class_offset(lv, (::bbbb::yy113*), 0, "_ZN4bbbb6zz2113E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2113E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2113E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2113E(Test__ZN4bbbb6zz2113E, "_ZN4bbbb6zz2113E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy113E;
static Base_Class bases__ZN4bbbb6zz2113E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy113E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2113E = {  "_ZN4bbbb6zz2113E", // class name
  bases__ZN4bbbb6zz2113E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3113  : ::bbbb::yy113 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3113E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3113E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3113E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3113E, buf);
    ::bbbb::zz3113 &lv = *(new (buf) ::bbbb::zz3113());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3113E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3113E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz3113E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz3113E");
    check_base_class_offset(lv, (::bbbb::yy113*), 0, "_ZN4bbbb6zz3113E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3113E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3113E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3113E(Test__ZN4bbbb6zz3113E, "_ZN4bbbb6zz3113E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy113E;
static Base_Class bases__ZN4bbbb6zz3113E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy113E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3113E = {  "_ZN4bbbb6zz3113E", // class name
  bases__ZN4bbbb6zz3113E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4113  : ::bbbb::yy113 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4113E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4113E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4113E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4113E, buf);
    ::bbbb::zz4113 &lv = *(new (buf) ::bbbb::zz4113());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4113E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4113E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz4113E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy113*), 0, "_ZN4bbbb6zz4113E");
    check_base_class_offset(lv, (::bbbb::yy113*), 0, "_ZN4bbbb6zz4113E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4113E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4113E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4113E(Test__ZN4bbbb6zz4113E, "_ZN4bbbb6zz4113E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy113E;
static Base_Class bases__ZN4bbbb6zz4113E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy113E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4113E = {  "_ZN4bbbb6zz4113E", // class name
  bases__ZN4bbbb6zz4113E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy213  : ::bbbb::xx13 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy213E) C1{ BC2{ BC3{ Fi} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy213E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy213E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy213E, buf);
    ::bbbb::yy213 &lv = *(new (buf) ::bbbb::yy213());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy213E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy213E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*), 0, "_ZN4bbbb5yy213E");
    check_base_class_offset(lv, (::bbbb::xx13*), 0, "_ZN4bbbb5yy213E");
    check_field_offset(lv, fc, 6, "_ZN4bbbb5yy213E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy213E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy213E(Test__ZN4bbbb5yy213E, "_ZN4bbbb5yy213E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
static Base_Class bases__ZN4bbbb5yy213E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy213E = {  "_ZN4bbbb5yy213E", // class name
  bases__ZN4bbbb5yy213E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0213  : ::bbbb::yy213 {
};
//SIG(1 _ZN4bbbb6zz0213E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0213E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0213E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0213E, buf);
    ::bbbb::zz0213 &lv = *(new (buf) ::bbbb::zz0213());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0213E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0213E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz0213E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz0213E");
    check_base_class_offset(lv, (::bbbb::yy213*), 0, "_ZN4bbbb6zz0213E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0213E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0213E(Test__ZN4bbbb6zz0213E, "_ZN4bbbb6zz0213E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy213E;
static Base_Class bases__ZN4bbbb6zz0213E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy213E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0213E = {  "_ZN4bbbb6zz0213E", // class name
  bases__ZN4bbbb6zz0213E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1213  : ::bbbb::yy213 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1213E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1213E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1213E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1213E, buf);
    ::bbbb::zz1213 &lv = *(new (buf) ::bbbb::zz1213());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1213E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1213E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz1213E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz1213E");
    check_base_class_offset(lv, (::bbbb::yy213*), 0, "_ZN4bbbb6zz1213E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1213E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1213E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1213E(Test__ZN4bbbb6zz1213E, "_ZN4bbbb6zz1213E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy213E;
static Base_Class bases__ZN4bbbb6zz1213E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy213E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1213E = {  "_ZN4bbbb6zz1213E", // class name
  bases__ZN4bbbb6zz1213E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2213  : ::bbbb::yy213 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2213E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2213E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2213E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2213E, buf);
    ::bbbb::zz2213 &lv = *(new (buf) ::bbbb::zz2213());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2213E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2213E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz2213E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz2213E");
    check_base_class_offset(lv, (::bbbb::yy213*), 0, "_ZN4bbbb6zz2213E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2213E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2213E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2213E(Test__ZN4bbbb6zz2213E, "_ZN4bbbb6zz2213E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy213E;
static Base_Class bases__ZN4bbbb6zz2213E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy213E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2213E = {  "_ZN4bbbb6zz2213E", // class name
  bases__ZN4bbbb6zz2213E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3213  : ::bbbb::yy213 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3213E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3213E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3213E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3213E, buf);
    ::bbbb::zz3213 &lv = *(new (buf) ::bbbb::zz3213());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3213E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3213E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz3213E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz3213E");
    check_base_class_offset(lv, (::bbbb::yy213*), 0, "_ZN4bbbb6zz3213E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3213E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3213E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3213E(Test__ZN4bbbb6zz3213E, "_ZN4bbbb6zz3213E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy213E;
static Base_Class bases__ZN4bbbb6zz3213E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy213E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3213E = {  "_ZN4bbbb6zz3213E", // class name
  bases__ZN4bbbb6zz3213E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4213  : ::bbbb::yy213 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4213E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4213E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4213E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4213E, buf);
    ::bbbb::zz4213 &lv = *(new (buf) ::bbbb::zz4213());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4213E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4213E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz4213E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy213*), 0, "_ZN4bbbb6zz4213E");
    check_base_class_offset(lv, (::bbbb::yy213*), 0, "_ZN4bbbb6zz4213E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4213E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4213E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4213E(Test__ZN4bbbb6zz4213E, "_ZN4bbbb6zz4213E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy213E;
static Base_Class bases__ZN4bbbb6zz4213E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy213E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4213E = {  "_ZN4bbbb6zz4213E", // class name
  bases__ZN4bbbb6zz4213E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy313  : ::bbbb::xx13 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy313E) C1{ BC2{ BC3{ Fi} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy313E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy313E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy313E, buf);
    ::bbbb::yy313 &lv = *(new (buf) ::bbbb::yy313());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy313E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy313E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*), 0, "_ZN4bbbb5yy313E");
    check_base_class_offset(lv, (::bbbb::xx13*), 0, "_ZN4bbbb5yy313E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy313E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy313E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy313E(Test__ZN4bbbb5yy313E, "_ZN4bbbb5yy313E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
static Base_Class bases__ZN4bbbb5yy313E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy313E = {  "_ZN4bbbb5yy313E", // class name
  bases__ZN4bbbb5yy313E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0313  : ::bbbb::yy313 {
};
//SIG(1 _ZN4bbbb6zz0313E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0313E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0313E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0313E, buf);
    ::bbbb::zz0313 &lv = *(new (buf) ::bbbb::zz0313());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0313E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0313E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz0313E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz0313E");
    check_base_class_offset(lv, (::bbbb::yy313*), 0, "_ZN4bbbb6zz0313E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0313E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0313E(Test__ZN4bbbb6zz0313E, "_ZN4bbbb6zz0313E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy313E;
static Base_Class bases__ZN4bbbb6zz0313E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy313E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0313E = {  "_ZN4bbbb6zz0313E", // class name
  bases__ZN4bbbb6zz0313E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1313  : ::bbbb::yy313 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1313E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1313E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1313E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz1313E, buf);
    ::bbbb::zz1313 &lv = *(new (buf) ::bbbb::zz1313());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1313E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1313E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz1313E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz1313E");
    check_base_class_offset(lv, (::bbbb::yy313*), 0, "_ZN4bbbb6zz1313E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1313E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1313E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1313E(Test__ZN4bbbb6zz1313E, "_ZN4bbbb6zz1313E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy313E;
static Base_Class bases__ZN4bbbb6zz1313E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy313E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1313E = {  "_ZN4bbbb6zz1313E", // class name
  bases__ZN4bbbb6zz1313E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2313  : ::bbbb::yy313 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2313E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2313E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2313E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz2313E, buf);
    ::bbbb::zz2313 &lv = *(new (buf) ::bbbb::zz2313());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2313E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2313E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz2313E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz2313E");
    check_base_class_offset(lv, (::bbbb::yy313*), 0, "_ZN4bbbb6zz2313E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2313E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2313E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2313E(Test__ZN4bbbb6zz2313E, "_ZN4bbbb6zz2313E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy313E;
static Base_Class bases__ZN4bbbb6zz2313E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy313E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2313E = {  "_ZN4bbbb6zz2313E", // class name
  bases__ZN4bbbb6zz2313E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3313  : ::bbbb::yy313 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3313E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3313E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3313E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3313E, buf);
    ::bbbb::zz3313 &lv = *(new (buf) ::bbbb::zz3313());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3313E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3313E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz3313E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz3313E");
    check_base_class_offset(lv, (::bbbb::yy313*), 0, "_ZN4bbbb6zz3313E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3313E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3313E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3313E(Test__ZN4bbbb6zz3313E, "_ZN4bbbb6zz3313E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy313E;
static Base_Class bases__ZN4bbbb6zz3313E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy313E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3313E = {  "_ZN4bbbb6zz3313E", // class name
  bases__ZN4bbbb6zz3313E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4313  : ::bbbb::yy313 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4313E) C1{ BC2{ BC3{ BC4{ Fi} Fc} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4313E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4313E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4313E, buf);
    ::bbbb::zz4313 &lv = *(new (buf) ::bbbb::zz4313());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4313E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4313E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz4313E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy313*), 0, "_ZN4bbbb6zz4313E");
    check_base_class_offset(lv, (::bbbb::yy313*), 0, "_ZN4bbbb6zz4313E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4313E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4313E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4313E(Test__ZN4bbbb6zz4313E, "_ZN4bbbb6zz4313E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy313E;
static Base_Class bases__ZN4bbbb6zz4313E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy313E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4313E = {  "_ZN4bbbb6zz4313E", // class name
  bases__ZN4bbbb6zz4313E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy413  : ::bbbb::xx13 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy413E) C1{ BC2{ BC3{ Fi} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy413E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy413E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy413E, buf);
    ::bbbb::yy413 &lv = *(new (buf) ::bbbb::yy413());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy413E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy413E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*), 0, "_ZN4bbbb5yy413E");
    check_base_class_offset(lv, (::bbbb::xx13*), 0, "_ZN4bbbb5yy413E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy413E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy413E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy413E(Test__ZN4bbbb5yy413E, "_ZN4bbbb5yy413E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
static Base_Class bases__ZN4bbbb5yy413E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy413E = {  "_ZN4bbbb5yy413E", // class name
  bases__ZN4bbbb5yy413E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0413  : ::bbbb::yy413 {
};
//SIG(1 _ZN4bbbb6zz0413E) C1{ BC2{ BC3{ BC4{ Fi} Fc} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0413E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0413E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0413E, buf);
    ::bbbb::zz0413 &lv = *(new (buf) ::bbbb::zz0413());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0413E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0413E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz0413E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz0413E");
    check_base_class_offset(lv, (::bbbb::yy413*), 0, "_ZN4bbbb6zz0413E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0413E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0413E(Test__ZN4bbbb6zz0413E, "_ZN4bbbb6zz0413E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy413E;
static Base_Class bases__ZN4bbbb6zz0413E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy413E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0413E = {  "_ZN4bbbb6zz0413E", // class name
  bases__ZN4bbbb6zz0413E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1413  : ::bbbb::yy413 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1413E) C1{ BC2{ BC3{ BC4{ Fi} Fc} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1413E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1413E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1413E, buf);
    ::bbbb::zz1413 &lv = *(new (buf) ::bbbb::zz1413());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1413E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1413E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz1413E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz1413E");
    check_base_class_offset(lv, (::bbbb::yy413*), 0, "_ZN4bbbb6zz1413E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1413E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1413E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1413E(Test__ZN4bbbb6zz1413E, "_ZN4bbbb6zz1413E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy413E;
static Base_Class bases__ZN4bbbb6zz1413E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy413E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1413E = {  "_ZN4bbbb6zz1413E", // class name
  bases__ZN4bbbb6zz1413E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2413  : ::bbbb::yy413 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2413E) C1{ BC2{ BC3{ BC4{ Fi} Fc} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2413E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2413E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2413E, buf);
    ::bbbb::zz2413 &lv = *(new (buf) ::bbbb::zz2413());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2413E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2413E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz2413E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz2413E");
    check_base_class_offset(lv, (::bbbb::yy413*), 0, "_ZN4bbbb6zz2413E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2413E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2413E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2413E(Test__ZN4bbbb6zz2413E, "_ZN4bbbb6zz2413E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy413E;
static Base_Class bases__ZN4bbbb6zz2413E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy413E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2413E = {  "_ZN4bbbb6zz2413E", // class name
  bases__ZN4bbbb6zz2413E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3413  : ::bbbb::yy413 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3413E) C1{ BC2{ BC3{ BC4{ Fi} Fc} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3413E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3413E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3413E, buf);
    ::bbbb::zz3413 &lv = *(new (buf) ::bbbb::zz3413());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3413E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3413E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz3413E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz3413E");
    check_base_class_offset(lv, (::bbbb::yy413*), 0, "_ZN4bbbb6zz3413E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3413E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3413E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3413E(Test__ZN4bbbb6zz3413E, "_ZN4bbbb6zz3413E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy413E;
static Base_Class bases__ZN4bbbb6zz3413E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy413E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3413E = {  "_ZN4bbbb6zz3413E", // class name
  bases__ZN4bbbb6zz3413E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4413  : ::bbbb::yy413 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4413E) C1{ BC2{ BC3{ BC4{ Fi} Fc} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4413E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4413E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4413E, buf);
    ::bbbb::zz4413 &lv = *(new (buf) ::bbbb::zz4413());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4413E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4413E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz4413E");
    check_base_class_offset(lv, (::bbbb::xx13*)(::bbbb::yy413*), 0, "_ZN4bbbb6zz4413E");
    check_base_class_offset(lv, (::bbbb::yy413*), 0, "_ZN4bbbb6zz4413E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4413E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4413E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4413E(Test__ZN4bbbb6zz4413E, "_ZN4bbbb6zz4413E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx13E;
extern Class_Descriptor cd__ZN4bbbb5yy413E;
static Base_Class bases__ZN4bbbb6zz4413E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx13E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy413E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4413E = {  "_ZN4bbbb6zz4413E", // class name
  bases__ZN4bbbb6zz4413E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx23  : ::bbbb::ww3 {
  short fb;
};
//SIG(-1 _ZN4bbbb4xx23E) C1{ BC2{ Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx23E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx23E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb4xx23E, buf);
    ::bbbb::xx23 &lv = *(new (buf) ::bbbb::xx23());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb4xx23E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb4xx23E)");
    check_base_class_offset(lv, (::bbbb::ww3*), 0, "_ZN4bbbb4xx23E");
    check_field_offset(lv, fb, 4, "_ZN4bbbb4xx23E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx23E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx23E(Test__ZN4bbbb4xx23E, "_ZN4bbbb4xx23E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
static Base_Class bases__ZN4bbbb4xx23E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx23E = {  "_ZN4bbbb4xx23E", // class name
  bases__ZN4bbbb4xx23E, 1,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy023  : ::bbbb::xx23 {
};
//SIG(-1 _ZN4bbbb5yy023E) C1{ BC2{ BC3{ Fi} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy023E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy023E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy023E, buf);
    ::bbbb::yy023 &lv = *(new (buf) ::bbbb::yy023());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy023E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy023E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*), 0, "_ZN4bbbb5yy023E");
    check_base_class_offset(lv, (::bbbb::xx23*), 0, "_ZN4bbbb5yy023E");
    test_class_info(&lv, &cd__ZN4bbbb5yy023E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy023E(Test__ZN4bbbb5yy023E, "_ZN4bbbb5yy023E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
static Base_Class bases__ZN4bbbb5yy023E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy023E = {  "_ZN4bbbb5yy023E", // class name
  bases__ZN4bbbb5yy023E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0023  : ::bbbb::yy023 {
};
//SIG(1 _ZN4bbbb6zz0023E) C1{ BC2{ BC3{ BC4{ Fi} Fs}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0023E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0023E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0023E, buf);
    ::bbbb::zz0023 &lv = *(new (buf) ::bbbb::zz0023());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0023E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0023E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz0023E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz0023E");
    check_base_class_offset(lv, (::bbbb::yy023*), 0, "_ZN4bbbb6zz0023E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0023E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0023E(Test__ZN4bbbb6zz0023E, "_ZN4bbbb6zz0023E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy023E;
static Base_Class bases__ZN4bbbb6zz0023E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy023E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0023E = {  "_ZN4bbbb6zz0023E", // class name
  bases__ZN4bbbb6zz0023E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1023  : ::bbbb::yy023 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1023E) C1{ BC2{ BC3{ BC4{ Fi} Fs}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1023E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1023E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1023E, buf);
    ::bbbb::zz1023 &lv = *(new (buf) ::bbbb::zz1023());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1023E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1023E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz1023E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz1023E");
    check_base_class_offset(lv, (::bbbb::yy023*), 0, "_ZN4bbbb6zz1023E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz1023E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1023E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1023E(Test__ZN4bbbb6zz1023E, "_ZN4bbbb6zz1023E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy023E;
static Base_Class bases__ZN4bbbb6zz1023E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy023E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1023E = {  "_ZN4bbbb6zz1023E", // class name
  bases__ZN4bbbb6zz1023E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2023  : ::bbbb::yy023 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2023E) C1{ BC2{ BC3{ BC4{ Fi} Fs}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2023E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2023E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz2023E, buf);
    ::bbbb::zz2023 &lv = *(new (buf) ::bbbb::zz2023());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz2023E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2023E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz2023E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz2023E");
    check_base_class_offset(lv, (::bbbb::yy023*), 0, "_ZN4bbbb6zz2023E");
    check_field_offset(lv, fd, 6, "_ZN4bbbb6zz2023E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2023E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2023E(Test__ZN4bbbb6zz2023E, "_ZN4bbbb6zz2023E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy023E;
static Base_Class bases__ZN4bbbb6zz2023E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy023E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2023E = {  "_ZN4bbbb6zz2023E", // class name
  bases__ZN4bbbb6zz2023E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3023  : ::bbbb::yy023 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3023E) C1{ BC2{ BC3{ BC4{ Fi} Fs}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3023E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3023E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3023E, buf);
    ::bbbb::zz3023 &lv = *(new (buf) ::bbbb::zz3023());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3023E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3023E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz3023E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz3023E");
    check_base_class_offset(lv, (::bbbb::yy023*), 0, "_ZN4bbbb6zz3023E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3023E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3023E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3023E(Test__ZN4bbbb6zz3023E, "_ZN4bbbb6zz3023E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy023E;
static Base_Class bases__ZN4bbbb6zz3023E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy023E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3023E = {  "_ZN4bbbb6zz3023E", // class name
  bases__ZN4bbbb6zz3023E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4023  : ::bbbb::yy023 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4023E) C1{ BC2{ BC3{ BC4{ Fi} Fs}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4023E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4023E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4023E, buf);
    ::bbbb::zz4023 &lv = *(new (buf) ::bbbb::zz4023());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4023E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4023E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz4023E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy023*), 0, "_ZN4bbbb6zz4023E");
    check_base_class_offset(lv, (::bbbb::yy023*), 0, "_ZN4bbbb6zz4023E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4023E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4023E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4023E(Test__ZN4bbbb6zz4023E, "_ZN4bbbb6zz4023E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy023E;
static Base_Class bases__ZN4bbbb6zz4023E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy023E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4023E = {  "_ZN4bbbb6zz4023E", // class name
  bases__ZN4bbbb6zz4023E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy123  : ::bbbb::xx23 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy123E) C1{ BC2{ BC3{ Fi} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy123E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy123E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy123E, buf);
    ::bbbb::yy123 &lv = *(new (buf) ::bbbb::yy123());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy123E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy123E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*), 0, "_ZN4bbbb5yy123E");
    check_base_class_offset(lv, (::bbbb::xx23*), 0, "_ZN4bbbb5yy123E");
    check_field_offset(lv, fc, 6, "_ZN4bbbb5yy123E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy123E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy123E(Test__ZN4bbbb5yy123E, "_ZN4bbbb5yy123E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
static Base_Class bases__ZN4bbbb5yy123E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy123E = {  "_ZN4bbbb5yy123E", // class name
  bases__ZN4bbbb5yy123E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0123  : ::bbbb::yy123 {
};
//SIG(1 _ZN4bbbb6zz0123E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0123E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0123E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0123E, buf);
    ::bbbb::zz0123 &lv = *(new (buf) ::bbbb::zz0123());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0123E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0123E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz0123E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz0123E");
    check_base_class_offset(lv, (::bbbb::yy123*), 0, "_ZN4bbbb6zz0123E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0123E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0123E(Test__ZN4bbbb6zz0123E, "_ZN4bbbb6zz0123E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy123E;
static Base_Class bases__ZN4bbbb6zz0123E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy123E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0123E = {  "_ZN4bbbb6zz0123E", // class name
  bases__ZN4bbbb6zz0123E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1123  : ::bbbb::yy123 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1123E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1123E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1123E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz1123E, buf);
    ::bbbb::zz1123 &lv = *(new (buf) ::bbbb::zz1123());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz1123E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1123E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz1123E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz1123E");
    check_base_class_offset(lv, (::bbbb::yy123*), 0, "_ZN4bbbb6zz1123E");
    check_field_offset(lv, fd, 7, "_ZN4bbbb6zz1123E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1123E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1123E(Test__ZN4bbbb6zz1123E, "_ZN4bbbb6zz1123E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy123E;
static Base_Class bases__ZN4bbbb6zz1123E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy123E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1123E = {  "_ZN4bbbb6zz1123E", // class name
  bases__ZN4bbbb6zz1123E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2123  : ::bbbb::yy123 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2123E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2123E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2123E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2123E, buf);
    ::bbbb::zz2123 &lv = *(new (buf) ::bbbb::zz2123());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2123E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2123E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz2123E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz2123E");
    check_base_class_offset(lv, (::bbbb::yy123*), 0, "_ZN4bbbb6zz2123E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2123E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2123E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2123E(Test__ZN4bbbb6zz2123E, "_ZN4bbbb6zz2123E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy123E;
static Base_Class bases__ZN4bbbb6zz2123E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy123E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2123E = {  "_ZN4bbbb6zz2123E", // class name
  bases__ZN4bbbb6zz2123E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3123  : ::bbbb::yy123 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3123E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3123E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3123E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3123E, buf);
    ::bbbb::zz3123 &lv = *(new (buf) ::bbbb::zz3123());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3123E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3123E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz3123E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz3123E");
    check_base_class_offset(lv, (::bbbb::yy123*), 0, "_ZN4bbbb6zz3123E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3123E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3123E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3123E(Test__ZN4bbbb6zz3123E, "_ZN4bbbb6zz3123E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy123E;
static Base_Class bases__ZN4bbbb6zz3123E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy123E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3123E = {  "_ZN4bbbb6zz3123E", // class name
  bases__ZN4bbbb6zz3123E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4123  : ::bbbb::yy123 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4123E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4123E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4123E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4123E, buf);
    ::bbbb::zz4123 &lv = *(new (buf) ::bbbb::zz4123());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4123E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4123E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz4123E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy123*), 0, "_ZN4bbbb6zz4123E");
    check_base_class_offset(lv, (::bbbb::yy123*), 0, "_ZN4bbbb6zz4123E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4123E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4123E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4123E(Test__ZN4bbbb6zz4123E, "_ZN4bbbb6zz4123E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy123E;
static Base_Class bases__ZN4bbbb6zz4123E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy123E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4123E = {  "_ZN4bbbb6zz4123E", // class name
  bases__ZN4bbbb6zz4123E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy223  : ::bbbb::xx23 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy223E) C1{ BC2{ BC3{ Fi} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy223E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy223E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy223E, buf);
    ::bbbb::yy223 &lv = *(new (buf) ::bbbb::yy223());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy223E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy223E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*), 0, "_ZN4bbbb5yy223E");
    check_base_class_offset(lv, (::bbbb::xx23*), 0, "_ZN4bbbb5yy223E");
    check_field_offset(lv, fc, 6, "_ZN4bbbb5yy223E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy223E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy223E(Test__ZN4bbbb5yy223E, "_ZN4bbbb5yy223E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
static Base_Class bases__ZN4bbbb5yy223E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy223E = {  "_ZN4bbbb5yy223E", // class name
  bases__ZN4bbbb5yy223E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0223  : ::bbbb::yy223 {
};
//SIG(1 _ZN4bbbb6zz0223E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0223E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0223E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0223E, buf);
    ::bbbb::zz0223 &lv = *(new (buf) ::bbbb::zz0223());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0223E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0223E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz0223E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz0223E");
    check_base_class_offset(lv, (::bbbb::yy223*), 0, "_ZN4bbbb6zz0223E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0223E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0223E(Test__ZN4bbbb6zz0223E, "_ZN4bbbb6zz0223E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy223E;
static Base_Class bases__ZN4bbbb6zz0223E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy223E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0223E = {  "_ZN4bbbb6zz0223E", // class name
  bases__ZN4bbbb6zz0223E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1223  : ::bbbb::yy223 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1223E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1223E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1223E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1223E, buf);
    ::bbbb::zz1223 &lv = *(new (buf) ::bbbb::zz1223());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1223E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1223E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz1223E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz1223E");
    check_base_class_offset(lv, (::bbbb::yy223*), 0, "_ZN4bbbb6zz1223E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1223E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1223E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1223E(Test__ZN4bbbb6zz1223E, "_ZN4bbbb6zz1223E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy223E;
static Base_Class bases__ZN4bbbb6zz1223E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy223E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1223E = {  "_ZN4bbbb6zz1223E", // class name
  bases__ZN4bbbb6zz1223E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2223  : ::bbbb::yy223 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2223E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2223E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2223E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2223E, buf);
    ::bbbb::zz2223 &lv = *(new (buf) ::bbbb::zz2223());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2223E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2223E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz2223E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz2223E");
    check_base_class_offset(lv, (::bbbb::yy223*), 0, "_ZN4bbbb6zz2223E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2223E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2223E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2223E(Test__ZN4bbbb6zz2223E, "_ZN4bbbb6zz2223E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy223E;
static Base_Class bases__ZN4bbbb6zz2223E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy223E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2223E = {  "_ZN4bbbb6zz2223E", // class name
  bases__ZN4bbbb6zz2223E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3223  : ::bbbb::yy223 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3223E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3223E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3223E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3223E, buf);
    ::bbbb::zz3223 &lv = *(new (buf) ::bbbb::zz3223());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3223E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3223E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz3223E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz3223E");
    check_base_class_offset(lv, (::bbbb::yy223*), 0, "_ZN4bbbb6zz3223E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3223E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3223E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3223E(Test__ZN4bbbb6zz3223E, "_ZN4bbbb6zz3223E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy223E;
static Base_Class bases__ZN4bbbb6zz3223E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy223E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3223E = {  "_ZN4bbbb6zz3223E", // class name
  bases__ZN4bbbb6zz3223E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4223  : ::bbbb::yy223 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4223E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4223E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4223E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4223E, buf);
    ::bbbb::zz4223 &lv = *(new (buf) ::bbbb::zz4223());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4223E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4223E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz4223E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy223*), 0, "_ZN4bbbb6zz4223E");
    check_base_class_offset(lv, (::bbbb::yy223*), 0, "_ZN4bbbb6zz4223E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4223E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4223E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4223E(Test__ZN4bbbb6zz4223E, "_ZN4bbbb6zz4223E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy223E;
static Base_Class bases__ZN4bbbb6zz4223E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy223E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4223E = {  "_ZN4bbbb6zz4223E", // class name
  bases__ZN4bbbb6zz4223E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy323  : ::bbbb::xx23 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy323E) C1{ BC2{ BC3{ Fi} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy323E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy323E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy323E, buf);
    ::bbbb::yy323 &lv = *(new (buf) ::bbbb::yy323());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy323E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy323E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*), 0, "_ZN4bbbb5yy323E");
    check_base_class_offset(lv, (::bbbb::xx23*), 0, "_ZN4bbbb5yy323E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy323E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy323E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy323E(Test__ZN4bbbb5yy323E, "_ZN4bbbb5yy323E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
static Base_Class bases__ZN4bbbb5yy323E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy323E = {  "_ZN4bbbb5yy323E", // class name
  bases__ZN4bbbb5yy323E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0323  : ::bbbb::yy323 {
};
//SIG(1 _ZN4bbbb6zz0323E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0323E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0323E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0323E, buf);
    ::bbbb::zz0323 &lv = *(new (buf) ::bbbb::zz0323());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0323E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0323E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz0323E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz0323E");
    check_base_class_offset(lv, (::bbbb::yy323*), 0, "_ZN4bbbb6zz0323E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0323E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0323E(Test__ZN4bbbb6zz0323E, "_ZN4bbbb6zz0323E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy323E;
static Base_Class bases__ZN4bbbb6zz0323E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy323E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0323E = {  "_ZN4bbbb6zz0323E", // class name
  bases__ZN4bbbb6zz0323E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1323  : ::bbbb::yy323 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1323E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1323E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1323E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz1323E, buf);
    ::bbbb::zz1323 &lv = *(new (buf) ::bbbb::zz1323());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1323E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1323E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz1323E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz1323E");
    check_base_class_offset(lv, (::bbbb::yy323*), 0, "_ZN4bbbb6zz1323E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1323E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1323E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1323E(Test__ZN4bbbb6zz1323E, "_ZN4bbbb6zz1323E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy323E;
static Base_Class bases__ZN4bbbb6zz1323E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy323E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1323E = {  "_ZN4bbbb6zz1323E", // class name
  bases__ZN4bbbb6zz1323E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2323  : ::bbbb::yy323 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2323E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2323E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2323E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz2323E, buf);
    ::bbbb::zz2323 &lv = *(new (buf) ::bbbb::zz2323());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2323E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2323E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz2323E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz2323E");
    check_base_class_offset(lv, (::bbbb::yy323*), 0, "_ZN4bbbb6zz2323E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2323E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2323E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2323E(Test__ZN4bbbb6zz2323E, "_ZN4bbbb6zz2323E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy323E;
static Base_Class bases__ZN4bbbb6zz2323E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy323E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2323E = {  "_ZN4bbbb6zz2323E", // class name
  bases__ZN4bbbb6zz2323E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3323  : ::bbbb::yy323 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3323E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3323E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3323E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3323E, buf);
    ::bbbb::zz3323 &lv = *(new (buf) ::bbbb::zz3323());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3323E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3323E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz3323E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz3323E");
    check_base_class_offset(lv, (::bbbb::yy323*), 0, "_ZN4bbbb6zz3323E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3323E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3323E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3323E(Test__ZN4bbbb6zz3323E, "_ZN4bbbb6zz3323E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy323E;
static Base_Class bases__ZN4bbbb6zz3323E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy323E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3323E = {  "_ZN4bbbb6zz3323E", // class name
  bases__ZN4bbbb6zz3323E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4323  : ::bbbb::yy323 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4323E) C1{ BC2{ BC3{ BC4{ Fi} Fs} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4323E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4323E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4323E, buf);
    ::bbbb::zz4323 &lv = *(new (buf) ::bbbb::zz4323());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4323E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4323E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz4323E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy323*), 0, "_ZN4bbbb6zz4323E");
    check_base_class_offset(lv, (::bbbb::yy323*), 0, "_ZN4bbbb6zz4323E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4323E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4323E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4323E(Test__ZN4bbbb6zz4323E, "_ZN4bbbb6zz4323E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy323E;
static Base_Class bases__ZN4bbbb6zz4323E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy323E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4323E = {  "_ZN4bbbb6zz4323E", // class name
  bases__ZN4bbbb6zz4323E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy423  : ::bbbb::xx23 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy423E) C1{ BC2{ BC3{ Fi} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy423E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy423E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy423E, buf);
    ::bbbb::yy423 &lv = *(new (buf) ::bbbb::yy423());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy423E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy423E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*), 0, "_ZN4bbbb5yy423E");
    check_base_class_offset(lv, (::bbbb::xx23*), 0, "_ZN4bbbb5yy423E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy423E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy423E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy423E(Test__ZN4bbbb5yy423E, "_ZN4bbbb5yy423E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
static Base_Class bases__ZN4bbbb5yy423E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy423E = {  "_ZN4bbbb5yy423E", // class name
  bases__ZN4bbbb5yy423E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0423  : ::bbbb::yy423 {
};
//SIG(1 _ZN4bbbb6zz0423E) C1{ BC2{ BC3{ BC4{ Fi} Fs} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0423E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0423E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0423E, buf);
    ::bbbb::zz0423 &lv = *(new (buf) ::bbbb::zz0423());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0423E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0423E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz0423E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz0423E");
    check_base_class_offset(lv, (::bbbb::yy423*), 0, "_ZN4bbbb6zz0423E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0423E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0423E(Test__ZN4bbbb6zz0423E, "_ZN4bbbb6zz0423E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy423E;
static Base_Class bases__ZN4bbbb6zz0423E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy423E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0423E = {  "_ZN4bbbb6zz0423E", // class name
  bases__ZN4bbbb6zz0423E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1423  : ::bbbb::yy423 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1423E) C1{ BC2{ BC3{ BC4{ Fi} Fs} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1423E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1423E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1423E, buf);
    ::bbbb::zz1423 &lv = *(new (buf) ::bbbb::zz1423());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1423E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1423E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz1423E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz1423E");
    check_base_class_offset(lv, (::bbbb::yy423*), 0, "_ZN4bbbb6zz1423E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1423E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1423E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1423E(Test__ZN4bbbb6zz1423E, "_ZN4bbbb6zz1423E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy423E;
static Base_Class bases__ZN4bbbb6zz1423E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy423E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1423E = {  "_ZN4bbbb6zz1423E", // class name
  bases__ZN4bbbb6zz1423E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2423  : ::bbbb::yy423 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2423E) C1{ BC2{ BC3{ BC4{ Fi} Fs} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2423E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2423E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2423E, buf);
    ::bbbb::zz2423 &lv = *(new (buf) ::bbbb::zz2423());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2423E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2423E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz2423E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz2423E");
    check_base_class_offset(lv, (::bbbb::yy423*), 0, "_ZN4bbbb6zz2423E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2423E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2423E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2423E(Test__ZN4bbbb6zz2423E, "_ZN4bbbb6zz2423E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy423E;
static Base_Class bases__ZN4bbbb6zz2423E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy423E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2423E = {  "_ZN4bbbb6zz2423E", // class name
  bases__ZN4bbbb6zz2423E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3423  : ::bbbb::yy423 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3423E) C1{ BC2{ BC3{ BC4{ Fi} Fs} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3423E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3423E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3423E, buf);
    ::bbbb::zz3423 &lv = *(new (buf) ::bbbb::zz3423());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3423E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3423E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz3423E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz3423E");
    check_base_class_offset(lv, (::bbbb::yy423*), 0, "_ZN4bbbb6zz3423E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3423E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3423E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3423E(Test__ZN4bbbb6zz3423E, "_ZN4bbbb6zz3423E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy423E;
static Base_Class bases__ZN4bbbb6zz3423E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy423E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3423E = {  "_ZN4bbbb6zz3423E", // class name
  bases__ZN4bbbb6zz3423E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4423  : ::bbbb::yy423 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4423E) C1{ BC2{ BC3{ BC4{ Fi} Fs} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4423E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4423E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4423E, buf);
    ::bbbb::zz4423 &lv = *(new (buf) ::bbbb::zz4423());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4423E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4423E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz4423E");
    check_base_class_offset(lv, (::bbbb::xx23*)(::bbbb::yy423*), 0, "_ZN4bbbb6zz4423E");
    check_base_class_offset(lv, (::bbbb::yy423*), 0, "_ZN4bbbb6zz4423E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4423E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4423E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4423E(Test__ZN4bbbb6zz4423E, "_ZN4bbbb6zz4423E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx23E;
extern Class_Descriptor cd__ZN4bbbb5yy423E;
static Base_Class bases__ZN4bbbb6zz4423E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx23E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy423E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4423E = {  "_ZN4bbbb6zz4423E", // class name
  bases__ZN4bbbb6zz4423E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx33  : ::bbbb::ww3 {
  int fb;
};
//SIG(-1 _ZN4bbbb4xx33E) C1{ BC2{ Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx33E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx33E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb4xx33E, buf);
    ::bbbb::xx33 &lv = *(new (buf) ::bbbb::xx33());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb4xx33E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb4xx33E)");
    check_base_class_offset(lv, (::bbbb::ww3*), 0, "_ZN4bbbb4xx33E");
    check_field_offset(lv, fb, 4, "_ZN4bbbb4xx33E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx33E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx33E(Test__ZN4bbbb4xx33E, "_ZN4bbbb4xx33E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
static Base_Class bases__ZN4bbbb4xx33E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx33E = {  "_ZN4bbbb4xx33E", // class name
  bases__ZN4bbbb4xx33E, 1,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy033  : ::bbbb::xx33 {
};
//SIG(-1 _ZN4bbbb5yy033E) C1{ BC2{ BC3{ Fi} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy033E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy033E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb5yy033E, buf);
    ::bbbb::yy033 &lv = *(new (buf) ::bbbb::yy033());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy033E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy033E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*), 0, "_ZN4bbbb5yy033E");
    check_base_class_offset(lv, (::bbbb::xx33*), 0, "_ZN4bbbb5yy033E");
    test_class_info(&lv, &cd__ZN4bbbb5yy033E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy033E(Test__ZN4bbbb5yy033E, "_ZN4bbbb5yy033E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
static Base_Class bases__ZN4bbbb5yy033E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy033E = {  "_ZN4bbbb5yy033E", // class name
  bases__ZN4bbbb5yy033E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0033  : ::bbbb::yy033 {
};
//SIG(1 _ZN4bbbb6zz0033E) C1{ BC2{ BC3{ BC4{ Fi} Fi}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0033E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0033E;
  void *lvp;
  {
    int buf[3];
    init_test(&cd__ZN4bbbb6zz0033E, buf);
    ::bbbb::zz0033 &lv = *(new (buf) ::bbbb::zz0033());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0033E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0033E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz0033E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz0033E");
    check_base_class_offset(lv, (::bbbb::yy033*), 0, "_ZN4bbbb6zz0033E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0033E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0033E(Test__ZN4bbbb6zz0033E, "_ZN4bbbb6zz0033E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy033E;
static Base_Class bases__ZN4bbbb6zz0033E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy033E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0033E = {  "_ZN4bbbb6zz0033E", // class name
  bases__ZN4bbbb6zz0033E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1033  : ::bbbb::yy033 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1033E) C1{ BC2{ BC3{ BC4{ Fi} Fi}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1033E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1033E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1033E, buf);
    ::bbbb::zz1033 &lv = *(new (buf) ::bbbb::zz1033());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1033E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1033E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz1033E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz1033E");
    check_base_class_offset(lv, (::bbbb::yy033*), 0, "_ZN4bbbb6zz1033E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1033E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1033E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1033E(Test__ZN4bbbb6zz1033E, "_ZN4bbbb6zz1033E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy033E;
static Base_Class bases__ZN4bbbb6zz1033E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy033E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1033E = {  "_ZN4bbbb6zz1033E", // class name
  bases__ZN4bbbb6zz1033E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2033  : ::bbbb::yy033 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2033E) C1{ BC2{ BC3{ BC4{ Fi} Fi}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2033E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2033E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2033E, buf);
    ::bbbb::zz2033 &lv = *(new (buf) ::bbbb::zz2033());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2033E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2033E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz2033E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz2033E");
    check_base_class_offset(lv, (::bbbb::yy033*), 0, "_ZN4bbbb6zz2033E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2033E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2033E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2033E(Test__ZN4bbbb6zz2033E, "_ZN4bbbb6zz2033E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy033E;
static Base_Class bases__ZN4bbbb6zz2033E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy033E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2033E = {  "_ZN4bbbb6zz2033E", // class name
  bases__ZN4bbbb6zz2033E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3033  : ::bbbb::yy033 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3033E) C1{ BC2{ BC3{ BC4{ Fi} Fi}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3033E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3033E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz3033E, buf);
    ::bbbb::zz3033 &lv = *(new (buf) ::bbbb::zz3033());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz3033E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3033E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz3033E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz3033E");
    check_base_class_offset(lv, (::bbbb::yy033*), 0, "_ZN4bbbb6zz3033E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3033E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3033E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3033E(Test__ZN4bbbb6zz3033E, "_ZN4bbbb6zz3033E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy033E;
static Base_Class bases__ZN4bbbb6zz3033E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy033E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3033E = {  "_ZN4bbbb6zz3033E", // class name
  bases__ZN4bbbb6zz3033E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4033  : ::bbbb::yy033 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4033E) C1{ BC2{ BC3{ BC4{ Fi} Fi}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4033E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4033E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4033E, buf);
    ::bbbb::zz4033 &lv = *(new (buf) ::bbbb::zz4033());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4033E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4033E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz4033E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy033*), 0, "_ZN4bbbb6zz4033E");
    check_base_class_offset(lv, (::bbbb::yy033*), 0, "_ZN4bbbb6zz4033E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4033E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4033E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4033E(Test__ZN4bbbb6zz4033E, "_ZN4bbbb6zz4033E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy033E;
static Base_Class bases__ZN4bbbb6zz4033E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy033E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4033E = {  "_ZN4bbbb6zz4033E", // class name
  bases__ZN4bbbb6zz4033E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy133  : ::bbbb::xx33 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy133E) C1{ BC2{ BC3{ Fi} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy133E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy133E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy133E, buf);
    ::bbbb::yy133 &lv = *(new (buf) ::bbbb::yy133());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy133E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy133E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*), 0, "_ZN4bbbb5yy133E");
    check_base_class_offset(lv, (::bbbb::xx33*), 0, "_ZN4bbbb5yy133E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy133E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy133E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy133E(Test__ZN4bbbb5yy133E, "_ZN4bbbb5yy133E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
static Base_Class bases__ZN4bbbb5yy133E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy133E = {  "_ZN4bbbb5yy133E", // class name
  bases__ZN4bbbb5yy133E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0133  : ::bbbb::yy133 {
};
//SIG(1 _ZN4bbbb6zz0133E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0133E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0133E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0133E, buf);
    ::bbbb::zz0133 &lv = *(new (buf) ::bbbb::zz0133());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0133E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0133E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz0133E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz0133E");
    check_base_class_offset(lv, (::bbbb::yy133*), 0, "_ZN4bbbb6zz0133E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0133E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0133E(Test__ZN4bbbb6zz0133E, "_ZN4bbbb6zz0133E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy133E;
static Base_Class bases__ZN4bbbb6zz0133E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy133E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0133E = {  "_ZN4bbbb6zz0133E", // class name
  bases__ZN4bbbb6zz0133E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1133  : ::bbbb::yy133 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1133E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1133E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1133E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1133E, buf);
    ::bbbb::zz1133 &lv = *(new (buf) ::bbbb::zz1133());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1133E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1133E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz1133E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz1133E");
    check_base_class_offset(lv, (::bbbb::yy133*), 0, "_ZN4bbbb6zz1133E");
    check_field_offset(lv, fd, 9, "_ZN4bbbb6zz1133E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1133E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1133E(Test__ZN4bbbb6zz1133E, "_ZN4bbbb6zz1133E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy133E;
static Base_Class bases__ZN4bbbb6zz1133E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy133E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1133E = {  "_ZN4bbbb6zz1133E", // class name
  bases__ZN4bbbb6zz1133E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2133  : ::bbbb::yy133 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2133E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2133E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2133E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2133E, buf);
    ::bbbb::zz2133 &lv = *(new (buf) ::bbbb::zz2133());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2133E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2133E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz2133E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz2133E");
    check_base_class_offset(lv, (::bbbb::yy133*), 0, "_ZN4bbbb6zz2133E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2133E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2133E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2133E(Test__ZN4bbbb6zz2133E, "_ZN4bbbb6zz2133E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy133E;
static Base_Class bases__ZN4bbbb6zz2133E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy133E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2133E = {  "_ZN4bbbb6zz2133E", // class name
  bases__ZN4bbbb6zz2133E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3133  : ::bbbb::yy133 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3133E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3133E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3133E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3133E, buf);
    ::bbbb::zz3133 &lv = *(new (buf) ::bbbb::zz3133());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3133E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3133E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz3133E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz3133E");
    check_base_class_offset(lv, (::bbbb::yy133*), 0, "_ZN4bbbb6zz3133E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3133E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3133E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3133E(Test__ZN4bbbb6zz3133E, "_ZN4bbbb6zz3133E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy133E;
static Base_Class bases__ZN4bbbb6zz3133E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy133E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3133E = {  "_ZN4bbbb6zz3133E", // class name
  bases__ZN4bbbb6zz3133E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4133  : ::bbbb::yy133 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4133E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4133E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4133E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4133E, buf);
    ::bbbb::zz4133 &lv = *(new (buf) ::bbbb::zz4133());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4133E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4133E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz4133E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy133*), 0, "_ZN4bbbb6zz4133E");
    check_base_class_offset(lv, (::bbbb::yy133*), 0, "_ZN4bbbb6zz4133E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4133E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4133E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4133E(Test__ZN4bbbb6zz4133E, "_ZN4bbbb6zz4133E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy133E;
static Base_Class bases__ZN4bbbb6zz4133E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy133E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4133E = {  "_ZN4bbbb6zz4133E", // class name
  bases__ZN4bbbb6zz4133E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy233  : ::bbbb::xx33 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy233E) C1{ BC2{ BC3{ Fi} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy233E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy233E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy233E, buf);
    ::bbbb::yy233 &lv = *(new (buf) ::bbbb::yy233());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy233E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy233E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*), 0, "_ZN4bbbb5yy233E");
    check_base_class_offset(lv, (::bbbb::xx33*), 0, "_ZN4bbbb5yy233E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy233E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy233E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy233E(Test__ZN4bbbb5yy233E, "_ZN4bbbb5yy233E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
static Base_Class bases__ZN4bbbb5yy233E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy233E = {  "_ZN4bbbb5yy233E", // class name
  bases__ZN4bbbb5yy233E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0233  : ::bbbb::yy233 {
};
//SIG(1 _ZN4bbbb6zz0233E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0233E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0233E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0233E, buf);
    ::bbbb::zz0233 &lv = *(new (buf) ::bbbb::zz0233());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0233E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0233E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz0233E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz0233E");
    check_base_class_offset(lv, (::bbbb::yy233*), 0, "_ZN4bbbb6zz0233E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0233E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0233E(Test__ZN4bbbb6zz0233E, "_ZN4bbbb6zz0233E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy233E;
static Base_Class bases__ZN4bbbb6zz0233E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy233E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0233E = {  "_ZN4bbbb6zz0233E", // class name
  bases__ZN4bbbb6zz0233E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1233  : ::bbbb::yy233 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1233E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1233E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1233E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz1233E, buf);
    ::bbbb::zz1233 &lv = *(new (buf) ::bbbb::zz1233());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz1233E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1233E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz1233E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz1233E");
    check_base_class_offset(lv, (::bbbb::yy233*), 0, "_ZN4bbbb6zz1233E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz1233E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1233E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1233E(Test__ZN4bbbb6zz1233E, "_ZN4bbbb6zz1233E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy233E;
static Base_Class bases__ZN4bbbb6zz1233E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy233E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1233E = {  "_ZN4bbbb6zz1233E", // class name
  bases__ZN4bbbb6zz1233E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2233  : ::bbbb::yy233 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2233E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2233E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2233E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz2233E, buf);
    ::bbbb::zz2233 &lv = *(new (buf) ::bbbb::zz2233());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz2233E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2233E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz2233E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz2233E");
    check_base_class_offset(lv, (::bbbb::yy233*), 0, "_ZN4bbbb6zz2233E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2233E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2233E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2233E(Test__ZN4bbbb6zz2233E, "_ZN4bbbb6zz2233E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy233E;
static Base_Class bases__ZN4bbbb6zz2233E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy233E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2233E = {  "_ZN4bbbb6zz2233E", // class name
  bases__ZN4bbbb6zz2233E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3233  : ::bbbb::yy233 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3233E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3233E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3233E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3233E, buf);
    ::bbbb::zz3233 &lv = *(new (buf) ::bbbb::zz3233());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3233E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3233E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz3233E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz3233E");
    check_base_class_offset(lv, (::bbbb::yy233*), 0, "_ZN4bbbb6zz3233E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3233E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3233E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3233E(Test__ZN4bbbb6zz3233E, "_ZN4bbbb6zz3233E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy233E;
static Base_Class bases__ZN4bbbb6zz3233E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy233E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3233E = {  "_ZN4bbbb6zz3233E", // class name
  bases__ZN4bbbb6zz3233E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4233  : ::bbbb::yy233 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4233E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4233E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4233E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4233E, buf);
    ::bbbb::zz4233 &lv = *(new (buf) ::bbbb::zz4233());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4233E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4233E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz4233E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy233*), 0, "_ZN4bbbb6zz4233E");
    check_base_class_offset(lv, (::bbbb::yy233*), 0, "_ZN4bbbb6zz4233E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4233E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4233E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4233E(Test__ZN4bbbb6zz4233E, "_ZN4bbbb6zz4233E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy233E;
static Base_Class bases__ZN4bbbb6zz4233E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy233E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4233E = {  "_ZN4bbbb6zz4233E", // class name
  bases__ZN4bbbb6zz4233E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy333  : ::bbbb::xx33 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy333E) C1{ BC2{ BC3{ Fi} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy333E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy333E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb5yy333E, buf);
    ::bbbb::yy333 &lv = *(new (buf) ::bbbb::yy333());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb5yy333E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb5yy333E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*), 0, "_ZN4bbbb5yy333E");
    check_base_class_offset(lv, (::bbbb::xx33*), 0, "_ZN4bbbb5yy333E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy333E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy333E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy333E(Test__ZN4bbbb5yy333E, "_ZN4bbbb5yy333E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
static Base_Class bases__ZN4bbbb5yy333E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy333E = {  "_ZN4bbbb5yy333E", // class name
  bases__ZN4bbbb5yy333E, 2,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0333  : ::bbbb::yy333 {
};
//SIG(1 _ZN4bbbb6zz0333E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0333E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0333E;
  void *lvp;
  {
    int buf[4];
    init_test(&cd__ZN4bbbb6zz0333E, buf);
    ::bbbb::zz0333 &lv = *(new (buf) ::bbbb::zz0333());
    lvp = (void*)&lv;
    check2(sizeof(lv), 12, "sizeof(_ZN4bbbb6zz0333E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz0333E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz0333E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz0333E");
    check_base_class_offset(lv, (::bbbb::yy333*), 0, "_ZN4bbbb6zz0333E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0333E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0333E(Test__ZN4bbbb6zz0333E, "_ZN4bbbb6zz0333E", 12);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy333E;
static Base_Class bases__ZN4bbbb6zz0333E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy333E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0333E = {  "_ZN4bbbb6zz0333E", // class name
  bases__ZN4bbbb6zz0333E, 3,
  0, // no vftv
  0, //no vtt
  12, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1333  : ::bbbb::yy333 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1333E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1333E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1333E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz1333E, buf);
    ::bbbb::zz1333 &lv = *(new (buf) ::bbbb::zz1333());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1333E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz1333E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz1333E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz1333E");
    check_base_class_offset(lv, (::bbbb::yy333*), 0, "_ZN4bbbb6zz1333E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1333E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1333E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1333E(Test__ZN4bbbb6zz1333E, "_ZN4bbbb6zz1333E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy333E;
static Base_Class bases__ZN4bbbb6zz1333E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy333E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1333E = {  "_ZN4bbbb6zz1333E", // class name
  bases__ZN4bbbb6zz1333E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2333  : ::bbbb::yy333 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2333E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2333E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2333E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz2333E, buf);
    ::bbbb::zz2333 &lv = *(new (buf) ::bbbb::zz2333());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2333E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz2333E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz2333E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz2333E");
    check_base_class_offset(lv, (::bbbb::yy333*), 0, "_ZN4bbbb6zz2333E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2333E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2333E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2333E(Test__ZN4bbbb6zz2333E, "_ZN4bbbb6zz2333E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy333E;
static Base_Class bases__ZN4bbbb6zz2333E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy333E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2333E = {  "_ZN4bbbb6zz2333E", // class name
  bases__ZN4bbbb6zz2333E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3333  : ::bbbb::yy333 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3333E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3333E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3333E;
  void *lvp;
  {
    int buf[5];
    init_test(&cd__ZN4bbbb6zz3333E, buf);
    ::bbbb::zz3333 &lv = *(new (buf) ::bbbb::zz3333());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3333E)");
    check2(__alignof__(lv), 4, "__alignof__(_ZN4bbbb6zz3333E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz3333E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz3333E");
    check_base_class_offset(lv, (::bbbb::yy333*), 0, "_ZN4bbbb6zz3333E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3333E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3333E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3333E(Test__ZN4bbbb6zz3333E, "_ZN4bbbb6zz3333E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy333E;
static Base_Class bases__ZN4bbbb6zz3333E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy333E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3333E = {  "_ZN4bbbb6zz3333E", // class name
  bases__ZN4bbbb6zz3333E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4333  : ::bbbb::yy333 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4333E) C1{ BC2{ BC3{ BC4{ Fi} Fi} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4333E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4333E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4333E, buf);
    ::bbbb::zz4333 &lv = *(new (buf) ::bbbb::zz4333());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4333E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4333E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz4333E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy333*), 0, "_ZN4bbbb6zz4333E");
    check_base_class_offset(lv, (::bbbb::yy333*), 0, "_ZN4bbbb6zz4333E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4333E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4333E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4333E(Test__ZN4bbbb6zz4333E, "_ZN4bbbb6zz4333E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy333E;
static Base_Class bases__ZN4bbbb6zz4333E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy333E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4333E = {  "_ZN4bbbb6zz4333E", // class name
  bases__ZN4bbbb6zz4333E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy433  : ::bbbb::xx33 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy433E) C1{ BC2{ BC3{ Fi} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy433E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy433E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy433E, buf);
    ::bbbb::yy433 &lv = *(new (buf) ::bbbb::yy433());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy433E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy433E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*), 0, "_ZN4bbbb5yy433E");
    check_base_class_offset(lv, (::bbbb::xx33*), 0, "_ZN4bbbb5yy433E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy433E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy433E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy433E(Test__ZN4bbbb5yy433E, "_ZN4bbbb5yy433E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
static Base_Class bases__ZN4bbbb5yy433E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy433E = {  "_ZN4bbbb5yy433E", // class name
  bases__ZN4bbbb5yy433E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0433  : ::bbbb::yy433 {
};
//SIG(1 _ZN4bbbb6zz0433E) C1{ BC2{ BC3{ BC4{ Fi} Fi} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0433E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0433E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0433E, buf);
    ::bbbb::zz0433 &lv = *(new (buf) ::bbbb::zz0433());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0433E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0433E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz0433E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz0433E");
    check_base_class_offset(lv, (::bbbb::yy433*), 0, "_ZN4bbbb6zz0433E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0433E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0433E(Test__ZN4bbbb6zz0433E, "_ZN4bbbb6zz0433E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy433E;
static Base_Class bases__ZN4bbbb6zz0433E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy433E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0433E = {  "_ZN4bbbb6zz0433E", // class name
  bases__ZN4bbbb6zz0433E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1433  : ::bbbb::yy433 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1433E) C1{ BC2{ BC3{ BC4{ Fi} Fi} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1433E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1433E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1433E, buf);
    ::bbbb::zz1433 &lv = *(new (buf) ::bbbb::zz1433());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1433E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1433E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz1433E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz1433E");
    check_base_class_offset(lv, (::bbbb::yy433*), 0, "_ZN4bbbb6zz1433E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1433E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1433E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1433E(Test__ZN4bbbb6zz1433E, "_ZN4bbbb6zz1433E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy433E;
static Base_Class bases__ZN4bbbb6zz1433E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy433E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1433E = {  "_ZN4bbbb6zz1433E", // class name
  bases__ZN4bbbb6zz1433E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2433  : ::bbbb::yy433 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2433E) C1{ BC2{ BC3{ BC4{ Fi} Fi} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2433E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2433E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2433E, buf);
    ::bbbb::zz2433 &lv = *(new (buf) ::bbbb::zz2433());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2433E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2433E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz2433E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz2433E");
    check_base_class_offset(lv, (::bbbb::yy433*), 0, "_ZN4bbbb6zz2433E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2433E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2433E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2433E(Test__ZN4bbbb6zz2433E, "_ZN4bbbb6zz2433E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy433E;
static Base_Class bases__ZN4bbbb6zz2433E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy433E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2433E = {  "_ZN4bbbb6zz2433E", // class name
  bases__ZN4bbbb6zz2433E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3433  : ::bbbb::yy433 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3433E) C1{ BC2{ BC3{ BC4{ Fi} Fi} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3433E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3433E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3433E, buf);
    ::bbbb::zz3433 &lv = *(new (buf) ::bbbb::zz3433());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3433E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3433E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz3433E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz3433E");
    check_base_class_offset(lv, (::bbbb::yy433*), 0, "_ZN4bbbb6zz3433E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3433E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3433E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3433E(Test__ZN4bbbb6zz3433E, "_ZN4bbbb6zz3433E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy433E;
static Base_Class bases__ZN4bbbb6zz3433E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy433E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3433E = {  "_ZN4bbbb6zz3433E", // class name
  bases__ZN4bbbb6zz3433E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4433  : ::bbbb::yy433 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4433E) C1{ BC2{ BC3{ BC4{ Fi} Fi} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4433E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4433E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4433E, buf);
    ::bbbb::zz4433 &lv = *(new (buf) ::bbbb::zz4433());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4433E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4433E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz4433E");
    check_base_class_offset(lv, (::bbbb::xx33*)(::bbbb::yy433*), 0, "_ZN4bbbb6zz4433E");
    check_base_class_offset(lv, (::bbbb::yy433*), 0, "_ZN4bbbb6zz4433E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4433E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4433E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4433E(Test__ZN4bbbb6zz4433E, "_ZN4bbbb6zz4433E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx33E;
extern Class_Descriptor cd__ZN4bbbb5yy433E;
static Base_Class bases__ZN4bbbb6zz4433E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx33E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy433E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4433E = {  "_ZN4bbbb6zz4433E", // class name
  bases__ZN4bbbb6zz4433E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx43  : ::bbbb::ww3 {
  double fb;
};
//SIG(-1 _ZN4bbbb4xx43E) C1{ BC2{ Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx43E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx43E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb4xx43E, buf);
    ::bbbb::xx43 &lv = *(new (buf) ::bbbb::xx43());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb4xx43E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb4xx43E)");
    check_base_class_offset(lv, (::bbbb::ww3*), 0, "_ZN4bbbb4xx43E");
    check_field_offset(lv, fb, ABISELECT(8,4), "_ZN4bbbb4xx43E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx43E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx43E(Test__ZN4bbbb4xx43E, "_ZN4bbbb4xx43E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
static Base_Class bases__ZN4bbbb4xx43E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx43E = {  "_ZN4bbbb4xx43E", // class name
  bases__ZN4bbbb4xx43E, 1,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy043  : ::bbbb::xx43 {
};
//SIG(-1 _ZN4bbbb5yy043E) C1{ BC2{ BC3{ Fi} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy043E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy043E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy043E, buf);
    ::bbbb::yy043 &lv = *(new (buf) ::bbbb::yy043());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy043E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy043E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*), 0, "_ZN4bbbb5yy043E");
    check_base_class_offset(lv, (::bbbb::xx43*), 0, "_ZN4bbbb5yy043E");
    test_class_info(&lv, &cd__ZN4bbbb5yy043E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy043E(Test__ZN4bbbb5yy043E, "_ZN4bbbb5yy043E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
static Base_Class bases__ZN4bbbb5yy043E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy043E = {  "_ZN4bbbb5yy043E", // class name
  bases__ZN4bbbb5yy043E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0043  : ::bbbb::yy043 {
};
//SIG(1 _ZN4bbbb6zz0043E) C1{ BC2{ BC3{ BC4{ Fi} FL}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0043E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0043E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0043E, buf);
    ::bbbb::zz0043 &lv = *(new (buf) ::bbbb::zz0043());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0043E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0043E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz0043E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz0043E");
    check_base_class_offset(lv, (::bbbb::yy043*), 0, "_ZN4bbbb6zz0043E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0043E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0043E(Test__ZN4bbbb6zz0043E, "_ZN4bbbb6zz0043E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy043E;
static Base_Class bases__ZN4bbbb6zz0043E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy043E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0043E = {  "_ZN4bbbb6zz0043E", // class name
  bases__ZN4bbbb6zz0043E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1043  : ::bbbb::yy043 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1043E) C1{ BC2{ BC3{ BC4{ Fi} FL}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1043E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1043E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1043E, buf);
    ::bbbb::zz1043 &lv = *(new (buf) ::bbbb::zz1043());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1043E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1043E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz1043E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz1043E");
    check_base_class_offset(lv, (::bbbb::yy043*), 0, "_ZN4bbbb6zz1043E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz1043E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1043E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1043E(Test__ZN4bbbb6zz1043E, "_ZN4bbbb6zz1043E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy043E;
static Base_Class bases__ZN4bbbb6zz1043E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy043E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1043E = {  "_ZN4bbbb6zz1043E", // class name
  bases__ZN4bbbb6zz1043E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2043  : ::bbbb::yy043 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2043E) C1{ BC2{ BC3{ BC4{ Fi} FL}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2043E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2043E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2043E, buf);
    ::bbbb::zz2043 &lv = *(new (buf) ::bbbb::zz2043());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2043E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2043E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz2043E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz2043E");
    check_base_class_offset(lv, (::bbbb::yy043*), 0, "_ZN4bbbb6zz2043E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz2043E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2043E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2043E(Test__ZN4bbbb6zz2043E, "_ZN4bbbb6zz2043E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy043E;
static Base_Class bases__ZN4bbbb6zz2043E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy043E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2043E = {  "_ZN4bbbb6zz2043E", // class name
  bases__ZN4bbbb6zz2043E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3043  : ::bbbb::yy043 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3043E) C1{ BC2{ BC3{ BC4{ Fi} FL}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3043E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3043E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz3043E, buf);
    ::bbbb::zz3043 &lv = *(new (buf) ::bbbb::zz3043());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz3043E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3043E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz3043E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz3043E");
    check_base_class_offset(lv, (::bbbb::yy043*), 0, "_ZN4bbbb6zz3043E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz3043E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3043E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3043E(Test__ZN4bbbb6zz3043E, "_ZN4bbbb6zz3043E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy043E;
static Base_Class bases__ZN4bbbb6zz3043E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy043E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3043E = {  "_ZN4bbbb6zz3043E", // class name
  bases__ZN4bbbb6zz3043E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4043  : ::bbbb::yy043 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4043E) C1{ BC2{ BC3{ BC4{ Fi} FL}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4043E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4043E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4043E, buf);
    ::bbbb::zz4043 &lv = *(new (buf) ::bbbb::zz4043());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4043E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4043E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz4043E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy043*), 0, "_ZN4bbbb6zz4043E");
    check_base_class_offset(lv, (::bbbb::yy043*), 0, "_ZN4bbbb6zz4043E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4043E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4043E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4043E(Test__ZN4bbbb6zz4043E, "_ZN4bbbb6zz4043E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy043E;
static Base_Class bases__ZN4bbbb6zz4043E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy043E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4043E = {  "_ZN4bbbb6zz4043E", // class name
  bases__ZN4bbbb6zz4043E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy143  : ::bbbb::xx43 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy143E) C1{ BC2{ BC3{ Fi} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy143E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy143E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb5yy143E, buf);
    ::bbbb::yy143 &lv = *(new (buf) ::bbbb::yy143());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb5yy143E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy143E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*), 0, "_ZN4bbbb5yy143E");
    check_base_class_offset(lv, (::bbbb::xx43*), 0, "_ZN4bbbb5yy143E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy143E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy143E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy143E(Test__ZN4bbbb5yy143E, "_ZN4bbbb5yy143E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
static Base_Class bases__ZN4bbbb5yy143E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy143E = {  "_ZN4bbbb5yy143E", // class name
  bases__ZN4bbbb5yy143E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0143  : ::bbbb::yy143 {
};
//SIG(1 _ZN4bbbb6zz0143E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0143E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0143E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz0143E, buf);
    ::bbbb::zz0143 &lv = *(new (buf) ::bbbb::zz0143());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz0143E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0143E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz0143E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz0143E");
    check_base_class_offset(lv, (::bbbb::yy143*), 0, "_ZN4bbbb6zz0143E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0143E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0143E(Test__ZN4bbbb6zz0143E, "_ZN4bbbb6zz0143E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy143E;
static Base_Class bases__ZN4bbbb6zz0143E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy143E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0143E = {  "_ZN4bbbb6zz0143E", // class name
  bases__ZN4bbbb6zz0143E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1143  : ::bbbb::yy143 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1143E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1143E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1143E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1143E, buf);
    ::bbbb::zz1143 &lv = *(new (buf) ::bbbb::zz1143());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1143E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1143E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz1143E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz1143E");
    check_base_class_offset(lv, (::bbbb::yy143*), 0, "_ZN4bbbb6zz1143E");
    check_field_offset(lv, fd, ABISELECT(17,13), "_ZN4bbbb6zz1143E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1143E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1143E(Test__ZN4bbbb6zz1143E, "_ZN4bbbb6zz1143E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy143E;
static Base_Class bases__ZN4bbbb6zz1143E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy143E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1143E = {  "_ZN4bbbb6zz1143E", // class name
  bases__ZN4bbbb6zz1143E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2143  : ::bbbb::yy143 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2143E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2143E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2143E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2143E, buf);
    ::bbbb::zz2143 &lv = *(new (buf) ::bbbb::zz2143());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2143E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2143E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz2143E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz2143E");
    check_base_class_offset(lv, (::bbbb::yy143*), 0, "_ZN4bbbb6zz2143E");
    check_field_offset(lv, fd, ABISELECT(18,14), "_ZN4bbbb6zz2143E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2143E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2143E(Test__ZN4bbbb6zz2143E, "_ZN4bbbb6zz2143E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy143E;
static Base_Class bases__ZN4bbbb6zz2143E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy143E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2143E = {  "_ZN4bbbb6zz2143E", // class name
  bases__ZN4bbbb6zz2143E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3143  : ::bbbb::yy143 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3143E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3143E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3143E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3143E, buf);
    ::bbbb::zz3143 &lv = *(new (buf) ::bbbb::zz3143());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3143E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3143E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz3143E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz3143E");
    check_base_class_offset(lv, (::bbbb::yy143*), 0, "_ZN4bbbb6zz3143E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz3143E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3143E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3143E(Test__ZN4bbbb6zz3143E, "_ZN4bbbb6zz3143E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy143E;
static Base_Class bases__ZN4bbbb6zz3143E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy143E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3143E = {  "_ZN4bbbb6zz3143E", // class name
  bases__ZN4bbbb6zz3143E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4143  : ::bbbb::yy143 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4143E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4143E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4143E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz4143E, buf);
    ::bbbb::zz4143 &lv = *(new (buf) ::bbbb::zz4143());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz4143E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4143E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz4143E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy143*), 0, "_ZN4bbbb6zz4143E");
    check_base_class_offset(lv, (::bbbb::yy143*), 0, "_ZN4bbbb6zz4143E");
    check_field_offset(lv, fd, ABISELECT(24,16), "_ZN4bbbb6zz4143E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4143E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4143E(Test__ZN4bbbb6zz4143E, "_ZN4bbbb6zz4143E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy143E;
static Base_Class bases__ZN4bbbb6zz4143E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy143E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4143E = {  "_ZN4bbbb6zz4143E", // class name
  bases__ZN4bbbb6zz4143E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy243  : ::bbbb::xx43 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy243E) C1{ BC2{ BC3{ Fi} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy243E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy243E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb5yy243E, buf);
    ::bbbb::yy243 &lv = *(new (buf) ::bbbb::yy243());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb5yy243E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy243E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*), 0, "_ZN4bbbb5yy243E");
    check_base_class_offset(lv, (::bbbb::xx43*), 0, "_ZN4bbbb5yy243E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy243E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy243E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy243E(Test__ZN4bbbb5yy243E, "_ZN4bbbb5yy243E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
static Base_Class bases__ZN4bbbb5yy243E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy243E = {  "_ZN4bbbb5yy243E", // class name
  bases__ZN4bbbb5yy243E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0243  : ::bbbb::yy243 {
};
//SIG(1 _ZN4bbbb6zz0243E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0243E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0243E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz0243E, buf);
    ::bbbb::zz0243 &lv = *(new (buf) ::bbbb::zz0243());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz0243E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0243E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz0243E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz0243E");
    check_base_class_offset(lv, (::bbbb::yy243*), 0, "_ZN4bbbb6zz0243E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0243E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0243E(Test__ZN4bbbb6zz0243E, "_ZN4bbbb6zz0243E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy243E;
static Base_Class bases__ZN4bbbb6zz0243E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy243E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0243E = {  "_ZN4bbbb6zz0243E", // class name
  bases__ZN4bbbb6zz0243E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1243  : ::bbbb::yy243 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1243E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1243E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1243E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz1243E, buf);
    ::bbbb::zz1243 &lv = *(new (buf) ::bbbb::zz1243());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz1243E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1243E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz1243E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz1243E");
    check_base_class_offset(lv, (::bbbb::yy243*), 0, "_ZN4bbbb6zz1243E");
    check_field_offset(lv, fd, ABISELECT(18,14), "_ZN4bbbb6zz1243E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1243E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1243E(Test__ZN4bbbb6zz1243E, "_ZN4bbbb6zz1243E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy243E;
static Base_Class bases__ZN4bbbb6zz1243E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy243E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1243E = {  "_ZN4bbbb6zz1243E", // class name
  bases__ZN4bbbb6zz1243E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2243  : ::bbbb::yy243 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2243E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2243E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2243E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz2243E, buf);
    ::bbbb::zz2243 &lv = *(new (buf) ::bbbb::zz2243());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz2243E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2243E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz2243E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz2243E");
    check_base_class_offset(lv, (::bbbb::yy243*), 0, "_ZN4bbbb6zz2243E");
    check_field_offset(lv, fd, ABISELECT(18,14), "_ZN4bbbb6zz2243E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2243E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2243E(Test__ZN4bbbb6zz2243E, "_ZN4bbbb6zz2243E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy243E;
static Base_Class bases__ZN4bbbb6zz2243E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy243E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2243E = {  "_ZN4bbbb6zz2243E", // class name
  bases__ZN4bbbb6zz2243E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3243  : ::bbbb::yy243 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3243E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3243E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3243E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3243E, buf);
    ::bbbb::zz3243 &lv = *(new (buf) ::bbbb::zz3243());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3243E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3243E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz3243E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz3243E");
    check_base_class_offset(lv, (::bbbb::yy243*), 0, "_ZN4bbbb6zz3243E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz3243E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3243E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3243E(Test__ZN4bbbb6zz3243E, "_ZN4bbbb6zz3243E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy243E;
static Base_Class bases__ZN4bbbb6zz3243E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy243E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3243E = {  "_ZN4bbbb6zz3243E", // class name
  bases__ZN4bbbb6zz3243E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4243  : ::bbbb::yy243 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4243E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4243E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4243E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz4243E, buf);
    ::bbbb::zz4243 &lv = *(new (buf) ::bbbb::zz4243());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz4243E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4243E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz4243E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy243*), 0, "_ZN4bbbb6zz4243E");
    check_base_class_offset(lv, (::bbbb::yy243*), 0, "_ZN4bbbb6zz4243E");
    check_field_offset(lv, fd, ABISELECT(24,16), "_ZN4bbbb6zz4243E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4243E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4243E(Test__ZN4bbbb6zz4243E, "_ZN4bbbb6zz4243E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy243E;
static Base_Class bases__ZN4bbbb6zz4243E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy243E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4243E = {  "_ZN4bbbb6zz4243E", // class name
  bases__ZN4bbbb6zz4243E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy343  : ::bbbb::xx43 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy343E) C1{ BC2{ BC3{ Fi} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy343E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy343E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb5yy343E, buf);
    ::bbbb::yy343 &lv = *(new (buf) ::bbbb::yy343());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb5yy343E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy343E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*), 0, "_ZN4bbbb5yy343E");
    check_base_class_offset(lv, (::bbbb::xx43*), 0, "_ZN4bbbb5yy343E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy343E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy343E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy343E(Test__ZN4bbbb5yy343E, "_ZN4bbbb5yy343E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
static Base_Class bases__ZN4bbbb5yy343E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy343E = {  "_ZN4bbbb5yy343E", // class name
  bases__ZN4bbbb5yy343E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0343  : ::bbbb::yy343 {
};
//SIG(1 _ZN4bbbb6zz0343E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0343E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0343E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,5)];
    init_test(&cd__ZN4bbbb6zz0343E, buf);
    ::bbbb::zz0343 &lv = *(new (buf) ::bbbb::zz0343());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(_ZN4bbbb6zz0343E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0343E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz0343E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz0343E");
    check_base_class_offset(lv, (::bbbb::yy343*), 0, "_ZN4bbbb6zz0343E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0343E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0343E(Test__ZN4bbbb6zz0343E, "_ZN4bbbb6zz0343E", ABISELECT(24,16));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy343E;
static Base_Class bases__ZN4bbbb6zz0343E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy343E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0343E = {  "_ZN4bbbb6zz0343E", // class name
  bases__ZN4bbbb6zz0343E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,16), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1343  : ::bbbb::yy343 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1343E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1343E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1343E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1343E, buf);
    ::bbbb::zz1343 &lv = *(new (buf) ::bbbb::zz1343());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1343E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1343E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz1343E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz1343E");
    check_base_class_offset(lv, (::bbbb::yy343*), 0, "_ZN4bbbb6zz1343E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz1343E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1343E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1343E(Test__ZN4bbbb6zz1343E, "_ZN4bbbb6zz1343E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy343E;
static Base_Class bases__ZN4bbbb6zz1343E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy343E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1343E = {  "_ZN4bbbb6zz1343E", // class name
  bases__ZN4bbbb6zz1343E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2343  : ::bbbb::yy343 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2343E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2343E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2343E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2343E, buf);
    ::bbbb::zz2343 &lv = *(new (buf) ::bbbb::zz2343());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2343E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2343E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz2343E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz2343E");
    check_base_class_offset(lv, (::bbbb::yy343*), 0, "_ZN4bbbb6zz2343E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz2343E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2343E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2343E(Test__ZN4bbbb6zz2343E, "_ZN4bbbb6zz2343E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy343E;
static Base_Class bases__ZN4bbbb6zz2343E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy343E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2343E = {  "_ZN4bbbb6zz2343E", // class name
  bases__ZN4bbbb6zz2343E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3343  : ::bbbb::yy343 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3343E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3343E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3343E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3343E, buf);
    ::bbbb::zz3343 &lv = *(new (buf) ::bbbb::zz3343());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3343E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3343E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz3343E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz3343E");
    check_base_class_offset(lv, (::bbbb::yy343*), 0, "_ZN4bbbb6zz3343E");
    check_field_offset(lv, fd, ABISELECT(20,16), "_ZN4bbbb6zz3343E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3343E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3343E(Test__ZN4bbbb6zz3343E, "_ZN4bbbb6zz3343E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy343E;
static Base_Class bases__ZN4bbbb6zz3343E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy343E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3343E = {  "_ZN4bbbb6zz3343E", // class name
  bases__ZN4bbbb6zz3343E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4343  : ::bbbb::yy343 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4343E) C1{ BC2{ BC3{ BC4{ Fi} FL} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4343E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4343E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz4343E, buf);
    ::bbbb::zz4343 &lv = *(new (buf) ::bbbb::zz4343());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz4343E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4343E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz4343E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy343*), 0, "_ZN4bbbb6zz4343E");
    check_base_class_offset(lv, (::bbbb::yy343*), 0, "_ZN4bbbb6zz4343E");
    check_field_offset(lv, fd, ABISELECT(24,16), "_ZN4bbbb6zz4343E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4343E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4343E(Test__ZN4bbbb6zz4343E, "_ZN4bbbb6zz4343E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy343E;
static Base_Class bases__ZN4bbbb6zz4343E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy343E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4343E = {  "_ZN4bbbb6zz4343E", // class name
  bases__ZN4bbbb6zz4343E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy443  : ::bbbb::xx43 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy443E) C1{ BC2{ BC3{ Fi} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy443E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy443E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb5yy443E, buf);
    ::bbbb::yy443 &lv = *(new (buf) ::bbbb::yy443());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb5yy443E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy443E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*), 0, "_ZN4bbbb5yy443E");
    check_base_class_offset(lv, (::bbbb::xx43*), 0, "_ZN4bbbb5yy443E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy443E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy443E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy443E(Test__ZN4bbbb5yy443E, "_ZN4bbbb5yy443E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
static Base_Class bases__ZN4bbbb5yy443E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy443E = {  "_ZN4bbbb5yy443E", // class name
  bases__ZN4bbbb5yy443E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0443  : ::bbbb::yy443 {
};
//SIG(1 _ZN4bbbb6zz0443E) C1{ BC2{ BC3{ BC4{ Fi} FL} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0443E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0443E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz0443E, buf);
    ::bbbb::zz0443 &lv = *(new (buf) ::bbbb::zz0443());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz0443E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0443E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz0443E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz0443E");
    check_base_class_offset(lv, (::bbbb::yy443*), 0, "_ZN4bbbb6zz0443E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0443E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0443E(Test__ZN4bbbb6zz0443E, "_ZN4bbbb6zz0443E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy443E;
static Base_Class bases__ZN4bbbb6zz0443E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy443E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0443E = {  "_ZN4bbbb6zz0443E", // class name
  bases__ZN4bbbb6zz0443E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1443  : ::bbbb::yy443 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1443E) C1{ BC2{ BC3{ BC4{ Fi} FL} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1443E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1443E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz1443E, buf);
    ::bbbb::zz1443 &lv = *(new (buf) ::bbbb::zz1443());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz1443E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1443E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz1443E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz1443E");
    check_base_class_offset(lv, (::bbbb::yy443*), 0, "_ZN4bbbb6zz1443E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz1443E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1443E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1443E(Test__ZN4bbbb6zz1443E, "_ZN4bbbb6zz1443E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy443E;
static Base_Class bases__ZN4bbbb6zz1443E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy443E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1443E = {  "_ZN4bbbb6zz1443E", // class name
  bases__ZN4bbbb6zz1443E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2443  : ::bbbb::yy443 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2443E) C1{ BC2{ BC3{ BC4{ Fi} FL} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2443E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2443E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz2443E, buf);
    ::bbbb::zz2443 &lv = *(new (buf) ::bbbb::zz2443());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz2443E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2443E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz2443E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz2443E");
    check_base_class_offset(lv, (::bbbb::yy443*), 0, "_ZN4bbbb6zz2443E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz2443E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2443E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2443E(Test__ZN4bbbb6zz2443E, "_ZN4bbbb6zz2443E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy443E;
static Base_Class bases__ZN4bbbb6zz2443E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy443E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2443E = {  "_ZN4bbbb6zz2443E", // class name
  bases__ZN4bbbb6zz2443E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3443  : ::bbbb::yy443 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3443E) C1{ BC2{ BC3{ BC4{ Fi} FL} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3443E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3443E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz3443E, buf);
    ::bbbb::zz3443 &lv = *(new (buf) ::bbbb::zz3443());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz3443E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3443E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz3443E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz3443E");
    check_base_class_offset(lv, (::bbbb::yy443*), 0, "_ZN4bbbb6zz3443E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz3443E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3443E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3443E(Test__ZN4bbbb6zz3443E, "_ZN4bbbb6zz3443E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy443E;
static Base_Class bases__ZN4bbbb6zz3443E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy443E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3443E = {  "_ZN4bbbb6zz3443E", // class name
  bases__ZN4bbbb6zz3443E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4443  : ::bbbb::yy443 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4443E) C1{ BC2{ BC3{ BC4{ Fi} FL} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4443E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4443E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz4443E, buf);
    ::bbbb::zz4443 &lv = *(new (buf) ::bbbb::zz4443());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz4443E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4443E)");
    check_base_class_offset(lv, (::bbbb::ww3*)(::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz4443E");
    check_base_class_offset(lv, (::bbbb::xx43*)(::bbbb::yy443*), 0, "_ZN4bbbb6zz4443E");
    check_base_class_offset(lv, (::bbbb::yy443*), 0, "_ZN4bbbb6zz4443E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz4443E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4443E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4443E(Test__ZN4bbbb6zz4443E, "_ZN4bbbb6zz4443E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww3E;
extern Class_Descriptor cd__ZN4bbbb4xx43E;
extern Class_Descriptor cd__ZN4bbbb5yy443E;
static Base_Class bases__ZN4bbbb6zz4443E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww3E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx43E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy443E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4443E = {  "_ZN4bbbb6zz4443E", // class name
  bases__ZN4bbbb6zz4443E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  ww4  {
  double fa;
};
//SIG(-1 _ZN4bbbb3ww4E) C1{ FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb3ww4E()
{
  {
    init_simple_test("_ZN4bbbb3ww4E");
    ::bbbb::ww4 lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb3ww4E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb3ww4E)");
    check_field_offset(lv, fa, 0, "_ZN4bbbb3ww4E.fa");
  }
}
static Arrange_To_Call_Me v_ZN4bbbb3ww4E(Test__ZN4bbbb3ww4E, "_ZN4bbbb3ww4E", 8);

#else // __cplusplus

Class_Descriptor cd__ZN4bbbb3ww4E = {  "_ZN4bbbb3ww4E", // class name
  0,0,//no base classes
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx04  : ::bbbb::ww4 {
};
//SIG(-1 _ZN4bbbb4xx04E) C1{ BC2{ FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx04E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx04E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(2,3)];
    init_test(&cd__ZN4bbbb4xx04E, buf);
    ::bbbb::xx04 &lv = *(new (buf) ::bbbb::xx04());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb4xx04E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb4xx04E)");
    check_base_class_offset(lv, (::bbbb::ww4*), 0, "_ZN4bbbb4xx04E");
    test_class_info(&lv, &cd__ZN4bbbb4xx04E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx04E(Test__ZN4bbbb4xx04E, "_ZN4bbbb4xx04E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
static Base_Class bases__ZN4bbbb4xx04E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx04E = {  "_ZN4bbbb4xx04E", // class name
  bases__ZN4bbbb4xx04E, 1,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy004  : ::bbbb::xx04 {
};
//SIG(-1 _ZN4bbbb5yy004E) C1{ BC2{ BC3{ FL}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy004E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy004E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(2,3)];
    init_test(&cd__ZN4bbbb5yy004E, buf);
    ::bbbb::yy004 &lv = *(new (buf) ::bbbb::yy004());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb5yy004E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy004E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*), 0, "_ZN4bbbb5yy004E");
    check_base_class_offset(lv, (::bbbb::xx04*), 0, "_ZN4bbbb5yy004E");
    test_class_info(&lv, &cd__ZN4bbbb5yy004E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy004E(Test__ZN4bbbb5yy004E, "_ZN4bbbb5yy004E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
static Base_Class bases__ZN4bbbb5yy004E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy004E = {  "_ZN4bbbb5yy004E", // class name
  bases__ZN4bbbb5yy004E, 2,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0004  : ::bbbb::yy004 {
};
//SIG(1 _ZN4bbbb6zz0004E) C1{ BC2{ BC3{ BC4{ FL}}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0004E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0004E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(2,3)];
    init_test(&cd__ZN4bbbb6zz0004E, buf);
    ::bbbb::zz0004 &lv = *(new (buf) ::bbbb::zz0004());
    lvp = (void*)&lv;
    check2(sizeof(lv), 8, "sizeof(_ZN4bbbb6zz0004E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0004E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz0004E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz0004E");
    check_base_class_offset(lv, (::bbbb::yy004*), 0, "_ZN4bbbb6zz0004E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0004E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0004E(Test__ZN4bbbb6zz0004E, "_ZN4bbbb6zz0004E", 8);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy004E;
static Base_Class bases__ZN4bbbb6zz0004E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy004E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0004E = {  "_ZN4bbbb6zz0004E", // class name
  bases__ZN4bbbb6zz0004E, 3,
  0, // no vftv
  0, //no vtt
  8, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1004  : ::bbbb::yy004 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1004E) C1{ BC2{ BC3{ BC4{ FL}}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1004E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1004E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1004E, buf);
    ::bbbb::zz1004 &lv = *(new (buf) ::bbbb::zz1004());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1004E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1004E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz1004E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz1004E");
    check_base_class_offset(lv, (::bbbb::yy004*), 0, "_ZN4bbbb6zz1004E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz1004E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1004E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1004E(Test__ZN4bbbb6zz1004E, "_ZN4bbbb6zz1004E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy004E;
static Base_Class bases__ZN4bbbb6zz1004E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy004E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1004E = {  "_ZN4bbbb6zz1004E", // class name
  bases__ZN4bbbb6zz1004E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2004  : ::bbbb::yy004 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2004E) C1{ BC2{ BC3{ BC4{ FL}}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2004E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2004E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2004E, buf);
    ::bbbb::zz2004 &lv = *(new (buf) ::bbbb::zz2004());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2004E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2004E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz2004E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz2004E");
    check_base_class_offset(lv, (::bbbb::yy004*), 0, "_ZN4bbbb6zz2004E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz2004E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2004E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2004E(Test__ZN4bbbb6zz2004E, "_ZN4bbbb6zz2004E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy004E;
static Base_Class bases__ZN4bbbb6zz2004E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy004E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2004E = {  "_ZN4bbbb6zz2004E", // class name
  bases__ZN4bbbb6zz2004E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3004  : ::bbbb::yy004 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3004E) C1{ BC2{ BC3{ BC4{ FL}}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3004E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3004E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz3004E, buf);
    ::bbbb::zz3004 &lv = *(new (buf) ::bbbb::zz3004());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz3004E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3004E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz3004E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz3004E");
    check_base_class_offset(lv, (::bbbb::yy004*), 0, "_ZN4bbbb6zz3004E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz3004E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3004E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3004E(Test__ZN4bbbb6zz3004E, "_ZN4bbbb6zz3004E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy004E;
static Base_Class bases__ZN4bbbb6zz3004E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy004E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3004E = {  "_ZN4bbbb6zz3004E", // class name
  bases__ZN4bbbb6zz3004E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4004  : ::bbbb::yy004 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4004E) C1{ BC2{ BC3{ BC4{ FL}}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4004E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4004E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz4004E, buf);
    ::bbbb::zz4004 &lv = *(new (buf) ::bbbb::zz4004());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz4004E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4004E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz4004E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy004*), 0, "_ZN4bbbb6zz4004E");
    check_base_class_offset(lv, (::bbbb::yy004*), 0, "_ZN4bbbb6zz4004E");
    check_field_offset(lv, fd, 8, "_ZN4bbbb6zz4004E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4004E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4004E(Test__ZN4bbbb6zz4004E, "_ZN4bbbb6zz4004E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy004E;
static Base_Class bases__ZN4bbbb6zz4004E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy004E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4004E = {  "_ZN4bbbb6zz4004E", // class name
  bases__ZN4bbbb6zz4004E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy104  : ::bbbb::xx04 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy104E) C1{ BC2{ BC3{ FL}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy104E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy104E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy104E, buf);
    ::bbbb::yy104 &lv = *(new (buf) ::bbbb::yy104());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy104E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy104E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*), 0, "_ZN4bbbb5yy104E");
    check_base_class_offset(lv, (::bbbb::xx04*), 0, "_ZN4bbbb5yy104E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy104E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy104E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy104E(Test__ZN4bbbb5yy104E, "_ZN4bbbb5yy104E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
static Base_Class bases__ZN4bbbb5yy104E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy104E = {  "_ZN4bbbb5yy104E", // class name
  bases__ZN4bbbb5yy104E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0104  : ::bbbb::yy104 {
};
//SIG(1 _ZN4bbbb6zz0104E) C1{ BC2{ BC3{ BC4{ FL}} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0104E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0104E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0104E, buf);
    ::bbbb::zz0104 &lv = *(new (buf) ::bbbb::zz0104());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0104E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0104E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz0104E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz0104E");
    check_base_class_offset(lv, (::bbbb::yy104*), 0, "_ZN4bbbb6zz0104E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0104E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0104E(Test__ZN4bbbb6zz0104E, "_ZN4bbbb6zz0104E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy104E;
static Base_Class bases__ZN4bbbb6zz0104E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy104E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0104E = {  "_ZN4bbbb6zz0104E", // class name
  bases__ZN4bbbb6zz0104E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1104  : ::bbbb::yy104 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1104E) C1{ BC2{ BC3{ BC4{ FL}} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1104E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1104E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1104E, buf);
    ::bbbb::zz1104 &lv = *(new (buf) ::bbbb::zz1104());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1104E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1104E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz1104E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz1104E");
    check_base_class_offset(lv, (::bbbb::yy104*), 0, "_ZN4bbbb6zz1104E");
    check_field_offset(lv, fd, 9, "_ZN4bbbb6zz1104E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1104E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1104E(Test__ZN4bbbb6zz1104E, "_ZN4bbbb6zz1104E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy104E;
static Base_Class bases__ZN4bbbb6zz1104E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy104E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1104E = {  "_ZN4bbbb6zz1104E", // class name
  bases__ZN4bbbb6zz1104E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2104  : ::bbbb::yy104 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2104E) C1{ BC2{ BC3{ BC4{ FL}} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2104E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2104E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2104E, buf);
    ::bbbb::zz2104 &lv = *(new (buf) ::bbbb::zz2104());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2104E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2104E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz2104E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz2104E");
    check_base_class_offset(lv, (::bbbb::yy104*), 0, "_ZN4bbbb6zz2104E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2104E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2104E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2104E(Test__ZN4bbbb6zz2104E, "_ZN4bbbb6zz2104E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy104E;
static Base_Class bases__ZN4bbbb6zz2104E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy104E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2104E = {  "_ZN4bbbb6zz2104E", // class name
  bases__ZN4bbbb6zz2104E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3104  : ::bbbb::yy104 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3104E) C1{ BC2{ BC3{ BC4{ FL}} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3104E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3104E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3104E, buf);
    ::bbbb::zz3104 &lv = *(new (buf) ::bbbb::zz3104());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3104E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3104E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz3104E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz3104E");
    check_base_class_offset(lv, (::bbbb::yy104*), 0, "_ZN4bbbb6zz3104E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3104E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3104E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3104E(Test__ZN4bbbb6zz3104E, "_ZN4bbbb6zz3104E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy104E;
static Base_Class bases__ZN4bbbb6zz3104E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy104E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3104E = {  "_ZN4bbbb6zz3104E", // class name
  bases__ZN4bbbb6zz3104E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4104  : ::bbbb::yy104 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4104E) C1{ BC2{ BC3{ BC4{ FL}} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4104E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4104E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4104E, buf);
    ::bbbb::zz4104 &lv = *(new (buf) ::bbbb::zz4104());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4104E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4104E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz4104E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy104*), 0, "_ZN4bbbb6zz4104E");
    check_base_class_offset(lv, (::bbbb::yy104*), 0, "_ZN4bbbb6zz4104E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4104E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4104E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4104E(Test__ZN4bbbb6zz4104E, "_ZN4bbbb6zz4104E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy104E;
static Base_Class bases__ZN4bbbb6zz4104E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy104E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4104E = {  "_ZN4bbbb6zz4104E", // class name
  bases__ZN4bbbb6zz4104E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy204  : ::bbbb::xx04 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy204E) C1{ BC2{ BC3{ FL}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy204E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy204E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy204E, buf);
    ::bbbb::yy204 &lv = *(new (buf) ::bbbb::yy204());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy204E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy204E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*), 0, "_ZN4bbbb5yy204E");
    check_base_class_offset(lv, (::bbbb::xx04*), 0, "_ZN4bbbb5yy204E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy204E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy204E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy204E(Test__ZN4bbbb5yy204E, "_ZN4bbbb5yy204E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
static Base_Class bases__ZN4bbbb5yy204E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy204E = {  "_ZN4bbbb5yy204E", // class name
  bases__ZN4bbbb5yy204E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0204  : ::bbbb::yy204 {
};
//SIG(1 _ZN4bbbb6zz0204E) C1{ BC2{ BC3{ BC4{ FL}} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0204E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0204E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0204E, buf);
    ::bbbb::zz0204 &lv = *(new (buf) ::bbbb::zz0204());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0204E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0204E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz0204E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz0204E");
    check_base_class_offset(lv, (::bbbb::yy204*), 0, "_ZN4bbbb6zz0204E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0204E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0204E(Test__ZN4bbbb6zz0204E, "_ZN4bbbb6zz0204E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy204E;
static Base_Class bases__ZN4bbbb6zz0204E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy204E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0204E = {  "_ZN4bbbb6zz0204E", // class name
  bases__ZN4bbbb6zz0204E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1204  : ::bbbb::yy204 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1204E) C1{ BC2{ BC3{ BC4{ FL}} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1204E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1204E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1204E, buf);
    ::bbbb::zz1204 &lv = *(new (buf) ::bbbb::zz1204());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1204E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1204E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz1204E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz1204E");
    check_base_class_offset(lv, (::bbbb::yy204*), 0, "_ZN4bbbb6zz1204E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz1204E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1204E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1204E(Test__ZN4bbbb6zz1204E, "_ZN4bbbb6zz1204E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy204E;
static Base_Class bases__ZN4bbbb6zz1204E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy204E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1204E = {  "_ZN4bbbb6zz1204E", // class name
  bases__ZN4bbbb6zz1204E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2204  : ::bbbb::yy204 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2204E) C1{ BC2{ BC3{ BC4{ FL}} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2204E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2204E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2204E, buf);
    ::bbbb::zz2204 &lv = *(new (buf) ::bbbb::zz2204());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2204E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2204E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz2204E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz2204E");
    check_base_class_offset(lv, (::bbbb::yy204*), 0, "_ZN4bbbb6zz2204E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2204E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2204E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2204E(Test__ZN4bbbb6zz2204E, "_ZN4bbbb6zz2204E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy204E;
static Base_Class bases__ZN4bbbb6zz2204E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy204E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2204E = {  "_ZN4bbbb6zz2204E", // class name
  bases__ZN4bbbb6zz2204E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3204  : ::bbbb::yy204 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3204E) C1{ BC2{ BC3{ BC4{ FL}} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3204E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3204E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3204E, buf);
    ::bbbb::zz3204 &lv = *(new (buf) ::bbbb::zz3204());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3204E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3204E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz3204E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz3204E");
    check_base_class_offset(lv, (::bbbb::yy204*), 0, "_ZN4bbbb6zz3204E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3204E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3204E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3204E(Test__ZN4bbbb6zz3204E, "_ZN4bbbb6zz3204E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy204E;
static Base_Class bases__ZN4bbbb6zz3204E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy204E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3204E = {  "_ZN4bbbb6zz3204E", // class name
  bases__ZN4bbbb6zz3204E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4204  : ::bbbb::yy204 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4204E) C1{ BC2{ BC3{ BC4{ FL}} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4204E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4204E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4204E, buf);
    ::bbbb::zz4204 &lv = *(new (buf) ::bbbb::zz4204());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4204E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4204E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz4204E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy204*), 0, "_ZN4bbbb6zz4204E");
    check_base_class_offset(lv, (::bbbb::yy204*), 0, "_ZN4bbbb6zz4204E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4204E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4204E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4204E(Test__ZN4bbbb6zz4204E, "_ZN4bbbb6zz4204E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy204E;
static Base_Class bases__ZN4bbbb6zz4204E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy204E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4204E = {  "_ZN4bbbb6zz4204E", // class name
  bases__ZN4bbbb6zz4204E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy304  : ::bbbb::xx04 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy304E) C1{ BC2{ BC3{ FL}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy304E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy304E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy304E, buf);
    ::bbbb::yy304 &lv = *(new (buf) ::bbbb::yy304());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy304E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy304E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*), 0, "_ZN4bbbb5yy304E");
    check_base_class_offset(lv, (::bbbb::xx04*), 0, "_ZN4bbbb5yy304E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy304E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy304E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy304E(Test__ZN4bbbb5yy304E, "_ZN4bbbb5yy304E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
static Base_Class bases__ZN4bbbb5yy304E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy304E = {  "_ZN4bbbb5yy304E", // class name
  bases__ZN4bbbb5yy304E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0304  : ::bbbb::yy304 {
};
//SIG(1 _ZN4bbbb6zz0304E) C1{ BC2{ BC3{ BC4{ FL}} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0304E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0304E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0304E, buf);
    ::bbbb::zz0304 &lv = *(new (buf) ::bbbb::zz0304());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0304E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0304E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz0304E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz0304E");
    check_base_class_offset(lv, (::bbbb::yy304*), 0, "_ZN4bbbb6zz0304E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0304E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0304E(Test__ZN4bbbb6zz0304E, "_ZN4bbbb6zz0304E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy304E;
static Base_Class bases__ZN4bbbb6zz0304E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy304E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0304E = {  "_ZN4bbbb6zz0304E", // class name
  bases__ZN4bbbb6zz0304E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1304  : ::bbbb::yy304 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1304E) C1{ BC2{ BC3{ BC4{ FL}} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1304E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1304E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz1304E, buf);
    ::bbbb::zz1304 &lv = *(new (buf) ::bbbb::zz1304());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1304E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1304E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz1304E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz1304E");
    check_base_class_offset(lv, (::bbbb::yy304*), 0, "_ZN4bbbb6zz1304E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1304E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1304E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1304E(Test__ZN4bbbb6zz1304E, "_ZN4bbbb6zz1304E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy304E;
static Base_Class bases__ZN4bbbb6zz1304E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy304E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1304E = {  "_ZN4bbbb6zz1304E", // class name
  bases__ZN4bbbb6zz1304E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2304  : ::bbbb::yy304 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2304E) C1{ BC2{ BC3{ BC4{ FL}} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2304E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2304E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz2304E, buf);
    ::bbbb::zz2304 &lv = *(new (buf) ::bbbb::zz2304());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2304E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2304E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz2304E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz2304E");
    check_base_class_offset(lv, (::bbbb::yy304*), 0, "_ZN4bbbb6zz2304E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2304E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2304E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2304E(Test__ZN4bbbb6zz2304E, "_ZN4bbbb6zz2304E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy304E;
static Base_Class bases__ZN4bbbb6zz2304E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy304E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2304E = {  "_ZN4bbbb6zz2304E", // class name
  bases__ZN4bbbb6zz2304E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3304  : ::bbbb::yy304 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3304E) C1{ BC2{ BC3{ BC4{ FL}} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3304E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3304E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3304E, buf);
    ::bbbb::zz3304 &lv = *(new (buf) ::bbbb::zz3304());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3304E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3304E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz3304E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz3304E");
    check_base_class_offset(lv, (::bbbb::yy304*), 0, "_ZN4bbbb6zz3304E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3304E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3304E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3304E(Test__ZN4bbbb6zz3304E, "_ZN4bbbb6zz3304E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy304E;
static Base_Class bases__ZN4bbbb6zz3304E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy304E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3304E = {  "_ZN4bbbb6zz3304E", // class name
  bases__ZN4bbbb6zz3304E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4304  : ::bbbb::yy304 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4304E) C1{ BC2{ BC3{ BC4{ FL}} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4304E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4304E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4304E, buf);
    ::bbbb::zz4304 &lv = *(new (buf) ::bbbb::zz4304());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4304E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4304E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz4304E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy304*), 0, "_ZN4bbbb6zz4304E");
    check_base_class_offset(lv, (::bbbb::yy304*), 0, "_ZN4bbbb6zz4304E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4304E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4304E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4304E(Test__ZN4bbbb6zz4304E, "_ZN4bbbb6zz4304E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy304E;
static Base_Class bases__ZN4bbbb6zz4304E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy304E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4304E = {  "_ZN4bbbb6zz4304E", // class name
  bases__ZN4bbbb6zz4304E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy404  : ::bbbb::xx04 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy404E) C1{ BC2{ BC3{ FL}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy404E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy404E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy404E, buf);
    ::bbbb::yy404 &lv = *(new (buf) ::bbbb::yy404());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy404E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy404E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*), 0, "_ZN4bbbb5yy404E");
    check_base_class_offset(lv, (::bbbb::xx04*), 0, "_ZN4bbbb5yy404E");
    check_field_offset(lv, fc, 8, "_ZN4bbbb5yy404E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy404E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy404E(Test__ZN4bbbb5yy404E, "_ZN4bbbb5yy404E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
static Base_Class bases__ZN4bbbb5yy404E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy404E = {  "_ZN4bbbb5yy404E", // class name
  bases__ZN4bbbb5yy404E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0404  : ::bbbb::yy404 {
};
//SIG(1 _ZN4bbbb6zz0404E) C1{ BC2{ BC3{ BC4{ FL}} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0404E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0404E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0404E, buf);
    ::bbbb::zz0404 &lv = *(new (buf) ::bbbb::zz0404());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0404E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0404E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz0404E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz0404E");
    check_base_class_offset(lv, (::bbbb::yy404*), 0, "_ZN4bbbb6zz0404E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0404E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0404E(Test__ZN4bbbb6zz0404E, "_ZN4bbbb6zz0404E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy404E;
static Base_Class bases__ZN4bbbb6zz0404E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy404E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0404E = {  "_ZN4bbbb6zz0404E", // class name
  bases__ZN4bbbb6zz0404E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1404  : ::bbbb::yy404 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1404E) C1{ BC2{ BC3{ BC4{ FL}} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1404E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1404E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1404E, buf);
    ::bbbb::zz1404 &lv = *(new (buf) ::bbbb::zz1404());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1404E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1404E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz1404E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz1404E");
    check_base_class_offset(lv, (::bbbb::yy404*), 0, "_ZN4bbbb6zz1404E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1404E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1404E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1404E(Test__ZN4bbbb6zz1404E, "_ZN4bbbb6zz1404E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy404E;
static Base_Class bases__ZN4bbbb6zz1404E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy404E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1404E = {  "_ZN4bbbb6zz1404E", // class name
  bases__ZN4bbbb6zz1404E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2404  : ::bbbb::yy404 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2404E) C1{ BC2{ BC3{ BC4{ FL}} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2404E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2404E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2404E, buf);
    ::bbbb::zz2404 &lv = *(new (buf) ::bbbb::zz2404());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2404E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2404E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz2404E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz2404E");
    check_base_class_offset(lv, (::bbbb::yy404*), 0, "_ZN4bbbb6zz2404E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2404E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2404E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2404E(Test__ZN4bbbb6zz2404E, "_ZN4bbbb6zz2404E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy404E;
static Base_Class bases__ZN4bbbb6zz2404E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy404E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2404E = {  "_ZN4bbbb6zz2404E", // class name
  bases__ZN4bbbb6zz2404E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3404  : ::bbbb::yy404 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3404E) C1{ BC2{ BC3{ BC4{ FL}} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3404E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3404E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3404E, buf);
    ::bbbb::zz3404 &lv = *(new (buf) ::bbbb::zz3404());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3404E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3404E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz3404E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz3404E");
    check_base_class_offset(lv, (::bbbb::yy404*), 0, "_ZN4bbbb6zz3404E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3404E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3404E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3404E(Test__ZN4bbbb6zz3404E, "_ZN4bbbb6zz3404E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy404E;
static Base_Class bases__ZN4bbbb6zz3404E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy404E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3404E = {  "_ZN4bbbb6zz3404E", // class name
  bases__ZN4bbbb6zz3404E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4404  : ::bbbb::yy404 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4404E) C1{ BC2{ BC3{ BC4{ FL}} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4404E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4404E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4404E, buf);
    ::bbbb::zz4404 &lv = *(new (buf) ::bbbb::zz4404());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4404E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4404E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz4404E");
    check_base_class_offset(lv, (::bbbb::xx04*)(::bbbb::yy404*), 0, "_ZN4bbbb6zz4404E");
    check_base_class_offset(lv, (::bbbb::yy404*), 0, "_ZN4bbbb6zz4404E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4404E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4404E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4404E(Test__ZN4bbbb6zz4404E, "_ZN4bbbb6zz4404E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx04E;
extern Class_Descriptor cd__ZN4bbbb5yy404E;
static Base_Class bases__ZN4bbbb6zz4404E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx04E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy404E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4404E = {  "_ZN4bbbb6zz4404E", // class name
  bases__ZN4bbbb6zz4404E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx14  : ::bbbb::ww4 {
  char fb;
};
//SIG(-1 _ZN4bbbb4xx14E) C1{ BC2{ FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx14E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx14E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb4xx14E, buf);
    ::bbbb::xx14 &lv = *(new (buf) ::bbbb::xx14());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb4xx14E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb4xx14E)");
    check_base_class_offset(lv, (::bbbb::ww4*), 0, "_ZN4bbbb4xx14E");
    check_field_offset(lv, fb, 8, "_ZN4bbbb4xx14E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx14E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx14E(Test__ZN4bbbb4xx14E, "_ZN4bbbb4xx14E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
static Base_Class bases__ZN4bbbb4xx14E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx14E = {  "_ZN4bbbb4xx14E", // class name
  bases__ZN4bbbb4xx14E, 1,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy014  : ::bbbb::xx14 {
};
//SIG(-1 _ZN4bbbb5yy014E) C1{ BC2{ BC3{ FL} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy014E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy014E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy014E, buf);
    ::bbbb::yy014 &lv = *(new (buf) ::bbbb::yy014());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy014E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy014E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*), 0, "_ZN4bbbb5yy014E");
    check_base_class_offset(lv, (::bbbb::xx14*), 0, "_ZN4bbbb5yy014E");
    test_class_info(&lv, &cd__ZN4bbbb5yy014E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy014E(Test__ZN4bbbb5yy014E, "_ZN4bbbb5yy014E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
static Base_Class bases__ZN4bbbb5yy014E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy014E = {  "_ZN4bbbb5yy014E", // class name
  bases__ZN4bbbb5yy014E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0014  : ::bbbb::yy014 {
};
//SIG(1 _ZN4bbbb6zz0014E) C1{ BC2{ BC3{ BC4{ FL} Fc}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0014E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0014E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0014E, buf);
    ::bbbb::zz0014 &lv = *(new (buf) ::bbbb::zz0014());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0014E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0014E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz0014E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz0014E");
    check_base_class_offset(lv, (::bbbb::yy014*), 0, "_ZN4bbbb6zz0014E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0014E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0014E(Test__ZN4bbbb6zz0014E, "_ZN4bbbb6zz0014E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy014E;
static Base_Class bases__ZN4bbbb6zz0014E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy014E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0014E = {  "_ZN4bbbb6zz0014E", // class name
  bases__ZN4bbbb6zz0014E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1014  : ::bbbb::yy014 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1014E) C1{ BC2{ BC3{ BC4{ FL} Fc}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1014E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1014E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1014E, buf);
    ::bbbb::zz1014 &lv = *(new (buf) ::bbbb::zz1014());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1014E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1014E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz1014E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz1014E");
    check_base_class_offset(lv, (::bbbb::yy014*), 0, "_ZN4bbbb6zz1014E");
    check_field_offset(lv, fd, 9, "_ZN4bbbb6zz1014E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1014E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1014E(Test__ZN4bbbb6zz1014E, "_ZN4bbbb6zz1014E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy014E;
static Base_Class bases__ZN4bbbb6zz1014E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy014E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1014E = {  "_ZN4bbbb6zz1014E", // class name
  bases__ZN4bbbb6zz1014E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2014  : ::bbbb::yy014 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2014E) C1{ BC2{ BC3{ BC4{ FL} Fc}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2014E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2014E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2014E, buf);
    ::bbbb::zz2014 &lv = *(new (buf) ::bbbb::zz2014());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2014E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2014E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz2014E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz2014E");
    check_base_class_offset(lv, (::bbbb::yy014*), 0, "_ZN4bbbb6zz2014E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2014E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2014E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2014E(Test__ZN4bbbb6zz2014E, "_ZN4bbbb6zz2014E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy014E;
static Base_Class bases__ZN4bbbb6zz2014E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy014E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2014E = {  "_ZN4bbbb6zz2014E", // class name
  bases__ZN4bbbb6zz2014E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3014  : ::bbbb::yy014 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3014E) C1{ BC2{ BC3{ BC4{ FL} Fc}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3014E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3014E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3014E, buf);
    ::bbbb::zz3014 &lv = *(new (buf) ::bbbb::zz3014());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3014E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3014E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz3014E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz3014E");
    check_base_class_offset(lv, (::bbbb::yy014*), 0, "_ZN4bbbb6zz3014E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3014E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3014E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3014E(Test__ZN4bbbb6zz3014E, "_ZN4bbbb6zz3014E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy014E;
static Base_Class bases__ZN4bbbb6zz3014E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy014E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3014E = {  "_ZN4bbbb6zz3014E", // class name
  bases__ZN4bbbb6zz3014E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4014  : ::bbbb::yy014 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4014E) C1{ BC2{ BC3{ BC4{ FL} Fc}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4014E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4014E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4014E, buf);
    ::bbbb::zz4014 &lv = *(new (buf) ::bbbb::zz4014());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4014E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4014E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz4014E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy014*), 0, "_ZN4bbbb6zz4014E");
    check_base_class_offset(lv, (::bbbb::yy014*), 0, "_ZN4bbbb6zz4014E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4014E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4014E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4014E(Test__ZN4bbbb6zz4014E, "_ZN4bbbb6zz4014E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy014E;
static Base_Class bases__ZN4bbbb6zz4014E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy014E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4014E = {  "_ZN4bbbb6zz4014E", // class name
  bases__ZN4bbbb6zz4014E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy114  : ::bbbb::xx14 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy114E) C1{ BC2{ BC3{ FL} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy114E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy114E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy114E, buf);
    ::bbbb::yy114 &lv = *(new (buf) ::bbbb::yy114());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy114E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy114E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*), 0, "_ZN4bbbb5yy114E");
    check_base_class_offset(lv, (::bbbb::xx14*), 0, "_ZN4bbbb5yy114E");
    check_field_offset(lv, fc, 9, "_ZN4bbbb5yy114E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy114E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy114E(Test__ZN4bbbb5yy114E, "_ZN4bbbb5yy114E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
static Base_Class bases__ZN4bbbb5yy114E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy114E = {  "_ZN4bbbb5yy114E", // class name
  bases__ZN4bbbb5yy114E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0114  : ::bbbb::yy114 {
};
//SIG(1 _ZN4bbbb6zz0114E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0114E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0114E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0114E, buf);
    ::bbbb::zz0114 &lv = *(new (buf) ::bbbb::zz0114());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0114E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0114E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz0114E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz0114E");
    check_base_class_offset(lv, (::bbbb::yy114*), 0, "_ZN4bbbb6zz0114E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0114E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0114E(Test__ZN4bbbb6zz0114E, "_ZN4bbbb6zz0114E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy114E;
static Base_Class bases__ZN4bbbb6zz0114E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy114E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0114E = {  "_ZN4bbbb6zz0114E", // class name
  bases__ZN4bbbb6zz0114E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1114  : ::bbbb::yy114 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1114E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1114E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1114E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1114E, buf);
    ::bbbb::zz1114 &lv = *(new (buf) ::bbbb::zz1114());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1114E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1114E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz1114E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz1114E");
    check_base_class_offset(lv, (::bbbb::yy114*), 0, "_ZN4bbbb6zz1114E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz1114E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1114E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1114E(Test__ZN4bbbb6zz1114E, "_ZN4bbbb6zz1114E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy114E;
static Base_Class bases__ZN4bbbb6zz1114E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy114E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1114E = {  "_ZN4bbbb6zz1114E", // class name
  bases__ZN4bbbb6zz1114E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2114  : ::bbbb::yy114 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2114E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2114E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2114E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2114E, buf);
    ::bbbb::zz2114 &lv = *(new (buf) ::bbbb::zz2114());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2114E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2114E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz2114E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz2114E");
    check_base_class_offset(lv, (::bbbb::yy114*), 0, "_ZN4bbbb6zz2114E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2114E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2114E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2114E(Test__ZN4bbbb6zz2114E, "_ZN4bbbb6zz2114E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy114E;
static Base_Class bases__ZN4bbbb6zz2114E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy114E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2114E = {  "_ZN4bbbb6zz2114E", // class name
  bases__ZN4bbbb6zz2114E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3114  : ::bbbb::yy114 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3114E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3114E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3114E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3114E, buf);
    ::bbbb::zz3114 &lv = *(new (buf) ::bbbb::zz3114());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3114E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3114E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz3114E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz3114E");
    check_base_class_offset(lv, (::bbbb::yy114*), 0, "_ZN4bbbb6zz3114E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3114E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3114E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3114E(Test__ZN4bbbb6zz3114E, "_ZN4bbbb6zz3114E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy114E;
static Base_Class bases__ZN4bbbb6zz3114E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy114E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3114E = {  "_ZN4bbbb6zz3114E", // class name
  bases__ZN4bbbb6zz3114E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4114  : ::bbbb::yy114 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4114E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4114E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4114E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4114E, buf);
    ::bbbb::zz4114 &lv = *(new (buf) ::bbbb::zz4114());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4114E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4114E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz4114E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy114*), 0, "_ZN4bbbb6zz4114E");
    check_base_class_offset(lv, (::bbbb::yy114*), 0, "_ZN4bbbb6zz4114E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4114E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4114E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4114E(Test__ZN4bbbb6zz4114E, "_ZN4bbbb6zz4114E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy114E;
static Base_Class bases__ZN4bbbb6zz4114E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy114E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4114E = {  "_ZN4bbbb6zz4114E", // class name
  bases__ZN4bbbb6zz4114E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy214  : ::bbbb::xx14 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy214E) C1{ BC2{ BC3{ FL} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy214E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy214E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy214E, buf);
    ::bbbb::yy214 &lv = *(new (buf) ::bbbb::yy214());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy214E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy214E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*), 0, "_ZN4bbbb5yy214E");
    check_base_class_offset(lv, (::bbbb::xx14*), 0, "_ZN4bbbb5yy214E");
    check_field_offset(lv, fc, 10, "_ZN4bbbb5yy214E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy214E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy214E(Test__ZN4bbbb5yy214E, "_ZN4bbbb5yy214E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
static Base_Class bases__ZN4bbbb5yy214E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy214E = {  "_ZN4bbbb5yy214E", // class name
  bases__ZN4bbbb5yy214E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0214  : ::bbbb::yy214 {
};
//SIG(1 _ZN4bbbb6zz0214E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0214E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0214E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0214E, buf);
    ::bbbb::zz0214 &lv = *(new (buf) ::bbbb::zz0214());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0214E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0214E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz0214E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz0214E");
    check_base_class_offset(lv, (::bbbb::yy214*), 0, "_ZN4bbbb6zz0214E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0214E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0214E(Test__ZN4bbbb6zz0214E, "_ZN4bbbb6zz0214E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy214E;
static Base_Class bases__ZN4bbbb6zz0214E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy214E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0214E = {  "_ZN4bbbb6zz0214E", // class name
  bases__ZN4bbbb6zz0214E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1214  : ::bbbb::yy214 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1214E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1214E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1214E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz1214E, buf);
    ::bbbb::zz1214 &lv = *(new (buf) ::bbbb::zz1214());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1214E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1214E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz1214E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz1214E");
    check_base_class_offset(lv, (::bbbb::yy214*), 0, "_ZN4bbbb6zz1214E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1214E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1214E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1214E(Test__ZN4bbbb6zz1214E, "_ZN4bbbb6zz1214E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy214E;
static Base_Class bases__ZN4bbbb6zz1214E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy214E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1214E = {  "_ZN4bbbb6zz1214E", // class name
  bases__ZN4bbbb6zz1214E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2214  : ::bbbb::yy214 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2214E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2214E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2214E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz2214E, buf);
    ::bbbb::zz2214 &lv = *(new (buf) ::bbbb::zz2214());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2214E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2214E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz2214E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz2214E");
    check_base_class_offset(lv, (::bbbb::yy214*), 0, "_ZN4bbbb6zz2214E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2214E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2214E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2214E(Test__ZN4bbbb6zz2214E, "_ZN4bbbb6zz2214E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy214E;
static Base_Class bases__ZN4bbbb6zz2214E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy214E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2214E = {  "_ZN4bbbb6zz2214E", // class name
  bases__ZN4bbbb6zz2214E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3214  : ::bbbb::yy214 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3214E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3214E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3214E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3214E, buf);
    ::bbbb::zz3214 &lv = *(new (buf) ::bbbb::zz3214());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3214E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3214E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz3214E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz3214E");
    check_base_class_offset(lv, (::bbbb::yy214*), 0, "_ZN4bbbb6zz3214E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3214E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3214E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3214E(Test__ZN4bbbb6zz3214E, "_ZN4bbbb6zz3214E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy214E;
static Base_Class bases__ZN4bbbb6zz3214E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy214E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3214E = {  "_ZN4bbbb6zz3214E", // class name
  bases__ZN4bbbb6zz3214E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4214  : ::bbbb::yy214 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4214E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4214E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4214E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4214E, buf);
    ::bbbb::zz4214 &lv = *(new (buf) ::bbbb::zz4214());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4214E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4214E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz4214E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy214*), 0, "_ZN4bbbb6zz4214E");
    check_base_class_offset(lv, (::bbbb::yy214*), 0, "_ZN4bbbb6zz4214E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4214E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4214E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4214E(Test__ZN4bbbb6zz4214E, "_ZN4bbbb6zz4214E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy214E;
static Base_Class bases__ZN4bbbb6zz4214E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy214E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4214E = {  "_ZN4bbbb6zz4214E", // class name
  bases__ZN4bbbb6zz4214E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy314  : ::bbbb::xx14 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy314E) C1{ BC2{ BC3{ FL} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy314E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy314E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy314E, buf);
    ::bbbb::yy314 &lv = *(new (buf) ::bbbb::yy314());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy314E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy314E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*), 0, "_ZN4bbbb5yy314E");
    check_base_class_offset(lv, (::bbbb::xx14*), 0, "_ZN4bbbb5yy314E");
    check_field_offset(lv, fc, 12, "_ZN4bbbb5yy314E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy314E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy314E(Test__ZN4bbbb5yy314E, "_ZN4bbbb5yy314E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
static Base_Class bases__ZN4bbbb5yy314E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy314E = {  "_ZN4bbbb5yy314E", // class name
  bases__ZN4bbbb5yy314E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0314  : ::bbbb::yy314 {
};
//SIG(1 _ZN4bbbb6zz0314E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0314E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0314E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0314E, buf);
    ::bbbb::zz0314 &lv = *(new (buf) ::bbbb::zz0314());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0314E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0314E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz0314E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz0314E");
    check_base_class_offset(lv, (::bbbb::yy314*), 0, "_ZN4bbbb6zz0314E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0314E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0314E(Test__ZN4bbbb6zz0314E, "_ZN4bbbb6zz0314E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy314E;
static Base_Class bases__ZN4bbbb6zz0314E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy314E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0314E = {  "_ZN4bbbb6zz0314E", // class name
  bases__ZN4bbbb6zz0314E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1314  : ::bbbb::yy314 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1314E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1314E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1314E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1314E, buf);
    ::bbbb::zz1314 &lv = *(new (buf) ::bbbb::zz1314());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1314E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1314E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz1314E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz1314E");
    check_base_class_offset(lv, (::bbbb::yy314*), 0, "_ZN4bbbb6zz1314E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1314E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1314E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1314E(Test__ZN4bbbb6zz1314E, "_ZN4bbbb6zz1314E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy314E;
static Base_Class bases__ZN4bbbb6zz1314E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy314E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1314E = {  "_ZN4bbbb6zz1314E", // class name
  bases__ZN4bbbb6zz1314E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2314  : ::bbbb::yy314 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2314E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2314E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2314E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2314E, buf);
    ::bbbb::zz2314 &lv = *(new (buf) ::bbbb::zz2314());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2314E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2314E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz2314E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz2314E");
    check_base_class_offset(lv, (::bbbb::yy314*), 0, "_ZN4bbbb6zz2314E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2314E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2314E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2314E(Test__ZN4bbbb6zz2314E, "_ZN4bbbb6zz2314E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy314E;
static Base_Class bases__ZN4bbbb6zz2314E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy314E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2314E = {  "_ZN4bbbb6zz2314E", // class name
  bases__ZN4bbbb6zz2314E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3314  : ::bbbb::yy314 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3314E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3314E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3314E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3314E, buf);
    ::bbbb::zz3314 &lv = *(new (buf) ::bbbb::zz3314());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3314E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3314E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz3314E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz3314E");
    check_base_class_offset(lv, (::bbbb::yy314*), 0, "_ZN4bbbb6zz3314E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3314E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3314E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3314E(Test__ZN4bbbb6zz3314E, "_ZN4bbbb6zz3314E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy314E;
static Base_Class bases__ZN4bbbb6zz3314E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy314E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3314E = {  "_ZN4bbbb6zz3314E", // class name
  bases__ZN4bbbb6zz3314E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4314  : ::bbbb::yy314 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4314E) C1{ BC2{ BC3{ BC4{ FL} Fc} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4314E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4314E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4314E, buf);
    ::bbbb::zz4314 &lv = *(new (buf) ::bbbb::zz4314());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4314E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4314E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz4314E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy314*), 0, "_ZN4bbbb6zz4314E");
    check_base_class_offset(lv, (::bbbb::yy314*), 0, "_ZN4bbbb6zz4314E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4314E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4314E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4314E(Test__ZN4bbbb6zz4314E, "_ZN4bbbb6zz4314E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy314E;
static Base_Class bases__ZN4bbbb6zz4314E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy314E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4314E = {  "_ZN4bbbb6zz4314E", // class name
  bases__ZN4bbbb6zz4314E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy414  : ::bbbb::xx14 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy414E) C1{ BC2{ BC3{ FL} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy414E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy414E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb5yy414E, buf);
    ::bbbb::yy414 &lv = *(new (buf) ::bbbb::yy414());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb5yy414E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy414E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*), 0, "_ZN4bbbb5yy414E");
    check_base_class_offset(lv, (::bbbb::xx14*), 0, "_ZN4bbbb5yy414E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy414E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy414E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy414E(Test__ZN4bbbb5yy414E, "_ZN4bbbb5yy414E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
static Base_Class bases__ZN4bbbb5yy414E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy414E = {  "_ZN4bbbb5yy414E", // class name
  bases__ZN4bbbb5yy414E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0414  : ::bbbb::yy414 {
};
//SIG(1 _ZN4bbbb6zz0414E) C1{ BC2{ BC3{ BC4{ FL} Fc} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0414E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0414E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz0414E, buf);
    ::bbbb::zz0414 &lv = *(new (buf) ::bbbb::zz0414());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz0414E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0414E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz0414E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz0414E");
    check_base_class_offset(lv, (::bbbb::yy414*), 0, "_ZN4bbbb6zz0414E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0414E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0414E(Test__ZN4bbbb6zz0414E, "_ZN4bbbb6zz0414E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy414E;
static Base_Class bases__ZN4bbbb6zz0414E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy414E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0414E = {  "_ZN4bbbb6zz0414E", // class name
  bases__ZN4bbbb6zz0414E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1414  : ::bbbb::yy414 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1414E) C1{ BC2{ BC3{ BC4{ FL} Fc} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1414E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1414E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz1414E, buf);
    ::bbbb::zz1414 &lv = *(new (buf) ::bbbb::zz1414());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz1414E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1414E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz1414E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz1414E");
    check_base_class_offset(lv, (::bbbb::yy414*), 0, "_ZN4bbbb6zz1414E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz1414E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1414E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1414E(Test__ZN4bbbb6zz1414E, "_ZN4bbbb6zz1414E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy414E;
static Base_Class bases__ZN4bbbb6zz1414E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy414E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1414E = {  "_ZN4bbbb6zz1414E", // class name
  bases__ZN4bbbb6zz1414E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2414  : ::bbbb::yy414 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2414E) C1{ BC2{ BC3{ BC4{ FL} Fc} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2414E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2414E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz2414E, buf);
    ::bbbb::zz2414 &lv = *(new (buf) ::bbbb::zz2414());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz2414E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2414E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz2414E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz2414E");
    check_base_class_offset(lv, (::bbbb::yy414*), 0, "_ZN4bbbb6zz2414E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz2414E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2414E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2414E(Test__ZN4bbbb6zz2414E, "_ZN4bbbb6zz2414E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy414E;
static Base_Class bases__ZN4bbbb6zz2414E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy414E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2414E = {  "_ZN4bbbb6zz2414E", // class name
  bases__ZN4bbbb6zz2414E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3414  : ::bbbb::yy414 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3414E) C1{ BC2{ BC3{ BC4{ FL} Fc} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3414E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3414E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz3414E, buf);
    ::bbbb::zz3414 &lv = *(new (buf) ::bbbb::zz3414());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz3414E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3414E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz3414E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz3414E");
    check_base_class_offset(lv, (::bbbb::yy414*), 0, "_ZN4bbbb6zz3414E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz3414E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3414E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3414E(Test__ZN4bbbb6zz3414E, "_ZN4bbbb6zz3414E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy414E;
static Base_Class bases__ZN4bbbb6zz3414E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy414E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3414E = {  "_ZN4bbbb6zz3414E", // class name
  bases__ZN4bbbb6zz3414E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4414  : ::bbbb::yy414 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4414E) C1{ BC2{ BC3{ BC4{ FL} Fc} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4414E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4414E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz4414E, buf);
    ::bbbb::zz4414 &lv = *(new (buf) ::bbbb::zz4414());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz4414E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4414E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz4414E");
    check_base_class_offset(lv, (::bbbb::xx14*)(::bbbb::yy414*), 0, "_ZN4bbbb6zz4414E");
    check_base_class_offset(lv, (::bbbb::yy414*), 0, "_ZN4bbbb6zz4414E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz4414E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4414E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4414E(Test__ZN4bbbb6zz4414E, "_ZN4bbbb6zz4414E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx14E;
extern Class_Descriptor cd__ZN4bbbb5yy414E;
static Base_Class bases__ZN4bbbb6zz4414E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx14E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy414E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4414E = {  "_ZN4bbbb6zz4414E", // class name
  bases__ZN4bbbb6zz4414E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx24  : ::bbbb::ww4 {
  short fb;
};
//SIG(-1 _ZN4bbbb4xx24E) C1{ BC2{ FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx24E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx24E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb4xx24E, buf);
    ::bbbb::xx24 &lv = *(new (buf) ::bbbb::xx24());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb4xx24E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb4xx24E)");
    check_base_class_offset(lv, (::bbbb::ww4*), 0, "_ZN4bbbb4xx24E");
    check_field_offset(lv, fb, 8, "_ZN4bbbb4xx24E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx24E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx24E(Test__ZN4bbbb4xx24E, "_ZN4bbbb4xx24E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
static Base_Class bases__ZN4bbbb4xx24E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx24E = {  "_ZN4bbbb4xx24E", // class name
  bases__ZN4bbbb4xx24E, 1,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy024  : ::bbbb::xx24 {
};
//SIG(-1 _ZN4bbbb5yy024E) C1{ BC2{ BC3{ FL} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy024E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy024E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy024E, buf);
    ::bbbb::yy024 &lv = *(new (buf) ::bbbb::yy024());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy024E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy024E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*), 0, "_ZN4bbbb5yy024E");
    check_base_class_offset(lv, (::bbbb::xx24*), 0, "_ZN4bbbb5yy024E");
    test_class_info(&lv, &cd__ZN4bbbb5yy024E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy024E(Test__ZN4bbbb5yy024E, "_ZN4bbbb5yy024E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
static Base_Class bases__ZN4bbbb5yy024E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy024E = {  "_ZN4bbbb5yy024E", // class name
  bases__ZN4bbbb5yy024E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0024  : ::bbbb::yy024 {
};
//SIG(1 _ZN4bbbb6zz0024E) C1{ BC2{ BC3{ BC4{ FL} Fs}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0024E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0024E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0024E, buf);
    ::bbbb::zz0024 &lv = *(new (buf) ::bbbb::zz0024());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0024E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0024E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz0024E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz0024E");
    check_base_class_offset(lv, (::bbbb::yy024*), 0, "_ZN4bbbb6zz0024E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0024E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0024E(Test__ZN4bbbb6zz0024E, "_ZN4bbbb6zz0024E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy024E;
static Base_Class bases__ZN4bbbb6zz0024E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy024E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0024E = {  "_ZN4bbbb6zz0024E", // class name
  bases__ZN4bbbb6zz0024E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1024  : ::bbbb::yy024 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1024E) C1{ BC2{ BC3{ BC4{ FL} Fs}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1024E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1024E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1024E, buf);
    ::bbbb::zz1024 &lv = *(new (buf) ::bbbb::zz1024());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1024E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1024E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz1024E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz1024E");
    check_base_class_offset(lv, (::bbbb::yy024*), 0, "_ZN4bbbb6zz1024E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz1024E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1024E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1024E(Test__ZN4bbbb6zz1024E, "_ZN4bbbb6zz1024E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy024E;
static Base_Class bases__ZN4bbbb6zz1024E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy024E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1024E = {  "_ZN4bbbb6zz1024E", // class name
  bases__ZN4bbbb6zz1024E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2024  : ::bbbb::yy024 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2024E) C1{ BC2{ BC3{ BC4{ FL} Fs}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2024E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2024E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz2024E, buf);
    ::bbbb::zz2024 &lv = *(new (buf) ::bbbb::zz2024());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz2024E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2024E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz2024E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz2024E");
    check_base_class_offset(lv, (::bbbb::yy024*), 0, "_ZN4bbbb6zz2024E");
    check_field_offset(lv, fd, 10, "_ZN4bbbb6zz2024E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2024E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2024E(Test__ZN4bbbb6zz2024E, "_ZN4bbbb6zz2024E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy024E;
static Base_Class bases__ZN4bbbb6zz2024E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy024E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2024E = {  "_ZN4bbbb6zz2024E", // class name
  bases__ZN4bbbb6zz2024E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3024  : ::bbbb::yy024 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3024E) C1{ BC2{ BC3{ BC4{ FL} Fs}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3024E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3024E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3024E, buf);
    ::bbbb::zz3024 &lv = *(new (buf) ::bbbb::zz3024());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3024E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3024E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz3024E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz3024E");
    check_base_class_offset(lv, (::bbbb::yy024*), 0, "_ZN4bbbb6zz3024E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3024E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3024E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3024E(Test__ZN4bbbb6zz3024E, "_ZN4bbbb6zz3024E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy024E;
static Base_Class bases__ZN4bbbb6zz3024E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy024E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3024E = {  "_ZN4bbbb6zz3024E", // class name
  bases__ZN4bbbb6zz3024E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4024  : ::bbbb::yy024 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4024E) C1{ BC2{ BC3{ BC4{ FL} Fs}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4024E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4024E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4024E, buf);
    ::bbbb::zz4024 &lv = *(new (buf) ::bbbb::zz4024());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4024E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4024E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz4024E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy024*), 0, "_ZN4bbbb6zz4024E");
    check_base_class_offset(lv, (::bbbb::yy024*), 0, "_ZN4bbbb6zz4024E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4024E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4024E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4024E(Test__ZN4bbbb6zz4024E, "_ZN4bbbb6zz4024E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy024E;
static Base_Class bases__ZN4bbbb6zz4024E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy024E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4024E = {  "_ZN4bbbb6zz4024E", // class name
  bases__ZN4bbbb6zz4024E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy124  : ::bbbb::xx24 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy124E) C1{ BC2{ BC3{ FL} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy124E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy124E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy124E, buf);
    ::bbbb::yy124 &lv = *(new (buf) ::bbbb::yy124());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy124E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy124E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*), 0, "_ZN4bbbb5yy124E");
    check_base_class_offset(lv, (::bbbb::xx24*), 0, "_ZN4bbbb5yy124E");
    check_field_offset(lv, fc, 10, "_ZN4bbbb5yy124E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy124E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy124E(Test__ZN4bbbb5yy124E, "_ZN4bbbb5yy124E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
static Base_Class bases__ZN4bbbb5yy124E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy124E = {  "_ZN4bbbb5yy124E", // class name
  bases__ZN4bbbb5yy124E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0124  : ::bbbb::yy124 {
};
//SIG(1 _ZN4bbbb6zz0124E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0124E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0124E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0124E, buf);
    ::bbbb::zz0124 &lv = *(new (buf) ::bbbb::zz0124());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0124E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0124E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz0124E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz0124E");
    check_base_class_offset(lv, (::bbbb::yy124*), 0, "_ZN4bbbb6zz0124E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0124E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0124E(Test__ZN4bbbb6zz0124E, "_ZN4bbbb6zz0124E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy124E;
static Base_Class bases__ZN4bbbb6zz0124E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy124E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0124E = {  "_ZN4bbbb6zz0124E", // class name
  bases__ZN4bbbb6zz0124E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1124  : ::bbbb::yy124 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1124E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1124E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1124E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz1124E, buf);
    ::bbbb::zz1124 &lv = *(new (buf) ::bbbb::zz1124());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz1124E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1124E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz1124E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz1124E");
    check_base_class_offset(lv, (::bbbb::yy124*), 0, "_ZN4bbbb6zz1124E");
    check_field_offset(lv, fd, 11, "_ZN4bbbb6zz1124E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1124E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1124E(Test__ZN4bbbb6zz1124E, "_ZN4bbbb6zz1124E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy124E;
static Base_Class bases__ZN4bbbb6zz1124E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy124E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1124E = {  "_ZN4bbbb6zz1124E", // class name
  bases__ZN4bbbb6zz1124E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2124  : ::bbbb::yy124 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2124E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2124E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2124E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz2124E, buf);
    ::bbbb::zz2124 &lv = *(new (buf) ::bbbb::zz2124());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2124E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2124E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz2124E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz2124E");
    check_base_class_offset(lv, (::bbbb::yy124*), 0, "_ZN4bbbb6zz2124E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2124E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2124E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2124E(Test__ZN4bbbb6zz2124E, "_ZN4bbbb6zz2124E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy124E;
static Base_Class bases__ZN4bbbb6zz2124E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy124E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2124E = {  "_ZN4bbbb6zz2124E", // class name
  bases__ZN4bbbb6zz2124E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3124  : ::bbbb::yy124 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3124E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3124E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3124E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3124E, buf);
    ::bbbb::zz3124 &lv = *(new (buf) ::bbbb::zz3124());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3124E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3124E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz3124E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz3124E");
    check_base_class_offset(lv, (::bbbb::yy124*), 0, "_ZN4bbbb6zz3124E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3124E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3124E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3124E(Test__ZN4bbbb6zz3124E, "_ZN4bbbb6zz3124E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy124E;
static Base_Class bases__ZN4bbbb6zz3124E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy124E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3124E = {  "_ZN4bbbb6zz3124E", // class name
  bases__ZN4bbbb6zz3124E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4124  : ::bbbb::yy124 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4124E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4124E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4124E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4124E, buf);
    ::bbbb::zz4124 &lv = *(new (buf) ::bbbb::zz4124());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4124E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4124E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz4124E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy124*), 0, "_ZN4bbbb6zz4124E");
    check_base_class_offset(lv, (::bbbb::yy124*), 0, "_ZN4bbbb6zz4124E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4124E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4124E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4124E(Test__ZN4bbbb6zz4124E, "_ZN4bbbb6zz4124E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy124E;
static Base_Class bases__ZN4bbbb6zz4124E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy124E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4124E = {  "_ZN4bbbb6zz4124E", // class name
  bases__ZN4bbbb6zz4124E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy224  : ::bbbb::xx24 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy224E) C1{ BC2{ BC3{ FL} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy224E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy224E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy224E, buf);
    ::bbbb::yy224 &lv = *(new (buf) ::bbbb::yy224());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy224E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy224E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*), 0, "_ZN4bbbb5yy224E");
    check_base_class_offset(lv, (::bbbb::xx24*), 0, "_ZN4bbbb5yy224E");
    check_field_offset(lv, fc, 10, "_ZN4bbbb5yy224E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy224E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy224E(Test__ZN4bbbb5yy224E, "_ZN4bbbb5yy224E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
static Base_Class bases__ZN4bbbb5yy224E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy224E = {  "_ZN4bbbb5yy224E", // class name
  bases__ZN4bbbb5yy224E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0224  : ::bbbb::yy224 {
};
//SIG(1 _ZN4bbbb6zz0224E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0224E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0224E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0224E, buf);
    ::bbbb::zz0224 &lv = *(new (buf) ::bbbb::zz0224());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0224E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0224E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz0224E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz0224E");
    check_base_class_offset(lv, (::bbbb::yy224*), 0, "_ZN4bbbb6zz0224E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0224E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0224E(Test__ZN4bbbb6zz0224E, "_ZN4bbbb6zz0224E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy224E;
static Base_Class bases__ZN4bbbb6zz0224E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy224E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0224E = {  "_ZN4bbbb6zz0224E", // class name
  bases__ZN4bbbb6zz0224E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1224  : ::bbbb::yy224 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1224E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1224E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1224E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz1224E, buf);
    ::bbbb::zz1224 &lv = *(new (buf) ::bbbb::zz1224());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1224E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1224E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz1224E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz1224E");
    check_base_class_offset(lv, (::bbbb::yy224*), 0, "_ZN4bbbb6zz1224E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1224E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1224E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1224E(Test__ZN4bbbb6zz1224E, "_ZN4bbbb6zz1224E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy224E;
static Base_Class bases__ZN4bbbb6zz1224E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy224E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1224E = {  "_ZN4bbbb6zz1224E", // class name
  bases__ZN4bbbb6zz1224E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2224  : ::bbbb::yy224 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2224E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2224E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2224E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz2224E, buf);
    ::bbbb::zz2224 &lv = *(new (buf) ::bbbb::zz2224());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2224E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2224E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz2224E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz2224E");
    check_base_class_offset(lv, (::bbbb::yy224*), 0, "_ZN4bbbb6zz2224E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2224E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2224E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2224E(Test__ZN4bbbb6zz2224E, "_ZN4bbbb6zz2224E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy224E;
static Base_Class bases__ZN4bbbb6zz2224E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy224E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2224E = {  "_ZN4bbbb6zz2224E", // class name
  bases__ZN4bbbb6zz2224E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3224  : ::bbbb::yy224 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3224E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3224E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3224E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3224E, buf);
    ::bbbb::zz3224 &lv = *(new (buf) ::bbbb::zz3224());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3224E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3224E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz3224E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz3224E");
    check_base_class_offset(lv, (::bbbb::yy224*), 0, "_ZN4bbbb6zz3224E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3224E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3224E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3224E(Test__ZN4bbbb6zz3224E, "_ZN4bbbb6zz3224E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy224E;
static Base_Class bases__ZN4bbbb6zz3224E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy224E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3224E = {  "_ZN4bbbb6zz3224E", // class name
  bases__ZN4bbbb6zz3224E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4224  : ::bbbb::yy224 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4224E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4224E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4224E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4224E, buf);
    ::bbbb::zz4224 &lv = *(new (buf) ::bbbb::zz4224());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4224E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4224E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz4224E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy224*), 0, "_ZN4bbbb6zz4224E");
    check_base_class_offset(lv, (::bbbb::yy224*), 0, "_ZN4bbbb6zz4224E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4224E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4224E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4224E(Test__ZN4bbbb6zz4224E, "_ZN4bbbb6zz4224E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy224E;
static Base_Class bases__ZN4bbbb6zz4224E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy224E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4224E = {  "_ZN4bbbb6zz4224E", // class name
  bases__ZN4bbbb6zz4224E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy324  : ::bbbb::xx24 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy324E) C1{ BC2{ BC3{ FL} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy324E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy324E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy324E, buf);
    ::bbbb::yy324 &lv = *(new (buf) ::bbbb::yy324());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy324E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy324E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*), 0, "_ZN4bbbb5yy324E");
    check_base_class_offset(lv, (::bbbb::xx24*), 0, "_ZN4bbbb5yy324E");
    check_field_offset(lv, fc, 12, "_ZN4bbbb5yy324E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy324E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy324E(Test__ZN4bbbb5yy324E, "_ZN4bbbb5yy324E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
static Base_Class bases__ZN4bbbb5yy324E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy324E = {  "_ZN4bbbb5yy324E", // class name
  bases__ZN4bbbb5yy324E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0324  : ::bbbb::yy324 {
};
//SIG(1 _ZN4bbbb6zz0324E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0324E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0324E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0324E, buf);
    ::bbbb::zz0324 &lv = *(new (buf) ::bbbb::zz0324());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0324E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0324E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz0324E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz0324E");
    check_base_class_offset(lv, (::bbbb::yy324*), 0, "_ZN4bbbb6zz0324E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0324E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0324E(Test__ZN4bbbb6zz0324E, "_ZN4bbbb6zz0324E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy324E;
static Base_Class bases__ZN4bbbb6zz0324E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy324E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0324E = {  "_ZN4bbbb6zz0324E", // class name
  bases__ZN4bbbb6zz0324E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1324  : ::bbbb::yy324 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1324E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1324E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1324E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1324E, buf);
    ::bbbb::zz1324 &lv = *(new (buf) ::bbbb::zz1324());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1324E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1324E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz1324E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz1324E");
    check_base_class_offset(lv, (::bbbb::yy324*), 0, "_ZN4bbbb6zz1324E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1324E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1324E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1324E(Test__ZN4bbbb6zz1324E, "_ZN4bbbb6zz1324E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy324E;
static Base_Class bases__ZN4bbbb6zz1324E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy324E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1324E = {  "_ZN4bbbb6zz1324E", // class name
  bases__ZN4bbbb6zz1324E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2324  : ::bbbb::yy324 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2324E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2324E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2324E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2324E, buf);
    ::bbbb::zz2324 &lv = *(new (buf) ::bbbb::zz2324());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2324E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2324E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz2324E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz2324E");
    check_base_class_offset(lv, (::bbbb::yy324*), 0, "_ZN4bbbb6zz2324E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2324E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2324E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2324E(Test__ZN4bbbb6zz2324E, "_ZN4bbbb6zz2324E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy324E;
static Base_Class bases__ZN4bbbb6zz2324E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy324E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2324E = {  "_ZN4bbbb6zz2324E", // class name
  bases__ZN4bbbb6zz2324E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3324  : ::bbbb::yy324 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3324E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3324E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3324E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3324E, buf);
    ::bbbb::zz3324 &lv = *(new (buf) ::bbbb::zz3324());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3324E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3324E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz3324E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz3324E");
    check_base_class_offset(lv, (::bbbb::yy324*), 0, "_ZN4bbbb6zz3324E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3324E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3324E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3324E(Test__ZN4bbbb6zz3324E, "_ZN4bbbb6zz3324E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy324E;
static Base_Class bases__ZN4bbbb6zz3324E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy324E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3324E = {  "_ZN4bbbb6zz3324E", // class name
  bases__ZN4bbbb6zz3324E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4324  : ::bbbb::yy324 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4324E) C1{ BC2{ BC3{ BC4{ FL} Fs} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4324E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4324E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4324E, buf);
    ::bbbb::zz4324 &lv = *(new (buf) ::bbbb::zz4324());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4324E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4324E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz4324E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy324*), 0, "_ZN4bbbb6zz4324E");
    check_base_class_offset(lv, (::bbbb::yy324*), 0, "_ZN4bbbb6zz4324E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4324E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4324E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4324E(Test__ZN4bbbb6zz4324E, "_ZN4bbbb6zz4324E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy324E;
static Base_Class bases__ZN4bbbb6zz4324E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy324E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4324E = {  "_ZN4bbbb6zz4324E", // class name
  bases__ZN4bbbb6zz4324E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy424  : ::bbbb::xx24 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy424E) C1{ BC2{ BC3{ FL} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy424E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy424E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb5yy424E, buf);
    ::bbbb::yy424 &lv = *(new (buf) ::bbbb::yy424());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb5yy424E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy424E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*), 0, "_ZN4bbbb5yy424E");
    check_base_class_offset(lv, (::bbbb::xx24*), 0, "_ZN4bbbb5yy424E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy424E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy424E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy424E(Test__ZN4bbbb5yy424E, "_ZN4bbbb5yy424E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
static Base_Class bases__ZN4bbbb5yy424E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy424E = {  "_ZN4bbbb5yy424E", // class name
  bases__ZN4bbbb5yy424E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0424  : ::bbbb::yy424 {
};
//SIG(1 _ZN4bbbb6zz0424E) C1{ BC2{ BC3{ BC4{ FL} Fs} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0424E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0424E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz0424E, buf);
    ::bbbb::zz0424 &lv = *(new (buf) ::bbbb::zz0424());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz0424E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0424E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz0424E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz0424E");
    check_base_class_offset(lv, (::bbbb::yy424*), 0, "_ZN4bbbb6zz0424E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0424E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0424E(Test__ZN4bbbb6zz0424E, "_ZN4bbbb6zz0424E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy424E;
static Base_Class bases__ZN4bbbb6zz0424E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy424E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0424E = {  "_ZN4bbbb6zz0424E", // class name
  bases__ZN4bbbb6zz0424E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1424  : ::bbbb::yy424 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1424E) C1{ BC2{ BC3{ BC4{ FL} Fs} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1424E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1424E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz1424E, buf);
    ::bbbb::zz1424 &lv = *(new (buf) ::bbbb::zz1424());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz1424E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1424E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz1424E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz1424E");
    check_base_class_offset(lv, (::bbbb::yy424*), 0, "_ZN4bbbb6zz1424E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz1424E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1424E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1424E(Test__ZN4bbbb6zz1424E, "_ZN4bbbb6zz1424E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy424E;
static Base_Class bases__ZN4bbbb6zz1424E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy424E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1424E = {  "_ZN4bbbb6zz1424E", // class name
  bases__ZN4bbbb6zz1424E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2424  : ::bbbb::yy424 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2424E) C1{ BC2{ BC3{ BC4{ FL} Fs} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2424E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2424E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz2424E, buf);
    ::bbbb::zz2424 &lv = *(new (buf) ::bbbb::zz2424());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz2424E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2424E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz2424E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz2424E");
    check_base_class_offset(lv, (::bbbb::yy424*), 0, "_ZN4bbbb6zz2424E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz2424E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2424E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2424E(Test__ZN4bbbb6zz2424E, "_ZN4bbbb6zz2424E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy424E;
static Base_Class bases__ZN4bbbb6zz2424E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy424E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2424E = {  "_ZN4bbbb6zz2424E", // class name
  bases__ZN4bbbb6zz2424E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3424  : ::bbbb::yy424 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3424E) C1{ BC2{ BC3{ BC4{ FL} Fs} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3424E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3424E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz3424E, buf);
    ::bbbb::zz3424 &lv = *(new (buf) ::bbbb::zz3424());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz3424E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3424E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz3424E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz3424E");
    check_base_class_offset(lv, (::bbbb::yy424*), 0, "_ZN4bbbb6zz3424E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz3424E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3424E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3424E(Test__ZN4bbbb6zz3424E, "_ZN4bbbb6zz3424E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy424E;
static Base_Class bases__ZN4bbbb6zz3424E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy424E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3424E = {  "_ZN4bbbb6zz3424E", // class name
  bases__ZN4bbbb6zz3424E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4424  : ::bbbb::yy424 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4424E) C1{ BC2{ BC3{ BC4{ FL} Fs} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4424E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4424E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz4424E, buf);
    ::bbbb::zz4424 &lv = *(new (buf) ::bbbb::zz4424());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz4424E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4424E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz4424E");
    check_base_class_offset(lv, (::bbbb::xx24*)(::bbbb::yy424*), 0, "_ZN4bbbb6zz4424E");
    check_base_class_offset(lv, (::bbbb::yy424*), 0, "_ZN4bbbb6zz4424E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz4424E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4424E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4424E(Test__ZN4bbbb6zz4424E, "_ZN4bbbb6zz4424E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx24E;
extern Class_Descriptor cd__ZN4bbbb5yy424E;
static Base_Class bases__ZN4bbbb6zz4424E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx24E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy424E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4424E = {  "_ZN4bbbb6zz4424E", // class name
  bases__ZN4bbbb6zz4424E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx34  : ::bbbb::ww4 {
  int fb;
};
//SIG(-1 _ZN4bbbb4xx34E) C1{ BC2{ FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx34E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx34E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb4xx34E, buf);
    ::bbbb::xx34 &lv = *(new (buf) ::bbbb::xx34());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb4xx34E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb4xx34E)");
    check_base_class_offset(lv, (::bbbb::ww4*), 0, "_ZN4bbbb4xx34E");
    check_field_offset(lv, fb, 8, "_ZN4bbbb4xx34E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx34E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx34E(Test__ZN4bbbb4xx34E, "_ZN4bbbb4xx34E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
static Base_Class bases__ZN4bbbb4xx34E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx34E = {  "_ZN4bbbb4xx34E", // class name
  bases__ZN4bbbb4xx34E, 1,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy034  : ::bbbb::xx34 {
};
//SIG(-1 _ZN4bbbb5yy034E) C1{ BC2{ BC3{ FL} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy034E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy034E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb5yy034E, buf);
    ::bbbb::yy034 &lv = *(new (buf) ::bbbb::yy034());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb5yy034E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy034E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*), 0, "_ZN4bbbb5yy034E");
    check_base_class_offset(lv, (::bbbb::xx34*), 0, "_ZN4bbbb5yy034E");
    test_class_info(&lv, &cd__ZN4bbbb5yy034E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy034E(Test__ZN4bbbb5yy034E, "_ZN4bbbb5yy034E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
static Base_Class bases__ZN4bbbb5yy034E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy034E = {  "_ZN4bbbb5yy034E", // class name
  bases__ZN4bbbb5yy034E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0034  : ::bbbb::yy034 {
};
//SIG(1 _ZN4bbbb6zz0034E) C1{ BC2{ BC3{ BC4{ FL} Fi}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0034E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0034E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,4)];
    init_test(&cd__ZN4bbbb6zz0034E, buf);
    ::bbbb::zz0034 &lv = *(new (buf) ::bbbb::zz0034());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(_ZN4bbbb6zz0034E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0034E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz0034E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz0034E");
    check_base_class_offset(lv, (::bbbb::yy034*), 0, "_ZN4bbbb6zz0034E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0034E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0034E(Test__ZN4bbbb6zz0034E, "_ZN4bbbb6zz0034E", ABISELECT(16,12));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy034E;
static Base_Class bases__ZN4bbbb6zz0034E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy034E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0034E = {  "_ZN4bbbb6zz0034E", // class name
  bases__ZN4bbbb6zz0034E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(16,12), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1034  : ::bbbb::yy034 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1034E) C1{ BC2{ BC3{ BC4{ FL} Fi}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1034E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1034E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz1034E, buf);
    ::bbbb::zz1034 &lv = *(new (buf) ::bbbb::zz1034());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1034E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1034E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz1034E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz1034E");
    check_base_class_offset(lv, (::bbbb::yy034*), 0, "_ZN4bbbb6zz1034E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz1034E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1034E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1034E(Test__ZN4bbbb6zz1034E, "_ZN4bbbb6zz1034E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy034E;
static Base_Class bases__ZN4bbbb6zz1034E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy034E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1034E = {  "_ZN4bbbb6zz1034E", // class name
  bases__ZN4bbbb6zz1034E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2034  : ::bbbb::yy034 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2034E) C1{ BC2{ BC3{ BC4{ FL} Fi}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2034E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2034E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz2034E, buf);
    ::bbbb::zz2034 &lv = *(new (buf) ::bbbb::zz2034());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2034E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2034E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz2034E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz2034E");
    check_base_class_offset(lv, (::bbbb::yy034*), 0, "_ZN4bbbb6zz2034E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz2034E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2034E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2034E(Test__ZN4bbbb6zz2034E, "_ZN4bbbb6zz2034E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy034E;
static Base_Class bases__ZN4bbbb6zz2034E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy034E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2034E = {  "_ZN4bbbb6zz2034E", // class name
  bases__ZN4bbbb6zz2034E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3034  : ::bbbb::yy034 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3034E) C1{ BC2{ BC3{ BC4{ FL} Fi}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3034E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3034E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz3034E, buf);
    ::bbbb::zz3034 &lv = *(new (buf) ::bbbb::zz3034());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz3034E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3034E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz3034E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz3034E");
    check_base_class_offset(lv, (::bbbb::yy034*), 0, "_ZN4bbbb6zz3034E");
    check_field_offset(lv, fd, 12, "_ZN4bbbb6zz3034E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3034E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3034E(Test__ZN4bbbb6zz3034E, "_ZN4bbbb6zz3034E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy034E;
static Base_Class bases__ZN4bbbb6zz3034E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy034E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3034E = {  "_ZN4bbbb6zz3034E", // class name
  bases__ZN4bbbb6zz3034E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4034  : ::bbbb::yy034 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4034E) C1{ BC2{ BC3{ BC4{ FL} Fi}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4034E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4034E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz4034E, buf);
    ::bbbb::zz4034 &lv = *(new (buf) ::bbbb::zz4034());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz4034E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4034E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz4034E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy034*), 0, "_ZN4bbbb6zz4034E");
    check_base_class_offset(lv, (::bbbb::yy034*), 0, "_ZN4bbbb6zz4034E");
    check_field_offset(lv, fd, ABISELECT(16,12), "_ZN4bbbb6zz4034E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4034E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4034E(Test__ZN4bbbb6zz4034E, "_ZN4bbbb6zz4034E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy034E;
static Base_Class bases__ZN4bbbb6zz4034E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy034E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4034E = {  "_ZN4bbbb6zz4034E", // class name
  bases__ZN4bbbb6zz4034E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy134  : ::bbbb::xx34 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy134E) C1{ BC2{ BC3{ FL} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy134E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy134E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy134E, buf);
    ::bbbb::yy134 &lv = *(new (buf) ::bbbb::yy134());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy134E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy134E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*), 0, "_ZN4bbbb5yy134E");
    check_base_class_offset(lv, (::bbbb::xx34*), 0, "_ZN4bbbb5yy134E");
    check_field_offset(lv, fc, 12, "_ZN4bbbb5yy134E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy134E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy134E(Test__ZN4bbbb5yy134E, "_ZN4bbbb5yy134E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
static Base_Class bases__ZN4bbbb5yy134E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy134E = {  "_ZN4bbbb5yy134E", // class name
  bases__ZN4bbbb5yy134E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0134  : ::bbbb::yy134 {
};
//SIG(1 _ZN4bbbb6zz0134E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0134E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0134E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0134E, buf);
    ::bbbb::zz0134 &lv = *(new (buf) ::bbbb::zz0134());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0134E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0134E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz0134E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz0134E");
    check_base_class_offset(lv, (::bbbb::yy134*), 0, "_ZN4bbbb6zz0134E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0134E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0134E(Test__ZN4bbbb6zz0134E, "_ZN4bbbb6zz0134E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy134E;
static Base_Class bases__ZN4bbbb6zz0134E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy134E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0134E = {  "_ZN4bbbb6zz0134E", // class name
  bases__ZN4bbbb6zz0134E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1134  : ::bbbb::yy134 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1134E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1134E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1134E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz1134E, buf);
    ::bbbb::zz1134 &lv = *(new (buf) ::bbbb::zz1134());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1134E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1134E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz1134E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz1134E");
    check_base_class_offset(lv, (::bbbb::yy134*), 0, "_ZN4bbbb6zz1134E");
    check_field_offset(lv, fd, 13, "_ZN4bbbb6zz1134E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1134E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1134E(Test__ZN4bbbb6zz1134E, "_ZN4bbbb6zz1134E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy134E;
static Base_Class bases__ZN4bbbb6zz1134E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy134E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1134E = {  "_ZN4bbbb6zz1134E", // class name
  bases__ZN4bbbb6zz1134E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2134  : ::bbbb::yy134 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2134E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2134E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2134E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz2134E, buf);
    ::bbbb::zz2134 &lv = *(new (buf) ::bbbb::zz2134());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2134E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2134E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz2134E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz2134E");
    check_base_class_offset(lv, (::bbbb::yy134*), 0, "_ZN4bbbb6zz2134E");
    check_field_offset(lv, fd, 14, "_ZN4bbbb6zz2134E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2134E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2134E(Test__ZN4bbbb6zz2134E, "_ZN4bbbb6zz2134E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy134E;
static Base_Class bases__ZN4bbbb6zz2134E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy134E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2134E = {  "_ZN4bbbb6zz2134E", // class name
  bases__ZN4bbbb6zz2134E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3134  : ::bbbb::yy134 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3134E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3134E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3134E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3134E, buf);
    ::bbbb::zz3134 &lv = *(new (buf) ::bbbb::zz3134());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3134E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3134E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz3134E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz3134E");
    check_base_class_offset(lv, (::bbbb::yy134*), 0, "_ZN4bbbb6zz3134E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3134E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3134E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3134E(Test__ZN4bbbb6zz3134E, "_ZN4bbbb6zz3134E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy134E;
static Base_Class bases__ZN4bbbb6zz3134E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy134E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3134E = {  "_ZN4bbbb6zz3134E", // class name
  bases__ZN4bbbb6zz3134E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4134  : ::bbbb::yy134 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4134E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4134E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4134E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4134E, buf);
    ::bbbb::zz4134 &lv = *(new (buf) ::bbbb::zz4134());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4134E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4134E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz4134E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy134*), 0, "_ZN4bbbb6zz4134E");
    check_base_class_offset(lv, (::bbbb::yy134*), 0, "_ZN4bbbb6zz4134E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4134E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4134E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4134E(Test__ZN4bbbb6zz4134E, "_ZN4bbbb6zz4134E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy134E;
static Base_Class bases__ZN4bbbb6zz4134E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy134E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4134E = {  "_ZN4bbbb6zz4134E", // class name
  bases__ZN4bbbb6zz4134E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy234  : ::bbbb::xx34 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy234E) C1{ BC2{ BC3{ FL} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy234E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy234E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy234E, buf);
    ::bbbb::yy234 &lv = *(new (buf) ::bbbb::yy234());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy234E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy234E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*), 0, "_ZN4bbbb5yy234E");
    check_base_class_offset(lv, (::bbbb::xx34*), 0, "_ZN4bbbb5yy234E");
    check_field_offset(lv, fc, 12, "_ZN4bbbb5yy234E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy234E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy234E(Test__ZN4bbbb5yy234E, "_ZN4bbbb5yy234E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
static Base_Class bases__ZN4bbbb5yy234E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy234E = {  "_ZN4bbbb5yy234E", // class name
  bases__ZN4bbbb5yy234E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0234  : ::bbbb::yy234 {
};
//SIG(1 _ZN4bbbb6zz0234E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0234E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0234E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0234E, buf);
    ::bbbb::zz0234 &lv = *(new (buf) ::bbbb::zz0234());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0234E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0234E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz0234E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz0234E");
    check_base_class_offset(lv, (::bbbb::yy234*), 0, "_ZN4bbbb6zz0234E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0234E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0234E(Test__ZN4bbbb6zz0234E, "_ZN4bbbb6zz0234E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy234E;
static Base_Class bases__ZN4bbbb6zz0234E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy234E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0234E = {  "_ZN4bbbb6zz0234E", // class name
  bases__ZN4bbbb6zz0234E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1234  : ::bbbb::yy234 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1234E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1234E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1234E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz1234E, buf);
    ::bbbb::zz1234 &lv = *(new (buf) ::bbbb::zz1234());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz1234E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1234E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz1234E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz1234E");
    check_base_class_offset(lv, (::bbbb::yy234*), 0, "_ZN4bbbb6zz1234E");
    check_field_offset(lv, fd, 14, "_ZN4bbbb6zz1234E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1234E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1234E(Test__ZN4bbbb6zz1234E, "_ZN4bbbb6zz1234E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy234E;
static Base_Class bases__ZN4bbbb6zz1234E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy234E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1234E = {  "_ZN4bbbb6zz1234E", // class name
  bases__ZN4bbbb6zz1234E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2234  : ::bbbb::yy234 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2234E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2234E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2234E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz2234E, buf);
    ::bbbb::zz2234 &lv = *(new (buf) ::bbbb::zz2234());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz2234E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2234E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz2234E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz2234E");
    check_base_class_offset(lv, (::bbbb::yy234*), 0, "_ZN4bbbb6zz2234E");
    check_field_offset(lv, fd, 14, "_ZN4bbbb6zz2234E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2234E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2234E(Test__ZN4bbbb6zz2234E, "_ZN4bbbb6zz2234E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy234E;
static Base_Class bases__ZN4bbbb6zz2234E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy234E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2234E = {  "_ZN4bbbb6zz2234E", // class name
  bases__ZN4bbbb6zz2234E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3234  : ::bbbb::yy234 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3234E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3234E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3234E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3234E, buf);
    ::bbbb::zz3234 &lv = *(new (buf) ::bbbb::zz3234());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3234E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3234E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz3234E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz3234E");
    check_base_class_offset(lv, (::bbbb::yy234*), 0, "_ZN4bbbb6zz3234E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3234E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3234E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3234E(Test__ZN4bbbb6zz3234E, "_ZN4bbbb6zz3234E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy234E;
static Base_Class bases__ZN4bbbb6zz3234E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy234E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3234E = {  "_ZN4bbbb6zz3234E", // class name
  bases__ZN4bbbb6zz3234E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4234  : ::bbbb::yy234 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4234E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4234E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4234E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4234E, buf);
    ::bbbb::zz4234 &lv = *(new (buf) ::bbbb::zz4234());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4234E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4234E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz4234E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy234*), 0, "_ZN4bbbb6zz4234E");
    check_base_class_offset(lv, (::bbbb::yy234*), 0, "_ZN4bbbb6zz4234E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4234E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4234E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4234E(Test__ZN4bbbb6zz4234E, "_ZN4bbbb6zz4234E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy234E;
static Base_Class bases__ZN4bbbb6zz4234E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy234E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4234E = {  "_ZN4bbbb6zz4234E", // class name
  bases__ZN4bbbb6zz4234E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy334  : ::bbbb::xx34 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy334E) C1{ BC2{ BC3{ FL} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy334E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy334E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy334E, buf);
    ::bbbb::yy334 &lv = *(new (buf) ::bbbb::yy334());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy334E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy334E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*), 0, "_ZN4bbbb5yy334E");
    check_base_class_offset(lv, (::bbbb::xx34*), 0, "_ZN4bbbb5yy334E");
    check_field_offset(lv, fc, 12, "_ZN4bbbb5yy334E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy334E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy334E(Test__ZN4bbbb5yy334E, "_ZN4bbbb5yy334E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
static Base_Class bases__ZN4bbbb5yy334E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy334E = {  "_ZN4bbbb5yy334E", // class name
  bases__ZN4bbbb5yy334E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0334  : ::bbbb::yy334 {
};
//SIG(1 _ZN4bbbb6zz0334E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0334E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0334E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0334E, buf);
    ::bbbb::zz0334 &lv = *(new (buf) ::bbbb::zz0334());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0334E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0334E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz0334E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz0334E");
    check_base_class_offset(lv, (::bbbb::yy334*), 0, "_ZN4bbbb6zz0334E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0334E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0334E(Test__ZN4bbbb6zz0334E, "_ZN4bbbb6zz0334E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy334E;
static Base_Class bases__ZN4bbbb6zz0334E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy334E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0334E = {  "_ZN4bbbb6zz0334E", // class name
  bases__ZN4bbbb6zz0334E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1334  : ::bbbb::yy334 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1334E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1334E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1334E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1334E, buf);
    ::bbbb::zz1334 &lv = *(new (buf) ::bbbb::zz1334());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1334E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1334E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz1334E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz1334E");
    check_base_class_offset(lv, (::bbbb::yy334*), 0, "_ZN4bbbb6zz1334E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1334E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1334E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1334E(Test__ZN4bbbb6zz1334E, "_ZN4bbbb6zz1334E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy334E;
static Base_Class bases__ZN4bbbb6zz1334E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy334E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1334E = {  "_ZN4bbbb6zz1334E", // class name
  bases__ZN4bbbb6zz1334E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2334  : ::bbbb::yy334 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2334E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2334E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2334E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2334E, buf);
    ::bbbb::zz2334 &lv = *(new (buf) ::bbbb::zz2334());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2334E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2334E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz2334E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz2334E");
    check_base_class_offset(lv, (::bbbb::yy334*), 0, "_ZN4bbbb6zz2334E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2334E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2334E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2334E(Test__ZN4bbbb6zz2334E, "_ZN4bbbb6zz2334E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy334E;
static Base_Class bases__ZN4bbbb6zz2334E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy334E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2334E = {  "_ZN4bbbb6zz2334E", // class name
  bases__ZN4bbbb6zz2334E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3334  : ::bbbb::yy334 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3334E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3334E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3334E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3334E, buf);
    ::bbbb::zz3334 &lv = *(new (buf) ::bbbb::zz3334());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3334E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3334E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz3334E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz3334E");
    check_base_class_offset(lv, (::bbbb::yy334*), 0, "_ZN4bbbb6zz3334E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3334E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3334E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3334E(Test__ZN4bbbb6zz3334E, "_ZN4bbbb6zz3334E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy334E;
static Base_Class bases__ZN4bbbb6zz3334E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy334E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3334E = {  "_ZN4bbbb6zz3334E", // class name
  bases__ZN4bbbb6zz3334E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4334  : ::bbbb::yy334 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4334E) C1{ BC2{ BC3{ BC4{ FL} Fi} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4334E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4334E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4334E, buf);
    ::bbbb::zz4334 &lv = *(new (buf) ::bbbb::zz4334());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4334E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4334E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz4334E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy334*), 0, "_ZN4bbbb6zz4334E");
    check_base_class_offset(lv, (::bbbb::yy334*), 0, "_ZN4bbbb6zz4334E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4334E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4334E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4334E(Test__ZN4bbbb6zz4334E, "_ZN4bbbb6zz4334E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy334E;
static Base_Class bases__ZN4bbbb6zz4334E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy334E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4334E = {  "_ZN4bbbb6zz4334E", // class name
  bases__ZN4bbbb6zz4334E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy434  : ::bbbb::xx34 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy434E) C1{ BC2{ BC3{ FL} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy434E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy434E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb5yy434E, buf);
    ::bbbb::yy434 &lv = *(new (buf) ::bbbb::yy434());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb5yy434E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy434E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*), 0, "_ZN4bbbb5yy434E");
    check_base_class_offset(lv, (::bbbb::xx34*), 0, "_ZN4bbbb5yy434E");
    check_field_offset(lv, fc, ABISELECT(16,12), "_ZN4bbbb5yy434E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy434E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy434E(Test__ZN4bbbb5yy434E, "_ZN4bbbb5yy434E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
static Base_Class bases__ZN4bbbb5yy434E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy434E = {  "_ZN4bbbb5yy434E", // class name
  bases__ZN4bbbb5yy434E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0434  : ::bbbb::yy434 {
};
//SIG(1 _ZN4bbbb6zz0434E) C1{ BC2{ BC3{ BC4{ FL} Fi} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0434E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0434E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz0434E, buf);
    ::bbbb::zz0434 &lv = *(new (buf) ::bbbb::zz0434());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz0434E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0434E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz0434E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz0434E");
    check_base_class_offset(lv, (::bbbb::yy434*), 0, "_ZN4bbbb6zz0434E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0434E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0434E(Test__ZN4bbbb6zz0434E, "_ZN4bbbb6zz0434E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy434E;
static Base_Class bases__ZN4bbbb6zz0434E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy434E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0434E = {  "_ZN4bbbb6zz0434E", // class name
  bases__ZN4bbbb6zz0434E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1434  : ::bbbb::yy434 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1434E) C1{ BC2{ BC3{ BC4{ FL} Fi} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1434E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1434E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz1434E, buf);
    ::bbbb::zz1434 &lv = *(new (buf) ::bbbb::zz1434());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz1434E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1434E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz1434E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz1434E");
    check_base_class_offset(lv, (::bbbb::yy434*), 0, "_ZN4bbbb6zz1434E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz1434E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1434E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1434E(Test__ZN4bbbb6zz1434E, "_ZN4bbbb6zz1434E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy434E;
static Base_Class bases__ZN4bbbb6zz1434E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy434E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1434E = {  "_ZN4bbbb6zz1434E", // class name
  bases__ZN4bbbb6zz1434E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2434  : ::bbbb::yy434 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2434E) C1{ BC2{ BC3{ BC4{ FL} Fi} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2434E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2434E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz2434E, buf);
    ::bbbb::zz2434 &lv = *(new (buf) ::bbbb::zz2434());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz2434E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2434E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz2434E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz2434E");
    check_base_class_offset(lv, (::bbbb::yy434*), 0, "_ZN4bbbb6zz2434E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz2434E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2434E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2434E(Test__ZN4bbbb6zz2434E, "_ZN4bbbb6zz2434E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy434E;
static Base_Class bases__ZN4bbbb6zz2434E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy434E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2434E = {  "_ZN4bbbb6zz2434E", // class name
  bases__ZN4bbbb6zz2434E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3434  : ::bbbb::yy434 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3434E) C1{ BC2{ BC3{ BC4{ FL} Fi} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3434E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3434E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,7)];
    init_test(&cd__ZN4bbbb6zz3434E, buf);
    ::bbbb::zz3434 &lv = *(new (buf) ::bbbb::zz3434());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,24), "sizeof(_ZN4bbbb6zz3434E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3434E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz3434E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz3434E");
    check_base_class_offset(lv, (::bbbb::yy434*), 0, "_ZN4bbbb6zz3434E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz3434E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3434E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3434E(Test__ZN4bbbb6zz3434E, "_ZN4bbbb6zz3434E", ABISELECT(32,24));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy434E;
static Base_Class bases__ZN4bbbb6zz3434E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy434E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3434E = {  "_ZN4bbbb6zz3434E", // class name
  bases__ZN4bbbb6zz3434E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,24), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4434  : ::bbbb::yy434 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4434E) C1{ BC2{ BC3{ BC4{ FL} Fi} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4434E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4434E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz4434E, buf);
    ::bbbb::zz4434 &lv = *(new (buf) ::bbbb::zz4434());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz4434E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4434E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz4434E");
    check_base_class_offset(lv, (::bbbb::xx34*)(::bbbb::yy434*), 0, "_ZN4bbbb6zz4434E");
    check_base_class_offset(lv, (::bbbb::yy434*), 0, "_ZN4bbbb6zz4434E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz4434E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4434E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4434E(Test__ZN4bbbb6zz4434E, "_ZN4bbbb6zz4434E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx34E;
extern Class_Descriptor cd__ZN4bbbb5yy434E;
static Base_Class bases__ZN4bbbb6zz4434E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx34E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy434E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4434E = {  "_ZN4bbbb6zz4434E", // class name
  bases__ZN4bbbb6zz4434E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  xx44  : ::bbbb::ww4 {
  double fb;
};
//SIG(-1 _ZN4bbbb4xx44E) C1{ BC2{ FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb4xx44E()
{
  extern Class_Descriptor cd__ZN4bbbb4xx44E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb4xx44E, buf);
    ::bbbb::xx44 &lv = *(new (buf) ::bbbb::xx44());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb4xx44E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb4xx44E)");
    check_base_class_offset(lv, (::bbbb::ww4*), 0, "_ZN4bbbb4xx44E");
    check_field_offset(lv, fb, 8, "_ZN4bbbb4xx44E.fb");
    test_class_info(&lv, &cd__ZN4bbbb4xx44E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb4xx44E(Test__ZN4bbbb4xx44E, "_ZN4bbbb4xx44E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
static Base_Class bases__ZN4bbbb4xx44E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb4xx44E = {  "_ZN4bbbb4xx44E", // class name
  bases__ZN4bbbb4xx44E, 1,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy044  : ::bbbb::xx44 {
};
//SIG(-1 _ZN4bbbb5yy044E) C1{ BC2{ BC3{ FL} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy044E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy044E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb5yy044E, buf);
    ::bbbb::yy044 &lv = *(new (buf) ::bbbb::yy044());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb5yy044E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy044E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*), 0, "_ZN4bbbb5yy044E");
    check_base_class_offset(lv, (::bbbb::xx44*), 0, "_ZN4bbbb5yy044E");
    test_class_info(&lv, &cd__ZN4bbbb5yy044E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy044E(Test__ZN4bbbb5yy044E, "_ZN4bbbb5yy044E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
static Base_Class bases__ZN4bbbb5yy044E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy044E = {  "_ZN4bbbb5yy044E", // class name
  bases__ZN4bbbb5yy044E, 2,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0044  : ::bbbb::yy044 {
};
//SIG(1 _ZN4bbbb6zz0044E) C1{ BC2{ BC3{ BC4{ FL} FL}}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0044E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0044E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(3,5)];
    init_test(&cd__ZN4bbbb6zz0044E, buf);
    ::bbbb::zz0044 &lv = *(new (buf) ::bbbb::zz0044());
    lvp = (void*)&lv;
    check2(sizeof(lv), 16, "sizeof(_ZN4bbbb6zz0044E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0044E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz0044E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz0044E");
    check_base_class_offset(lv, (::bbbb::yy044*), 0, "_ZN4bbbb6zz0044E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0044E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0044E(Test__ZN4bbbb6zz0044E, "_ZN4bbbb6zz0044E", 16);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy044E;
static Base_Class bases__ZN4bbbb6zz0044E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy044E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0044E = {  "_ZN4bbbb6zz0044E", // class name
  bases__ZN4bbbb6zz0044E, 3,
  0, // no vftv
  0, //no vtt
  16, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1044  : ::bbbb::yy044 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1044E) C1{ BC2{ BC3{ BC4{ FL} FL}} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1044E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1044E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1044E, buf);
    ::bbbb::zz1044 &lv = *(new (buf) ::bbbb::zz1044());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1044E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1044E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz1044E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz1044E");
    check_base_class_offset(lv, (::bbbb::yy044*), 0, "_ZN4bbbb6zz1044E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz1044E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1044E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1044E(Test__ZN4bbbb6zz1044E, "_ZN4bbbb6zz1044E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy044E;
static Base_Class bases__ZN4bbbb6zz1044E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy044E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1044E = {  "_ZN4bbbb6zz1044E", // class name
  bases__ZN4bbbb6zz1044E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2044  : ::bbbb::yy044 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2044E) C1{ BC2{ BC3{ BC4{ FL} FL}} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2044E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2044E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2044E, buf);
    ::bbbb::zz2044 &lv = *(new (buf) ::bbbb::zz2044());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2044E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2044E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz2044E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz2044E");
    check_base_class_offset(lv, (::bbbb::yy044*), 0, "_ZN4bbbb6zz2044E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz2044E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2044E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2044E(Test__ZN4bbbb6zz2044E, "_ZN4bbbb6zz2044E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy044E;
static Base_Class bases__ZN4bbbb6zz2044E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy044E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2044E = {  "_ZN4bbbb6zz2044E", // class name
  bases__ZN4bbbb6zz2044E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3044  : ::bbbb::yy044 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3044E) C1{ BC2{ BC3{ BC4{ FL} FL}} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3044E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3044E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz3044E, buf);
    ::bbbb::zz3044 &lv = *(new (buf) ::bbbb::zz3044());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz3044E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3044E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz3044E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz3044E");
    check_base_class_offset(lv, (::bbbb::yy044*), 0, "_ZN4bbbb6zz3044E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz3044E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3044E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3044E(Test__ZN4bbbb6zz3044E, "_ZN4bbbb6zz3044E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy044E;
static Base_Class bases__ZN4bbbb6zz3044E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy044E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3044E = {  "_ZN4bbbb6zz3044E", // class name
  bases__ZN4bbbb6zz3044E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4044  : ::bbbb::yy044 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4044E) C1{ BC2{ BC3{ BC4{ FL} FL}} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4044E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4044E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz4044E, buf);
    ::bbbb::zz4044 &lv = *(new (buf) ::bbbb::zz4044());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz4044E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4044E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz4044E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy044*), 0, "_ZN4bbbb6zz4044E");
    check_base_class_offset(lv, (::bbbb::yy044*), 0, "_ZN4bbbb6zz4044E");
    check_field_offset(lv, fd, 16, "_ZN4bbbb6zz4044E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4044E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4044E(Test__ZN4bbbb6zz4044E, "_ZN4bbbb6zz4044E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy044E;
static Base_Class bases__ZN4bbbb6zz4044E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy044E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4044E = {  "_ZN4bbbb6zz4044E", // class name
  bases__ZN4bbbb6zz4044E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy144  : ::bbbb::xx44 {
  char fc;
};
//SIG(-1 _ZN4bbbb5yy144E) C1{ BC2{ BC3{ FL} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy144E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy144E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb5yy144E, buf);
    ::bbbb::yy144 &lv = *(new (buf) ::bbbb::yy144());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb5yy144E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy144E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*), 0, "_ZN4bbbb5yy144E");
    check_base_class_offset(lv, (::bbbb::xx44*), 0, "_ZN4bbbb5yy144E");
    check_field_offset(lv, fc, 16, "_ZN4bbbb5yy144E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy144E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy144E(Test__ZN4bbbb5yy144E, "_ZN4bbbb5yy144E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
static Base_Class bases__ZN4bbbb5yy144E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy144E = {  "_ZN4bbbb5yy144E", // class name
  bases__ZN4bbbb5yy144E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0144  : ::bbbb::yy144 {
};
//SIG(1 _ZN4bbbb6zz0144E) C1{ BC2{ BC3{ BC4{ FL} FL} Fc}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0144E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0144E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz0144E, buf);
    ::bbbb::zz0144 &lv = *(new (buf) ::bbbb::zz0144());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz0144E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0144E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz0144E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz0144E");
    check_base_class_offset(lv, (::bbbb::yy144*), 0, "_ZN4bbbb6zz0144E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0144E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0144E(Test__ZN4bbbb6zz0144E, "_ZN4bbbb6zz0144E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy144E;
static Base_Class bases__ZN4bbbb6zz0144E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy144E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0144E = {  "_ZN4bbbb6zz0144E", // class name
  bases__ZN4bbbb6zz0144E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1144  : ::bbbb::yy144 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1144E) C1{ BC2{ BC3{ BC4{ FL} FL} Fc} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1144E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1144E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1144E, buf);
    ::bbbb::zz1144 &lv = *(new (buf) ::bbbb::zz1144());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1144E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1144E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz1144E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz1144E");
    check_base_class_offset(lv, (::bbbb::yy144*), 0, "_ZN4bbbb6zz1144E");
    check_field_offset(lv, fd, 17, "_ZN4bbbb6zz1144E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1144E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1144E(Test__ZN4bbbb6zz1144E, "_ZN4bbbb6zz1144E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy144E;
static Base_Class bases__ZN4bbbb6zz1144E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy144E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1144E = {  "_ZN4bbbb6zz1144E", // class name
  bases__ZN4bbbb6zz1144E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2144  : ::bbbb::yy144 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2144E) C1{ BC2{ BC3{ BC4{ FL} FL} Fc} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2144E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2144E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2144E, buf);
    ::bbbb::zz2144 &lv = *(new (buf) ::bbbb::zz2144());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2144E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2144E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz2144E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz2144E");
    check_base_class_offset(lv, (::bbbb::yy144*), 0, "_ZN4bbbb6zz2144E");
    check_field_offset(lv, fd, 18, "_ZN4bbbb6zz2144E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2144E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2144E(Test__ZN4bbbb6zz2144E, "_ZN4bbbb6zz2144E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy144E;
static Base_Class bases__ZN4bbbb6zz2144E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy144E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2144E = {  "_ZN4bbbb6zz2144E", // class name
  bases__ZN4bbbb6zz2144E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3144  : ::bbbb::yy144 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3144E) C1{ BC2{ BC3{ BC4{ FL} FL} Fc} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3144E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3144E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz3144E, buf);
    ::bbbb::zz3144 &lv = *(new (buf) ::bbbb::zz3144());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz3144E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3144E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz3144E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz3144E");
    check_base_class_offset(lv, (::bbbb::yy144*), 0, "_ZN4bbbb6zz3144E");
    check_field_offset(lv, fd, 20, "_ZN4bbbb6zz3144E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3144E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3144E(Test__ZN4bbbb6zz3144E, "_ZN4bbbb6zz3144E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy144E;
static Base_Class bases__ZN4bbbb6zz3144E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy144E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3144E = {  "_ZN4bbbb6zz3144E", // class name
  bases__ZN4bbbb6zz3144E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4144  : ::bbbb::yy144 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4144E) C1{ BC2{ BC3{ BC4{ FL} FL} Fc} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4144E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4144E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz4144E, buf);
    ::bbbb::zz4144 &lv = *(new (buf) ::bbbb::zz4144());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz4144E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4144E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz4144E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy144*), 0, "_ZN4bbbb6zz4144E");
    check_base_class_offset(lv, (::bbbb::yy144*), 0, "_ZN4bbbb6zz4144E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz4144E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4144E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4144E(Test__ZN4bbbb6zz4144E, "_ZN4bbbb6zz4144E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy144E;
static Base_Class bases__ZN4bbbb6zz4144E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy144E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4144E = {  "_ZN4bbbb6zz4144E", // class name
  bases__ZN4bbbb6zz4144E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy244  : ::bbbb::xx44 {
  short fc;
};
//SIG(-1 _ZN4bbbb5yy244E) C1{ BC2{ BC3{ FL} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy244E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy244E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb5yy244E, buf);
    ::bbbb::yy244 &lv = *(new (buf) ::bbbb::yy244());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb5yy244E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy244E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*), 0, "_ZN4bbbb5yy244E");
    check_base_class_offset(lv, (::bbbb::xx44*), 0, "_ZN4bbbb5yy244E");
    check_field_offset(lv, fc, 16, "_ZN4bbbb5yy244E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy244E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy244E(Test__ZN4bbbb5yy244E, "_ZN4bbbb5yy244E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
static Base_Class bases__ZN4bbbb5yy244E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy244E = {  "_ZN4bbbb5yy244E", // class name
  bases__ZN4bbbb5yy244E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0244  : ::bbbb::yy244 {
};
//SIG(1 _ZN4bbbb6zz0244E) C1{ BC2{ BC3{ BC4{ FL} FL} Fs}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0244E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0244E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz0244E, buf);
    ::bbbb::zz0244 &lv = *(new (buf) ::bbbb::zz0244());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz0244E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0244E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz0244E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz0244E");
    check_base_class_offset(lv, (::bbbb::yy244*), 0, "_ZN4bbbb6zz0244E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0244E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0244E(Test__ZN4bbbb6zz0244E, "_ZN4bbbb6zz0244E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy244E;
static Base_Class bases__ZN4bbbb6zz0244E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy244E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0244E = {  "_ZN4bbbb6zz0244E", // class name
  bases__ZN4bbbb6zz0244E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1244  : ::bbbb::yy244 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1244E) C1{ BC2{ BC3{ BC4{ FL} FL} Fs} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1244E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1244E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz1244E, buf);
    ::bbbb::zz1244 &lv = *(new (buf) ::bbbb::zz1244());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz1244E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1244E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz1244E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz1244E");
    check_base_class_offset(lv, (::bbbb::yy244*), 0, "_ZN4bbbb6zz1244E");
    check_field_offset(lv, fd, 18, "_ZN4bbbb6zz1244E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1244E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1244E(Test__ZN4bbbb6zz1244E, "_ZN4bbbb6zz1244E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy244E;
static Base_Class bases__ZN4bbbb6zz1244E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy244E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1244E = {  "_ZN4bbbb6zz1244E", // class name
  bases__ZN4bbbb6zz1244E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2244  : ::bbbb::yy244 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2244E) C1{ BC2{ BC3{ BC4{ FL} FL} Fs} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2244E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2244E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz2244E, buf);
    ::bbbb::zz2244 &lv = *(new (buf) ::bbbb::zz2244());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz2244E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2244E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz2244E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz2244E");
    check_base_class_offset(lv, (::bbbb::yy244*), 0, "_ZN4bbbb6zz2244E");
    check_field_offset(lv, fd, 18, "_ZN4bbbb6zz2244E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2244E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2244E(Test__ZN4bbbb6zz2244E, "_ZN4bbbb6zz2244E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy244E;
static Base_Class bases__ZN4bbbb6zz2244E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy244E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2244E = {  "_ZN4bbbb6zz2244E", // class name
  bases__ZN4bbbb6zz2244E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3244  : ::bbbb::yy244 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3244E) C1{ BC2{ BC3{ BC4{ FL} FL} Fs} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3244E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3244E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz3244E, buf);
    ::bbbb::zz3244 &lv = *(new (buf) ::bbbb::zz3244());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz3244E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3244E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz3244E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz3244E");
    check_base_class_offset(lv, (::bbbb::yy244*), 0, "_ZN4bbbb6zz3244E");
    check_field_offset(lv, fd, 20, "_ZN4bbbb6zz3244E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3244E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3244E(Test__ZN4bbbb6zz3244E, "_ZN4bbbb6zz3244E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy244E;
static Base_Class bases__ZN4bbbb6zz3244E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy244E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3244E = {  "_ZN4bbbb6zz3244E", // class name
  bases__ZN4bbbb6zz3244E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4244  : ::bbbb::yy244 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4244E) C1{ BC2{ BC3{ BC4{ FL} FL} Fs} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4244E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4244E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz4244E, buf);
    ::bbbb::zz4244 &lv = *(new (buf) ::bbbb::zz4244());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz4244E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4244E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz4244E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy244*), 0, "_ZN4bbbb6zz4244E");
    check_base_class_offset(lv, (::bbbb::yy244*), 0, "_ZN4bbbb6zz4244E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz4244E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4244E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4244E(Test__ZN4bbbb6zz4244E, "_ZN4bbbb6zz4244E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy244E;
static Base_Class bases__ZN4bbbb6zz4244E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy244E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4244E = {  "_ZN4bbbb6zz4244E", // class name
  bases__ZN4bbbb6zz4244E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy344  : ::bbbb::xx44 {
  int fc;
};
//SIG(-1 _ZN4bbbb5yy344E) C1{ BC2{ BC3{ FL} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy344E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy344E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb5yy344E, buf);
    ::bbbb::yy344 &lv = *(new (buf) ::bbbb::yy344());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb5yy344E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy344E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*), 0, "_ZN4bbbb5yy344E");
    check_base_class_offset(lv, (::bbbb::xx44*), 0, "_ZN4bbbb5yy344E");
    check_field_offset(lv, fc, 16, "_ZN4bbbb5yy344E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy344E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy344E(Test__ZN4bbbb5yy344E, "_ZN4bbbb5yy344E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
static Base_Class bases__ZN4bbbb5yy344E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy344E = {  "_ZN4bbbb5yy344E", // class name
  bases__ZN4bbbb5yy344E, 2,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0344  : ::bbbb::yy344 {
};
//SIG(1 _ZN4bbbb6zz0344E) C1{ BC2{ BC3{ BC4{ FL} FL} Fi}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0344E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0344E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,6)];
    init_test(&cd__ZN4bbbb6zz0344E, buf);
    ::bbbb::zz0344 &lv = *(new (buf) ::bbbb::zz0344());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(_ZN4bbbb6zz0344E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0344E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz0344E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz0344E");
    check_base_class_offset(lv, (::bbbb::yy344*), 0, "_ZN4bbbb6zz0344E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0344E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0344E(Test__ZN4bbbb6zz0344E, "_ZN4bbbb6zz0344E", ABISELECT(24,20));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy344E;
static Base_Class bases__ZN4bbbb6zz0344E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy344E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0344E = {  "_ZN4bbbb6zz0344E", // class name
  bases__ZN4bbbb6zz0344E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(24,20), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1344  : ::bbbb::yy344 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1344E) C1{ BC2{ BC3{ BC4{ FL} FL} Fi} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1344E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1344E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz1344E, buf);
    ::bbbb::zz1344 &lv = *(new (buf) ::bbbb::zz1344());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz1344E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1344E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz1344E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz1344E");
    check_base_class_offset(lv, (::bbbb::yy344*), 0, "_ZN4bbbb6zz1344E");
    check_field_offset(lv, fd, 20, "_ZN4bbbb6zz1344E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1344E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1344E(Test__ZN4bbbb6zz1344E, "_ZN4bbbb6zz1344E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy344E;
static Base_Class bases__ZN4bbbb6zz1344E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy344E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1344E = {  "_ZN4bbbb6zz1344E", // class name
  bases__ZN4bbbb6zz1344E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2344  : ::bbbb::yy344 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2344E) C1{ BC2{ BC3{ BC4{ FL} FL} Fi} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2344E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2344E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz2344E, buf);
    ::bbbb::zz2344 &lv = *(new (buf) ::bbbb::zz2344());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz2344E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2344E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz2344E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz2344E");
    check_base_class_offset(lv, (::bbbb::yy344*), 0, "_ZN4bbbb6zz2344E");
    check_field_offset(lv, fd, 20, "_ZN4bbbb6zz2344E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2344E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2344E(Test__ZN4bbbb6zz2344E, "_ZN4bbbb6zz2344E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy344E;
static Base_Class bases__ZN4bbbb6zz2344E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy344E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2344E = {  "_ZN4bbbb6zz2344E", // class name
  bases__ZN4bbbb6zz2344E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3344  : ::bbbb::yy344 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3344E) C1{ BC2{ BC3{ BC4{ FL} FL} Fi} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3344E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3344E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz3344E, buf);
    ::bbbb::zz3344 &lv = *(new (buf) ::bbbb::zz3344());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz3344E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3344E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz3344E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz3344E");
    check_base_class_offset(lv, (::bbbb::yy344*), 0, "_ZN4bbbb6zz3344E");
    check_field_offset(lv, fd, 20, "_ZN4bbbb6zz3344E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3344E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3344E(Test__ZN4bbbb6zz3344E, "_ZN4bbbb6zz3344E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy344E;
static Base_Class bases__ZN4bbbb6zz3344E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy344E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3344E = {  "_ZN4bbbb6zz3344E", // class name
  bases__ZN4bbbb6zz3344E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4344  : ::bbbb::yy344 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4344E) C1{ BC2{ BC3{ BC4{ FL} FL} Fi} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4344E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4344E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz4344E, buf);
    ::bbbb::zz4344 &lv = *(new (buf) ::bbbb::zz4344());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz4344E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4344E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz4344E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy344*), 0, "_ZN4bbbb6zz4344E");
    check_base_class_offset(lv, (::bbbb::yy344*), 0, "_ZN4bbbb6zz4344E");
    check_field_offset(lv, fd, ABISELECT(24,20), "_ZN4bbbb6zz4344E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4344E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4344E(Test__ZN4bbbb6zz4344E, "_ZN4bbbb6zz4344E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy344E;
static Base_Class bases__ZN4bbbb6zz4344E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy344E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4344E = {  "_ZN4bbbb6zz4344E", // class name
  bases__ZN4bbbb6zz4344E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  yy444  : ::bbbb::xx44 {
  double fc;
};
//SIG(-1 _ZN4bbbb5yy444E) C1{ BC2{ BC3{ FL} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb5yy444E()
{
  extern Class_Descriptor cd__ZN4bbbb5yy444E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb5yy444E, buf);
    ::bbbb::yy444 &lv = *(new (buf) ::bbbb::yy444());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb5yy444E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb5yy444E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*), 0, "_ZN4bbbb5yy444E");
    check_base_class_offset(lv, (::bbbb::xx44*), 0, "_ZN4bbbb5yy444E");
    check_field_offset(lv, fc, 16, "_ZN4bbbb5yy444E.fc");
    test_class_info(&lv, &cd__ZN4bbbb5yy444E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb5yy444E(Test__ZN4bbbb5yy444E, "_ZN4bbbb5yy444E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
static Base_Class bases__ZN4bbbb5yy444E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb5yy444E = {  "_ZN4bbbb5yy444E", // class name
  bases__ZN4bbbb5yy444E, 2,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz0444  : ::bbbb::yy444 {
};
//SIG(1 _ZN4bbbb6zz0444E) C1{ BC2{ BC3{ BC4{ FL} FL} FL}}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz0444E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz0444E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(4,7)];
    init_test(&cd__ZN4bbbb6zz0444E, buf);
    ::bbbb::zz0444 &lv = *(new (buf) ::bbbb::zz0444());
    lvp = (void*)&lv;
    check2(sizeof(lv), 24, "sizeof(_ZN4bbbb6zz0444E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz0444E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz0444E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz0444E");
    check_base_class_offset(lv, (::bbbb::yy444*), 0, "_ZN4bbbb6zz0444E");
    test_class_info(&lv, &cd__ZN4bbbb6zz0444E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz0444E(Test__ZN4bbbb6zz0444E, "_ZN4bbbb6zz0444E", 24);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy444E;
static Base_Class bases__ZN4bbbb6zz0444E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy444E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz0444E = {  "_ZN4bbbb6zz0444E", // class name
  bases__ZN4bbbb6zz0444E, 3,
  0, // no vftv
  0, //no vtt
  24, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz1444  : ::bbbb::yy444 {
  char fd;
};
//SIG(1 _ZN4bbbb6zz1444E) C1{ BC2{ BC3{ BC4{ FL} FL} FL} Fc}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz1444E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz1444E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz1444E, buf);
    ::bbbb::zz1444 &lv = *(new (buf) ::bbbb::zz1444());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz1444E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz1444E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz1444E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz1444E");
    check_base_class_offset(lv, (::bbbb::yy444*), 0, "_ZN4bbbb6zz1444E");
    check_field_offset(lv, fd, 24, "_ZN4bbbb6zz1444E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz1444E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz1444E(Test__ZN4bbbb6zz1444E, "_ZN4bbbb6zz1444E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy444E;
static Base_Class bases__ZN4bbbb6zz1444E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy444E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz1444E = {  "_ZN4bbbb6zz1444E", // class name
  bases__ZN4bbbb6zz1444E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz2444  : ::bbbb::yy444 {
  short fd;
};
//SIG(1 _ZN4bbbb6zz2444E) C1{ BC2{ BC3{ BC4{ FL} FL} FL} Fs}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz2444E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz2444E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz2444E, buf);
    ::bbbb::zz2444 &lv = *(new (buf) ::bbbb::zz2444());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz2444E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz2444E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz2444E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz2444E");
    check_base_class_offset(lv, (::bbbb::yy444*), 0, "_ZN4bbbb6zz2444E");
    check_field_offset(lv, fd, 24, "_ZN4bbbb6zz2444E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz2444E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz2444E(Test__ZN4bbbb6zz2444E, "_ZN4bbbb6zz2444E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy444E;
static Base_Class bases__ZN4bbbb6zz2444E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy444E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz2444E = {  "_ZN4bbbb6zz2444E", // class name
  bases__ZN4bbbb6zz2444E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz3444  : ::bbbb::yy444 {
  int fd;
};
//SIG(1 _ZN4bbbb6zz3444E) C1{ BC2{ BC3{ BC4{ FL} FL} FL} Fi}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz3444E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz3444E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,8)];
    init_test(&cd__ZN4bbbb6zz3444E, buf);
    ::bbbb::zz3444 &lv = *(new (buf) ::bbbb::zz3444());
    lvp = (void*)&lv;
    check2(sizeof(lv), ABISELECT(32,28), "sizeof(_ZN4bbbb6zz3444E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz3444E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz3444E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz3444E");
    check_base_class_offset(lv, (::bbbb::yy444*), 0, "_ZN4bbbb6zz3444E");
    check_field_offset(lv, fd, 24, "_ZN4bbbb6zz3444E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz3444E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz3444E(Test__ZN4bbbb6zz3444E, "_ZN4bbbb6zz3444E", ABISELECT(32,28));

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy444E;
static Base_Class bases__ZN4bbbb6zz3444E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy444E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz3444E = {  "_ZN4bbbb6zz3444E", // class name
  bases__ZN4bbbb6zz3444E, 3,
  0, // no vftv
  0, //no vtt
  ABISELECT(32,28), // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

#ifdef __cplusplus
namespace bbbb { 
struct  zz4444  : ::bbbb::yy444 {
  double fd;
};
//SIG(1 _ZN4bbbb6zz4444E) C1{ BC2{ BC3{ BC4{ FL} FL} FL} FL}
}
namespace bbbb { 
}
static void Test__ZN4bbbb6zz4444E()
{
  extern Class_Descriptor cd__ZN4bbbb6zz4444E;
  void *lvp;
  {
    ABISELECT(double,int) buf[ABISELECT(5,9)];
    init_test(&cd__ZN4bbbb6zz4444E, buf);
    ::bbbb::zz4444 &lv = *(new (buf) ::bbbb::zz4444());
    lvp = (void*)&lv;
    check2(sizeof(lv), 32, "sizeof(_ZN4bbbb6zz4444E)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(_ZN4bbbb6zz4444E)");
    check_base_class_offset(lv, (::bbbb::ww4*)(::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz4444E");
    check_base_class_offset(lv, (::bbbb::xx44*)(::bbbb::yy444*), 0, "_ZN4bbbb6zz4444E");
    check_base_class_offset(lv, (::bbbb::yy444*), 0, "_ZN4bbbb6zz4444E");
    check_field_offset(lv, fd, 24, "_ZN4bbbb6zz4444E.fd");
    test_class_info(&lv, &cd__ZN4bbbb6zz4444E);
  }
  Check_Ctor_Dtor_Calls(lvp);
}
static Arrange_To_Call_Me v_ZN4bbbb6zz4444E(Test__ZN4bbbb6zz4444E, "_ZN4bbbb6zz4444E", 32);

#else // __cplusplus

extern Class_Descriptor cd__ZN4bbbb3ww4E;
extern Class_Descriptor cd__ZN4bbbb4xx44E;
extern Class_Descriptor cd__ZN4bbbb5yy444E;
static Base_Class bases__ZN4bbbb6zz4444E[] = {
  // ofst, vfto, nneg, vtt_idx, base_vtt_idx, init_seq, direct, virtual
  {&cd__ZN4bbbb3ww4E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    1, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb4xx44E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    2, //immediately_derived
  0, 0},
  {&cd__ZN4bbbb5yy444E,    0, //bcp->offset
    -1, //bcp->virtual_function_table_offset
    2, //num_negative_vtable_entries(t, bcp)
    0, //bcp->index_in_construction_vtbl_array
    0, //bcp->base_subarray_index_in_construction_vtbl_array
    -1, //init_seq
    -1, //immediately_derived
  1, 0},
  {0}};
Class_Descriptor cd__ZN4bbbb6zz4444E = {  "_ZN4bbbb6zz4444E", // class name
  bases__ZN4bbbb6zz4444E, 3,
  0, // no vftv
  0, //no vtt
  32, // object size
  {0,0},0, // typeinfo_var
  {0,0},0, // virtual function table var
  2, // offset into main vftv pointed to by object[0]
  {0,0},0, // virtual table table var
  0, // n_initialized_bases
  0, // has_virtual_bases
  0, // has_class_type_fields
  0, // alt-thunk-names
};
#endif // __cplusplus

//============================================================================

